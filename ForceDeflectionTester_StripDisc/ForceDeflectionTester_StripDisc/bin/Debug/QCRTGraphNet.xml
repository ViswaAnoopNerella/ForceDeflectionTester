<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QCRTGraphNet</name>
    </assembly>
    <members>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoBarIndicator">
            <summary>
            The RTAutoBarIndicator is a ChartView derived object that encapsulates all of the chart elements needed to draw a process control
            style bargraph, including a RTProcessVar object, a coordinate system, axes, axes labels, a RTBarIndicator, 
            RTAlarmSymbol alarm symbols, and RTPanelMeter objects for the display of numeric values, alarm status, a title and units strings.  
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.xAxis">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.xAxis2">
            <summary>
            The second x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.yAxis">
            <summary>
            The y-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.yAxis2">
            <summary>
            The second y-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.xAxisLab">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.yAxisLab">
            <summary>
            The y-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.xAxisTitle">
            <summary>
            The x-axis title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.yAxisTitle">
            <summary>
            The y-axis title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.xGrid">
            <summary>
            The x-axis grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.yGrid">
            <summary>
            The y-axis grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.barWidth">
            <summary>
            The barwidth in physical coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.defaultBarWidthFraction">
            <summary>
            The barwidth fraction for multi-bar plots (0.0 to 1.0).
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.plotAreaViewportFraction">
            <summary>
            The plot area fraction (controls the bar width) as a percent of the viewport size.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.barDataValue">
            <summary>
            The numeric label template used to place numeric values on the bars.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.barOrientation">
            <summary>
            The orientation of the bar graph bars int the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.barPlot">
            <summary>
            A reference to the RTBarIndicator associated with the bar graph
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.alarmIndicator">
            <summary>
            A reference to the RTAlarmIndicator object.
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.interiorAxis">
            <summary>
             Set to true and an interior axis is drawn
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.barWidthPixels">
            <summary>
             Set to the pixel width of the bar in the bar plot. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.barEndBulb">
            <summary>
             Set to true for a bar end bulb. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.UpdateCoordinateSystems">
            <summary>
              Update all of the objects with the current coordinate system.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.InitBargraph(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
             Initialize the bar plot.
             </summary>		
             <param name= "orientation">  Specifies the orientation of the chart (ChartObj.VERT_DIR or ChartObj.HORIZ_DIR </param>
             <param name= "bargraphformat">  Specifies the bar graph type. </param>
             <param name= "colr"> Bar graph color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.SetDefaultPlotAttributes(System.Int32,System.Int32,com.quinncurtis.rtgraphnet.RTBarIndicator,System.Drawing.Color)">
            <summary>
             Initialize the bar plot.
             </summary>		
             <param name= "orientation"> The bar orientation. Use VERT_DIR or HORIZ_DIR. </param>
             <param name= "format"> The auto bar format.  </param>
             <param name= "plot">  Specifies the bar graph object. </param>
             <param name= "colr"> Bar graph color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.GetAxisRect(com.quinncurtis.chart2dnet.AxisLabels)">
            <summary>
            Returns the bounding box of an axis, and axis labels object.
            </summary>
            <param name="lab">Axis labels object</param>
            <returns>Returns the union of the axis and axis labels bounding boxes.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BuildChart">
            <summary>
             Builds the bar graph.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.FormatOptions(System.Int32)">
            <summary>
             Format options for the class, if applicatble.
             </summary>
             <param name= "format">  Graph format. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the bar graph using the passed in ChartView object.
             <param name= "chartVu"> A ChartView object that the bar graph is to be drawn in. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.UpdateBarIndicator(System.Double,System.Boolean)">
            <summary>
             Update the bar graph with a new value.
             <param name= "value"> New value. </param>
             <param name= "updatedraw"> True and the bar graph is immediately updated. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.XAxis">
            <summary>
            Get the x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.XAxis2">
            <summary>
            Get the second x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.YAxis">
            <summary>
            Get the y-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.YAxis2">
            <summary>
            Get the second y-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.XAxisLab">
            <summary>
            Get the x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.YAxisLab">
            <summary>
            Get the y-axis labels object. Accessible only after BuildGrap
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.XAxisTitle">
            <summary> 
            Get the x-axis title object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.YAxisTitle">
            <summary>
            Get the y-axis title  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.XGrid">
            <summary>
            Get the x-axis grid  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.YGrid">
            <summary>
            Get the y-axis grid  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarDataValue">
            <summary>
            Get the numeric label template  object used to place numeric values on the bars.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarOrientation">
            <summary>
            Get/Set the orientation of the  chart.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarAttributes">
            <summary>
             Sets the  line color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarFillColor">
            <summary>
             Sets the fill color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarLineWidth">
            <summary>
             Sets the line width for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarWidth">
            <summary>
            Set/Get the bar width.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarPlot">
            <summary>
            Get a reference to the RTBarIndicator object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.AlarmIndicator">
            <summary>
            Get a reference to the RTAlarmIndicator object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.DefaultBarWidthFraction">
            <summary>
            The actual bar width as a fraction of the bar space associated with it.
            </summary>   
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.PlotAreaViewportFraction">
            <summary>
            The plot area fraction (controls the bar width) as a percent of the viewport size.
            </summary>   
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.InteriorAxis">
            <summary>
             Set/Get to true and an interior axis is drawn
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarWidthPixels">
            <summary>
             Set/Get to the pixel width of the bar in the bar plot. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.BarEndBulb">
            <summary>
             Set/Get to true for a bar end bulb. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoBarIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoClockIndicator">
            <summary>
            The RTAutoClockIndicator is a ChartView derived object that encapsulates all of the chart elements needed to draw a
            clock, including a RTComboProcessVar object, a meter coordinate system, meter axes, meter axes labels,  RTMeterNeedleIndicators, and
             RTPanelMeter objects for the display of time and date, title and units strings.  
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.meterAxis">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.meterAxisLab">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.clockComboProcessVar">
            <summary>
            A reference to the RTComboProcessVar associated with the clock
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.timePanelMeter">
            <summary>
            A reference to the RTNumericPanelMeter numeric readout
            </summary>       
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.datePanelMeter">
            <summary>
            A reference to the RTAlarmPanelMeter alarm readout
            </summary>  
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.updateCount">
            <summary>
             Keep track of update counts
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.startArcAngle">
            <summary>
             Values used to initialize the RTMeterCoordinates boject for a circular clock coordinate system.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.meterFrame">
            <summary>
             The clocks coordinate system.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.meterNeedleIndicator1">
            <summary>
            A reference to the RTMeterNeedleIndicator associated with the clock
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.clockInterior">
            <summary>
            A circular background object for the clock interior.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.SetMeterFrame(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
             Initialize a clock object using he specified parameters.
            </summary> 
            <param name="startarcangle"> Specifies the starting arc angle position of the clock arc in degrees.</param>
            <param name="arcextent"> Specifies the extent of the clock arc in degrees. The default clock arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent. </param>
            <param name="startarcscale"> Specifies the scaling value associated with the startArcAngle position of the 
             clock arc.</param>
            <param name="endarcscale"> Specifies the scaling value associated with the ending position of the clock arc. </param>
            <param name="arcdirection"> Specifies the direction of the arcExtent. The default arcDirectionPositive 
             value of false clock arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the clock arc extend in a positive (counter-clockwise) direction.</param>
            <param name="x"> Specifies x-position of the center of the clock arc in plot area normalized coordinates.</param>
            <param name="y"> Specifies y-position of the center of the clock arc in plot area normalized coordinates. </param>
            <param name="arcradius"> Specifies radius of the clock arc in plot area normalized coordinates. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.UpdateMeterFrames">
            <summary>
              Update all of the objects with the current coordinate system.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.InitRTProcessVar">
            <summary>
            Initialize the RTProcessVar associated with the clock.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.InitClock(System.Drawing.Color)">
            <summary>
             Initialize the clock.
             </summary>		
             <param name= "colr"> clock needle color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.SetDefaultPlotAttributes(com.quinncurtis.rtgraphnet.RTMeterIndicator,System.Drawing.Color)">
            <summary>
             Initialize the bar plot.
             </summary>		
             <param name= "plot">  Specifies the clock object. </param>
             <param name= "colr"> clock color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.InitStrings(System.String,System.String)">
            <summary>
             Initializes the clock title and units strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "units">  The units string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.FormatOptions(System.Int32)">
            <summary>
             Specify one of three different dial formats
             </summary>		
             <param name= "format">  Format number (0 .. 2). </param>
             
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.BuildChart">
            <summary>
             Builds the clock.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the clock using the passed in ChartView object.
             <param name= "chartVu"> A ChartView object that the clock is to be drawn in. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.UpdateClock(System.DateTime,System.Boolean)">
            <summary>
             Update the clock with a new value.
             <param name= "time"> Time to display. </param>
             <param name= "updatedraw"> True and the clock is immediately updated. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.UpdateClock(com.quinncurtis.chart2dnet.ChartCalendar,System.Boolean)">
            <summary>
             Update the clock with a new value.
             <param name= "ctime"> Time to display. </param>
             <param name= "updatedraw"> True and the clock is immediately updated. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.MeterFrame">
            <summary>
            Get the coordinate system object for the clock. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.MeterAxis">
            <summary>
            Get the x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.MeterAxisLab">
            <summary>
            Get the x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.ProcessVariableHours">
            <summary>
            Get process variable for hours.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.ProcessVariableMinutes">
            <summary>
            Get process variable for minutes.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.ProcessVariableSeconds">
            <summary>
            Get process variable for seconds.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.TimePanelMeter">
            <summary>
            Get a reference to the time RTTimePanelMeter object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.DatePanelMeter">
            <summary>
            Get a reference to the date RTTimePanelMeter object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.DialInterior">
            <summary>
            Get clockInterior RTGenShape Object. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.InvertColors">
            <summary>
            Quick way to invert the colors of the dial/clock. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoClockIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoDialIndicator">
            <summary>
            The RTAutoDialIndicator is a ChartView derived object that encapsulates all of the chart elements needed to draw a
            multi-needle dial, including a RTComboProcessVar object, a meter coordinate system, meter axes, meter axes labels,  RTMeterNeedleIndicators, and
             RTPanelMeter objects for the display of numeric, title and units strings.  
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.meterAxis">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.meterAxisLab">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.dialComboProcessVar">
            <summary>
            A reference to the RTComboProcessVar associated with the clock
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.updateCount">
            <summary>
             Keep track of update counts
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.startArcAngle">
            <summary>
             Values used to initialize the RTMeterCoordinates boject for a circular clock coordinate system.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.meterFrame">
            <summary>
             The dials coordinate system.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.meterNeedleIndicator1">
            <summary>
            A reference to the RTMeterNeedleIndicator associated with the dial
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.dialInterior">
            <summary>
            A circular background object for the dial interior.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.SetMeterFrame(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
             Initialize a dial object using he specified parameters.
            </summary> 
            <param name="startarcangle"> Specifies the starting arc angle position of the dial arc in degrees.</param>
            <param name="arcextent"> Specifies the extent of the dial arc in degrees. The default dial arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent. </param>
            <param name="startarcscale"> Specifies the scaling value associated with the startArcAngle position of the 
             dial arc.</param>
            <param name="endarcscale"> Specifies the scaling value associated with the ending position of the dial arc. </param>
            <param name="arcdirection"> Specifies the direction of the arcExtent. The default arcDirectionPositive 
             value of false dial arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the dial arc extend in a positive (counter-clockwise) direction.</param>
            <param name="x"> Specifies x-position of the center of the dial arc in plot area normalized coordinates.</param>
            <param name="y"> Specifies y-position of the center of the dial arc in plot area normalized coordinates. </param>
            <param name="arcradius"> Specifies radius of the dial arc in plot area normalized coordinates. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.UpdateMeterFrames">
            <summary>
              Update all of the objects with the current coordinate system.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.InitRTProcessVar">
            <summary>
            Initialize the RTProcessVar associated with the dial.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.InitDial(System.Drawing.Color)">
            <summary>
             Initialize the dial indicator.
             </summary>		
             <param name= "colr">  Specifies the dial color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.SetDefaultPlotAttributes(com.quinncurtis.rtgraphnet.RTMeterIndicator,System.Drawing.Color)">
            <summary>
             Initialize the dial indicator.
             </summary>		
             <param name= "plot">  Specifies the dial object. </param>
             <param name= "colr"> dial color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.InitStrings(System.String,System.String)">
            <summary>
             Initializes the dial title and units strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "units">  The units string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.FormatOptions(System.Int32)">
            <summary>
             Specify one of three different dial formats
             </summary>		
             <param name= "format">  Format number (0 .. 2). </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.BuildChart">
            <summary>
             Builds the dial.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the dial using the passed in ChartView object.
             <param name= "chartVu"> A ChartView object that the dial is to be drawn in. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.UpdateDial(System.Double,System.Boolean)">
            <summary>
             Update the dial with a new value.
             <param name= "value"> New value. </param>
             <param name= "updatedraw"> True and the dial is immediately updated. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.MeterFrame">
            <summary>
            Get the coordinate system object for the dial. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.MeterAxis">
            <summary>
            Get the x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.MeterAxisLab">
            <summary>
            Get the x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.DialInterior">
            <summary>
            Get dialInterior RTGenShape Object. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.InvertColors">
            <summary>
            Quick way to invert the colors of the dial/clock. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoDialIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoIndicator">
            <summary>
            The abstract base class for the RTAuto.. objects: RTAutoBarIndicator, RTAutoClockIndicator, RTAutoDialIndicator,
            RTAutoMeterIndicator, RTAutoMultiBarIndicator, RTAutoPanelMeterIndicator. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultFontString">
            <summary>
             The default font used in the display of all strings in the table.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultDataValueFont">
            <summary>
            The default font used for the axes labels and axes titles.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultAxisLabelsFont">
            <summary>
            The default font used for the axes labels and axes titles.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultMainTitleFont">
            <summary>
            The font used for the main title .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultTagFont">
            <summary>
            The font used for the tag .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultAlarmFont">
            <summary>
            The font used for the alarm.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultUnitsFont">
            <summary>
            The font used for the units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.coordinateSystem">
            <summary>
            The coordinate system for the indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.graphBackground">
            <summary>
            The graph background.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.plotBackground">
            <summary>
            The plot background.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.plotAttrib">
            <summary>
            The primary  attribute for the indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.minIndicatorValue">
            <summary>
            The minimum value for the indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.maxIndicatorValue">
            <summary>
            The maximum value for the indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.graphBorder">
            <summary>
            The default graph border for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.resetOnDraw">
            <summary>
            True  the ChartView object list is cleared with each redraw
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.buildFlag">
            <summary>
            True and the chart is finalized and read to draw.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.frameSize">
            <summary>
            Saves the current frame size, you can tell when control is resized.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.unitsString">
            <summary>
            The units string used in the x-, y- axis titles, or the units panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.tagString">
            <summary>
            The tag string.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.mainTitle">
            <summary>
            The main title string.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.defaultConstructor">
            <summary>
            True and the default constructor was used to build the initial indicator
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.processVariable">
            <summary>
            A reference to the RTProcessVar associated with theindicator
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.processVariableArray">
            <summary>
            An array of RTProcessVar associated with the indicator
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.lowAlarm">
            <summary>
            A reference to the low RTAlarm associated with the indicator
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.highAlarm">
            <summary>
            A reference to the high RTAlarm associated with the indicator
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.setpointAlarm">
            <summary>
            A reference to the setpoint associated with the indicator
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.panelMeterAttribute">
            <summary>
            A reference to the ChartAttribute used to define the default panel meter attributes
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.tagAttribute">
            <summary>
            A reference to the ChartAttribute used to define the tag panel meter attributes
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.unitsAttribute">
            <summary>
            A reference to the ChartAttribute used to define the tag panel meter attributes
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.numericPanelMeter">
            <summary>
            A reference to the RTNumericPanelMeter numeric readout
            </summary>       
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.alarmPanelMeter">
            <summary>
            A reference to the RTAlarmPanelMeter alarm readout
            </summary>  
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.tagPanelMeter">
            <summary>
            A reference to the RTStringPanelMeter tag display
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.unitsPanelMeter">
            <summary>
            A reference to the RTStringPanelMeter units display
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.alarmList">
            <summary>
             Holds a reference to the RTAlarm list data.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.graphFormat">
            <summary>
             Secifies any formats the auto-indicator may support.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.faceplateBackground">
            <summary>
             True and a 3D plate is drawn as the background
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.updateCount">
            <summary>
             Keep track of update counts
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.chartObjType">
            <summary> 
             Specifies the chart object type.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.SetScale(System.Double,System.Double,System.Double,System.Double)">
            <summary>
              Set the scale of the indicator
            </summary>
             <param name="minx"> Minimum x-value for scale.</param>
             <param name="miny"> Minimum y-value for scale.</param>
             <param name="maxx"> Maximum x-value for scale.</param>
             <param name="maxy"> Maximum y-value for scale</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InitRTProcessVar">
            <summary>
            Initialize the RTProcessVar associated with the indicator.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InitRTProcessVar(System.Int32)">
            <summary>
            Initialize the RTProcessVar associated with the indicator graph.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InitStrings(System.String,System.String)">
            <summary>
             Initializes the indicator title and units strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "units">  The units string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InitStrings(System.String,System.String,System.String[])">
            <summary>
             Initializes the indicator title and units strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "units">  The units string. </param>
             <param name= "tags">  An array of the tag strings. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.BuildChart">
            <summary>
             Builds the indicator.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.FormatOptions(System.Int32)">
            <summary>
             Format options for the class, if applicatble.
             </summary>
             <param name= "format">  Graph format. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.UpdateIndicator(System.Double,System.Boolean)">
            <summary>
             Update the indicator with a new value.
             </summary>	
             <param name= "value"> New value. </param>
             <param name= "updatedraw"> True and the indicator is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.UpdateIndicator(System.Double[],System.Boolean)">
            <summary>
             Update the channels of an indicator with new values.
             </summary>	
             <param name= "values"> An array of new values, one for each channel of the indciator. </param>
             <param name= "updatedraw"> True and the indicator is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultAxisLabelsFont">
            <summary>
            Get/Set the default font used for the axes labels and axes titles.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultDataValueFont">
            <summary>
            Get/Set the default font used for the numeric values labeling the indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.PlotAttrib">
            <summary>
            Get an RTProcessVar object in the .
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.CoordinateSystem">
            <summary>
            Get the coordinate system object for the indicator. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.GraphBackground">
            <summary>
            Get the graph background object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.PlotBackground">
            <summary>
            Get the plot background object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultTagFont">
            <summary>
            Get/Set the font used for the main title.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultAlarmFont">
            <summary>
            Get/Set the font used for the subhead title.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.TagString">
            <summary>
            Get/Set the tag string
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.MainTitle">
            <summary>
            Get/Set the tag string
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultUnitsFont">
            <summary>
            Get/Set the font used for the chart footer. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.GraphBorder">
            <summary>
            Get the default graph border for the chart.
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.ResetOnDraw">
            <summary>
            Set/Get True  the ChartView object list is cleared with each redraw
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultFontString">
            <summary>
               Set/Get the default font used in the chart. This is a string specifiying the name of the font.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.BuildFlag">
            <summary>
            True and the chart has been finalized and ready to draw
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.ProcessVariable">
            <summary>
            Get most recently created RTProcessVar.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.GetProcessVariable(System.Int32)">
            <summary>
            Get a RTProcessVar object at the specified index in the processVariableArray.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.LowAlarm">
            <summary>
            Get the most recent low RTAlarm object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.HighAlarm">
            <summary>
            Get the most recent high RTAlarm object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.SetpointAlarm">
            <summary>
            Get the most recent setpoint RTAlarm object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.AlarmList">
            <summary>
            Get the ArrayList holding all of the RTAlarm objects
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.GraphFormat">
            <summary>
            Get/Set any an indicator format, is supported
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.UnitsString">
            <summary>
            Get/Set the units string
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.DefaultMainTitleFont">
            <summary>
            Get/Set the font used for the main title.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.NumericPanelMeter">
            <summary>
            Get a reference to the RTNumericPanelMeter object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.AlarmPanelMeter">
            <summary>
            Get a reference to the RTAlarmPanelMeter object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.UnitsPanelMeter">
            <summary>
            Get a reference to the units string panel meter object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.TagPanelMeter">
            <summary>
            Get a reference to the tag panel meter object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.MinIndicatorValue">
            <summary>
            The minimum value for the indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.MaxIndicatorValue">
            <summary>
            The maximum value for the indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.FaceplateBackground">
            <summary>
            Set to true to show 3D faceplate
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InvertColor(System.Drawing.Color)">
            <summary>
            Returns the invert of the color.
            </summary>
            <param name= "c">  The source color. </param>
            <returns> Returns the inverted color.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.GetChartObjType">
            <summary> 
             Returns the chart object type. 
            </summary>
            <returns> Returns the chart object type. See the Chart Object Type Constants  in the 
            GRID_MINOR file for a current list of chart object types.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoIndicator.ChartObjType">
            <summary> 
             Get/Set the chart object type. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator">
            <summary>
            The RTAutoMeterIndicator is a ChartView derived object that encapsulates all of the chart elements needed to draw a process control
            style meter, including a RTProcessVar object, a meter coordinate system, meter axes, meter axes labels, a RTMeterIndicator, 
             and RTPanelMeter objects for the display of numeric values, alarm status, a title and units strings.  
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.indicatorType">
            <summary>
             Secifies one of severl indicator types: 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterAxis">
            <summary>
            The meter axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterAxisLab">
            <summary>
            The meter axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.startArcAngle">
            <summary>
            The starting arc angle of the meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.arcExtent">
            <summary>
            The arc angle extent of the meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.arcDirection">
            <summary>
            The arc direction (true is clockwise) of the meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.arcRadius">
            <summary>
            The meter radius.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.centerX">
            <summary>
            The x-position of the meter origin
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.centerY">
            <summary>
            The y-position of the meter origin
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterFrame">
            <summary>
            The meter coordinate system
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterArcIndicator">
            <summary>
            A reference to the RTMeterARcIndicator associated with the meter
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterNeedleIndicator">
            <summary>
            A reference to the RTMeterNeedleIndicator associated with the meter
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterSymbolIndicator">
            <summary>
            A reference to the RTMeterSymbolIndicator associated with the meter
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.meterIndicator">
            <summary>
            A reference to the RTMeterIndicator associated with the meter
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.SetMeterFrame(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
             Initialize a meter object using he specified parameters.
            </summary> 
            <param name="startarcangle"> Specifies the starting arc angle position of the meter arc in degrees.</param>
            <param name="arcextent"> Specifies the extent of the meter arc in degrees. The default meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent. </param>
            <param name="startarcscale"> Specifies the scaling value associated with the startArcAngle position of the 
             meter arc.</param>
            <param name="endarcscale"> Specifies the scaling value associated with the ending position of the meter arc. </param>
            <param name="arcdirection"> Specifies the direction of the arcExtent. The default arcDirectionPositive 
             value of false meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the meter arc extend in a positive (counter-clockwise) direction.</param>
            <param name="x"> Specifies x-position of the center of the meter arc in plot area normalized coordinates.</param>
            <param name="y"> Specifies y-position of the center of the meter arc in plot area normalized coordinates. </param>
            <param name="arcradius"> Specifies radius of the meter arc in plot area normalized coordinates. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.UpdateMeterFrames">
            <summary>
              Update all of the objects with the current coordinate system.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.InitMeterNeedle(System.Int32,System.Drawing.Color)">
            <summary>
             Initialize the indicator.
             </summary>		
             <param name= "indicatortype">  Specifies the meter type. Use one of the RT_AUTO types: RT_AUTO_METER_NEEDLE_INDICATOR, RT_AUTO_METER_ARC_INDICATOR:, RT_AUTO_METER_SYMBOL_INDICATOR. </param>
             <param name= "colr"> meter color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.FormatOptions(System.Int32)">
            <summary>
             Format the meter.
             </summary>		
             <param name= "format">  Specifies the format type.  </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.SetDefaultPlotAttributes(com.quinncurtis.rtgraphnet.RTMeterIndicator,System.Drawing.Color)">
            <summary>
             Initialize the default characteristics of the meter.
             </summary>		
             <param name= "plot">  Specifies the meter object. </param>
             <param name= "colr"> meter color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.BuildChart">
            <summary>
             Builds the meter.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the meter using the passed in ChartView object.
             </summary>
             <param name= "chartVu"> A ChartView object that the meter is to be drawn in. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.UpdateMeter(System.Double,System.Boolean)">
            <summary>
             Update the meter with a new value.
             </summary>	
             <param name= "value"> New value. </param>
             <param name= "updatedraw"> True and the meter is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             </summary>	
             <param name= "g"> The graphics context the chart is drawn to. </param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.MeterFrame">
            <summary>
            Get the coordinate system object for the meter. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.MeterAxis">
            <summary>
            Get the meter axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.MeterAxisLab">
            <summary>
            Get the meter labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.MeterNeedleIndicator">
            <summary>
             Returns the internal RTMeterNeedleIndicaotr. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.MeterArcIndicator">
            <summary>
             Returns the internal RTMeterArcIndicaotr. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.MeterSymbolIndicator">
            <summary>
             Returns the internal RTMeterSymbolIndicaotr. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.NeedleLineColor">
            <summary>
             Set/Get the  needle line color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.NeedleFillColor">
            <summary>
             Set/Get the needle fill color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.NeedleLineWidth">
            <summary>
             Set/Get the needle line width for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.NoAlarm">
            <summary>
            Get the most recent no alarm RTAlarm object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.IndicatorType">
            <summary>
            Set/Get the meter needle indicatory type.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.StartArcAngle">
            <summary>
             Set/Get the  start arc angle for the meter scale 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.ArcExtent">
            <summary>
             Set/Get the  arc angle extent for the meter scale 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.ArcDirection">
            <summary>
             Set/Get the  arc angle direction of the meter scale. False is clockwise.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.ArcRadius">
            <summary>
             Set/Get the radius of the meter arc. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.CenterX">
            <summary>
             Set/Get the x-value of the meter origin. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.CenterY">
            <summary>
             Set/Get the y-value of the meter origin.  
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMeterIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator">
            <summary>
            The RTAutoMultiBarIndicator is a ChartView derived object that encapsulates all of the chart elements needed to draw a process control
            style bargraph, with multiple bars, including an array of RTProcessVar objects, a coordinate system, axes, axes labels, a RTMultiBarIndicator, 
            RTMultiAlarmIndicator, alarm symbols, and RTPanelMeter objects for the display of numeric values, alarm status, a title and units strings.  
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.multiBarPlot">
            <summary>
            A reference to the RTMultiBarIndicator associated with the bar graph
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.multiAlarmIndicator">
            <summary>
            A reference to the RTMultiAlarmIndicator object.
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.plotAttribArray">
            <summary>
            An array of ChartAttribute for the bars of the bar graph.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.InitDefaults(System.Int32)">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.InitMultiBarIndicator(System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
             Initialize the bar plot.
             </summary>		
             <param name= "orientation">  Specifies the orientation of the chart (ChartObj.VERT_DIR or ChartObj.HORIZ_DIR </param>
             <param name= "bargraphformat">  Specifies the bar graph type. </param>
             <param name= "colr"> An array of bar graph colors. </param>
             <param name= "num"> The number of bars in the mult-bargraph. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.SetDefaultPlotAttributes(com.quinncurtis.rtgraphnet.RTBarIndicator,System.Drawing.Color)">
            <summary>
             Initialize the bar plot.
             </summary>		
             <param name= "plot">  Specifies the bar graph object. </param>
             <param name= "colr"> Bar graph color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.InitColors(System.Drawing.Color[])">
            <summary>
             Initializes the bar graph colors.
             </summary>		
             <param name= "colors">  The bar graph colors. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.InitStrings(System.String,System.String)">
            <summary>
             Initializes the indicator title and units strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "units">  The units string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.InitStrings(System.String,System.String,System.String[])">
            <summary>
             Initializes the indicator title and units strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "units">  The units string. </param>
             <param name= "tags">  An array of the tag strings. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the bar graph using the passed in ChartView object.
             <param name= "chartVu"> A ChartView object that the bar graph is to be drawn in. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.UpdateMultiBarGraph(System.Double[],System.Boolean)">
            <summary>
             Update the bar graph with a new value.
             <param name= "values"> New value. </param>
             <param name= "updatedraw"> True and the bar graph is immediately updated. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.PlotAttribArray">
            <summary>
            Get the primary bar attribute  object for the bars of the bar graph.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.SetBarAttributes(System.Int32,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             Sets the  line color for the chart object. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.GetBarAttributes(System.Int32)">
            <summary>
             Sets the  line color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.MultiBarPlot">
            <summary>
            Get a reference to the RTBarIndicator object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.MultiAlarmIndicator">
            <summary>
            Get a reference to the RTAlarmIndicator object
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoMultiBarIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator">
            <summary>
            The RTAutoPanelMeterIndicator is a ChartView derived object that encapsulates all of the chart elements needed to draw a process control
            style panel meter, including a RTProcessVar object,
            and RTPanelMeter objects for the display of numeric values, alarm status, a title and units strings.  
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.#ctor">
            <summary>
              Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.FormatOptions(System.Int32)">
            <summary>
             Format options for the class, if applicatble.
             </summary>
             <param name= "format">  Graph format. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.UpdateCoordinateSystems">
            <summary>
              Update all of the objects with the current coordinate system.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.InitSimpleRTPlotObject(System.Int32,System.Drawing.Color)">
            <summary>
             Initialize the indicator plot.
             </summary>		
             <param name= "plottype">  Specifies the indicator type. </param>
             <param name= "colr"> indicator color. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.BuildChart">
            <summary>
             Builds the indicator.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.PreDrawGraphObjects(System.Drawing.Graphics)">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
            <param name="g">Graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the indicator using the passed in ChartView object.
             <param name= "chartVu"> A ChartView object that the indicator is to be drawn in. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.UpdatePanelMeter(System.Double,System.Boolean)">
            <summary>
             Update the panel meter with a new value.
             </summary>	
             <param name= "value"> New value. </param>
             <param name= "updatedraw"> True and the meter is immediately updated. </param>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoPanelMeterIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoScrollGraph">
            <summary>
            The RTAutoScrollGraph is a ChartView derived object that encapsulates all of the chart elements needed to draw a scrolling
            graph, including an array of RTProcessVar objects, a coordinate system, axes, axes labels, RTSingleValuePlot, RTGroupMultiValuePlot,
            RTAlarmSymbol alarm symbols, legend, title, subhead, footer and units strings. 
            Only horizontal scrolling modes are supported.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.defaultChartFontString">
            <summary>
             The default font used in the display of all strings in the table.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.chartSimpleDataset">
             <summary>
            The SimpleDataset that holds the data used to plot the scroll graph.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.chartGroupDataset">
             <summary>
            The SimpleDataset that holds the data used to plot the scroll graph.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.datasetList">
             <summary>
            A list of the SimpleDataset datasets.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.defaultSubHeadFont">
            <summary>
            The font used for the subhead title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.defaultFooterFont">
            <summary>
            The font used for the chart footer.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.defaultToolTipFont">
            <summary>
            The  font used for the chart tooltip template.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.defaultLegendFont">
            <summary>
            The  font used for the chart legend.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xAxis">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xAxis2">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.yAxis">
            <summary>
            The y-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.yAxis2">
            <summary>
            The y-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xAxisLab">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xAxisLab2">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.yAxisLab">
            <summary>
            The y-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.yAxisLab2">
            <summary>
            The y-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xAxisTitle">
            <summary>
            The x-axis title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.yAxisTitle">
            <summary>
            The y-axis title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xGrid">
            <summary>
            The x-axis grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.yGrid">
            <summary>
            The y-axis grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.barWidth">
            <summary>
            The barwidth.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.barDataValue">
            <summary>
            The numeric label template used to place numeric values on the bars.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.subHead">
            <summary>
            The subheader for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.footer">
            <summary>
            The footer for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.datatooltip">
            <summary>
            The data tooltip for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.autoFitGraphBorder">
            <summary>
            The default graph border for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.datasetInitFlag">
            <summary>
            True means that the dataset has been initiated with the frequency data.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.plotObjectList">
            <summary>
             An array of the plot objects added to the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.simplePlotObj">
            <summary>
             Holds a reference to the most recent simple plot object added to the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.groupPlotObj">
            <summary>
             Holds a reference to the most recent group plot object added to the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.alarmIndicator">
            <summary>
            A reference to the RTAlarmIndicator object.
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.xScaleType">
            <summary>
             Specifies the x-scale scroll type. Use one of the contants: AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.graphScrollFrame">
            <summary>
             A reference to the RTScrollFrame used to control the scrolling and auto-scaling of the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.singleValuePlot">
            <summary>
             Holds a reference to the most recent RTSimpleSingleValuePlot object created for the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.singleValuePlotList">
            <summary>
             An array of the RTSimpleSingleValuePlot objects created for the graph
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.startTime">
            <summary>
             The starting date/time for the chart, if xScaleType = AUTOSCROLL_DATETIME is used.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.lastTime">
            <summary>
             Stores the previous time, used in time interval calculations.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.sampleInterval">
            <summary>
             Stores the most recent sample interval, i.e. the time between adjacent sample intervals.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.initialTimeSpanSeconds">
            <summary>
             The initial time span of the x-axis is used.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.graphTimeBase">
            <summary>
             The time-base of the graph, i.e. what the x-axis is scaled for. Use one of the ChartObj time constants: MILLISECOND,SECOND,MINUTE,HOUR, DAY_OF_MONTH,DAY_OF_WEEK,DAY_OF_YEAR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.timeBaseMultiplier">
            <summary>
             Stores a a multiplier to use.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.updateCount">
            <summary>
             Counts the number of updates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.legendFont">
            <summary>
            Stores a reference to the chart legend font.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.legendAttributes">
            <summary>
            Stores a reference to the legend attriburtes.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.chartLegend">
            <summary>
            Stores a reference to the chart legend.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.CalcTimeBaseMutliplier(System.Int32)">
            <summary>
             Calculate the base time multiplier
             </summary>		
             <param name= "timebase">  Specifies the time base:  MILLISECOND,SECOND,MINUTE,HOUR, DAY_OF_MONTH,DAY_OF_WEEK,DAY_OF_YEAR.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.FormatOptions(System.Int32)">
            <summary>
             Format options for the class, if applicatble.
             </summary>
             <param name= "format">  Graph format. </param>
             
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.#ctor">
            <summary>
             Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitRTAutoScrollGraph(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value, in units of the timebase. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitRTAutoScrollGraph(System.TimeSpan,System.Double,System.TimeSpan,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value as a TimeSpan value. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value as a TimeSpan value. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitRTAutoScrollGraph(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value, in units of the timebase. </param>
             <param name= "maxy">  The ending y-value. </param>
             <param name= "scaletype">  Specifies the scale type:  AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitRTAutoScrollGraph(System.DateTime,System.Double,System.DateTime,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value as a DateTime value. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value as a DateTime value. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitRTAutoScrollGraph(com.quinncurtis.chart2dnet.ChartCalendar,System.Double,com.quinncurtis.chart2dnet.ChartCalendar,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value as a DateTime value. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value as a DateTime value. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value, in units of the timebase. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.#ctor(System.TimeSpan,System.Double,System.TimeSpan,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value as a TimeSpan value. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value as a TimeSpan value. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.#ctor(System.DateTime,System.Double,System.DateTime,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value as a DateTime value. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value as a DateTime value. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.#ctor(com.quinncurtis.chart2dnet.ChartCalendar,System.Double,com.quinncurtis.chart2dnet.ChartCalendar,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value as a ChartCalendar value. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value as a ChartCalendar value. </param>
             <param name= "maxy">  The ending y-value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.SetInitialScale(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "miny">  The starting y-value. </param>
             <param name= "maxx">  The ending x-value, in units of the timebase. </param>
             <param name= "maxy">  The ending y-value. </param>
             <param name= "scaletype">  Specifies the scale type:  AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateCoordinateSystems">
            <summary>
              Updates the coordinate system of all chart objects.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitRTProcessVar(System.String)">
            <summary>
             Initialize a default process variable.
             </summary>		
             <param name= "tag"> The string associated with the process variable </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitSimpleRTPlotObject(System.Int32,System.Drawing.Color,System.String)">
            <summary>
             Initializes the scrolling graph plot object
             </summary>		
             <param name= "plottype">  Specifies the simple plot type: LINE_MARKER_PLOT, LINE_PLOT, BAR_PLOT, SCATTER_PLOT </param>
             <param name= "colr">  The primary color of the plot object. </param>
             <param name= "tag">  The tag name associated with the plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.AddRTPlotObject(System.Int32,System.Drawing.Color,System.String)">
            <summary>
             Add a simple plot object to the scrolling graph.
             </summary>		
             <param name= "plottype">  Specifies the simple plot type: LINE_MARKER_PLOT, LINE_PLOT, BAR_PLOT, SCATTER_PLOT </param>
             <param name= "colr">  The primary color of the plot object. </param>
             <param name= "tag">  The tag name associated with the plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.GetAxisRect(com.quinncurtis.chart2dnet.AxisLabels)">
            <summary>
            Returns the bounding box of an axis, and axis labels object.
            </summary>
            <param name="lab">Axis labels object</param>
            <returns>Returns the union of the axis and axis labels bounding boxes.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.SetDefaultPlotAttributes(com.quinncurtis.chart2dnet.SimpleVersaPlot,System.Drawing.Color)">
            <summary>
             Given a color, sets the default attributes of a simple plot object.
             </summary>		
             <param name= "plot">  The SimpleVersaPlot object used as the scrolling graph object. </param>
             <param name= "colr">  The primary color of the plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitStrings(System.String,System.String,System.String)">
            <summary>
             Initializes the scrolling graph title and axis strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "xtitle">  The x-axis title string. </param>
             <param name= "ytitle">  The t-axis title string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitStrings(System.String)">
            <summary>
             Initializes the scrolling graph title.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.GetAverageInterval(com.quinncurtis.chart2dnet.ChartDataset)">
            <summary>
             Get the average interval between adjacent data samples.
             </summary>		
             <param name= "ds">  The sourc dataset. </param>
             <returns> The average interval between adjacent data samples.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitCoordinateSystem(System.Int32)">
            <summary>
             Initialize the coordinate system based on the scroll type.
             </summary>		
             <param name= "coords">  Specifies the type:  AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BuildChart">
            <summary>
             Builds the scroll graph using the base objects ChartView.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the scroll graph using the passed in ChartView object.
             </summary>
             <param name= "chartVu"> A ChartView object that the scroll graph is to be drawn in. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.CalcAutoBarWidth">
            <summary>
             Calculated the bar width
             </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "value"> A new value. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.Double,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.TimeSpan,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(com.quinncurtis.chart2dnet.ChartCalendar,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.DateTime,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.Double,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "value"> A new value. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.TimeSpan,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(com.quinncurtis.chart2dnet.ChartCalendar,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.UpdateScrollGraph(System.DateTime,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.EnableChannel(System.Int32,System.Boolean)">
            <summary>
             Enable, disable a specific channel in the chart
             </summary>	
             <param name= "channel"> channel number. </param>
             <param name= "enable"> True and the channel is enabled. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.ChartSimpleDataset">
            <summary>
            Get the SimpleDataset object that holds the data used to plot the scroll graph.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.DefaultToolTipFont">
            <summary>
            Set/Get the default font object used for the tooltip. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.XAxis">
            <summary>
            Get the x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.XAxis2">
            <summary>
            Get the second x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.YAxis">
            <summary>
            Get the y-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.YAxis2">
            <summary>
            Get the second y-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.XAxisLab">
            <summary>
            Get the x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.XAxisLab2">
            <summary>
            Get the second x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.YAxisLab">
            <summary>
            Get the y-axis labels object. Accessible only after BuildGrap
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.YAxisLab2">
            <summary>
            Get the second y-axis labels object. Accessible only after BuildGrap
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.XAxisTitle">
            <summary> 
            Get the x-axis title object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.YAxisTitle">
            <summary>
            Get the y-axis title  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.XGrid">
            <summary>
            Get the x-axis grid  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.YGrid">
            <summary>
            Get the y-axis grid  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.SimplePlotObj">
            <summary>
            Get the SimpleVersaPlot plot object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.GroupPlotObj">
            <summary>
            Get the GroupVersaPlot plot object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BarDataValue">
            <summary>
            Get the numeric label template  object used to place numeric values on the bars.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.DefaultLegendFont">
            <summary>
            Get/Set the font used for the legend.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.DefaultSubHeadFont">
            <summary>
            Get/Set the font used for the sub head.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.SubHead">
            <summary>
            Get the sub head  object for the chart. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.DefaultFooterFont">
            <summary>
            Get/Set the font used for the chart footer. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.Footer">
            <summary>
            Get the footer object for the chart. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.Datatooltip">
            <summary>
            Get the data tooltip object for the chart. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.AutoFitGraphBorder">
            <summary>
            Set to true and the graph will be auto-positioned in the chart view, maximizing the plot area.
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BarLineColor">
            <summary>
             Sets the  line color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BarFillColor">
            <summary>
             Sets the fill color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BarLineWidth">
            <summary>
             Sets the line width for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.DefaultChartFontString">
            <summary>
               Set/Get the default font used in the chart. This is a string specifiying the name of the font.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.BarWidth">
            <summary>
            Set/Get the bar width.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.PlotObjectList">
            <summary>
            Get plot object list.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.DatasetList">
            <summary>
            Get dataset object list.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.GraphScrollFrame">
            <summary>
            Get the graphs RTScrollFrame.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.SingleValuePlot">
            <summary>
            Get the most recent  RTSingleValuePlot object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.ProcessVariableArray">
            <summary>
            Get the ArrayList holding all of the RTProcessVar objects
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.SingleValuePlotList">
            <summary>
            Get the ArrayList holding all of the RTSimpleSingleValuePlot objects
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.StartTime">
            <summary>
            Get/Set the start time the elapsed time compares the current time to
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.ChartLegend">
            <summary>
            Get/Set the charts Legend object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.AlarmIndicator">
            <summary>
            Get a reference to the RTAlarmIndicator object
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoScrollGraph.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RT3DFrame">
            <summary>
            This class is used to draw 3D borders and provide the background for many of the other graph objects, most 
            noticeably the RTPanelMeter classes. It can also be used directly in your program to provide 3D frames the 
            visually group objects together in a faceplate format.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RT3DFrame.frameRect">
            <summary>
             Specifies the location and size of the 3D frame.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RT3DFrame.lightMode">
            <summary>
             Specifies the apparent direction of the light source used to highlight the 3D frame. Use one of the 
             direction constants: LIGHT_UPPER_LEFT, LIGHT_UPPER_RIGHT, LIGHT_LOWER_LEFT, LIGHT_LOWER_RIGHT , 
             LIGHT_STRAIGHT_ON , LIGHT_NONE, OUTSET_3D_LOOK, INSET_3D_LOOK.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RT3DFrame.shadowAttribute">
            <summary>
             Specifies the shade color of the 3D frame.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RT3DFrame.highlightAttribute">
            <summary>
             Specifies the highlight color of the 3D frame.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RT3DFrame.bevelAlgorithmXOver">
            <summary>
             Bevels are drawn in two ways. For narrow bevels of less than bevelAlgorithmXOver in width
             the bevels are drawn using straight lines. Otherwise the bevels are drawn using polygon fills.
            
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.ErrorCheck(System.Int32)">
            <summary>
             Checks the RT3DFrame object for common errors.
             </summary>		
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Copy(com.quinncurtis.rtgraphnet.RT3DFrame)">
            <summary>
             Copies the source object.
             </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Clone">
            <summary>  Returns an object that is a Clone of this RT3DFrame object.
            </summary>
             <returns> Returns a Clone of this RT3DFrame object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.InitDefaults">
            <summary>
             Initializes default values for the object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.#ctor">
            <summary>
              The default RT3DFrame constructor.
            </summary>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              This constructor creates a new RT3DFrame using the specified scale.
            </summary>
            <param name="transform"> Places the RT3DFrame object in the coordinate system defined by transform. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RT3DFrame using the specified scale and attributes.
            </summary>
            <param name="transform"> Places the RT3DFrame object in the coordinate system defined by transform. </param>
            <param name="attrib"> Specifies the attributes (line and fill color) for the frame.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RT3DFrame of the a given size and position using the specified 
              scale and attributes.
            </summary>
            <param name="transform"> Places the RT3DFrame object in the coordinate system defined by transform. </param>
            <param name="rect"> Specifies the position and size of the frame.</param>
            <param name="attrib"> Specifies the attributes (line and fill color) for the frame.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.chart2dnet.ChartAttribute,System.Int32)">
            <summary>
              This constructor creates a new RT3DFrame of the a given size and position using the specified scale 
              and attributes.
            </summary>
            <param name="transform"> Places the RT3DFrame object in the coordinate system defined by transform. </param>
            <param name="rect"> Specifies the position and size of the frame.</param>
            <param name="attrib"> Specifies the attributes (line and fill color) for the frame.</param>
            <param name="postype"> Specifies the positioning coordinate system.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.SetRect(System.Double,System.Double,System.Double,System.Double)">
            <summary>
              Sets the position and size of the frame.
            </summary>
            <param name="x"> The x-value of the frame position. </param>
            <param name="y"> The y-value of the frame position.</param>
            <param name="w"> The width of the frame. </param>
            <param name="h"> The height of the frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.SetRect(com.quinncurtis.chart2dnet.Rectangle2D)">
            <summary>
              Sets the position and size of the frame.
            </summary>
            <param name="rect"> Sets the position and size of the frame. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Calc3DColor(System.Int32,System.Int32)">
            <summary>
              Calculates whether a side of the RT3DFrame is a shadow color, or a highlight color.
            </summary>
            <param name="side"> Specifies which side of the 3D frame. </param>
            <param name="lightmode"> Specifies the lighting mode. Use one of the direction constants.
             LIGHT_UPPER_LEFT, LIGHT_UPPER_RIGHT, LIGHT_LOWER_LEFT, LIGHT_LOWER_RIGHT , LIGHT_STRAIGHT_ON , 
             LIGHT_NONE, OUTSET_3D_LOOK, INSET_3D_LOOK.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.CalcShadowColor(System.Drawing.Color)">
            <summary>
               Returns RGB color code which is darker than rgbColor and is appropriate for shading
            </summary>
            <param name="rgbcolor"> Specifies the source color. </param>
            <return> Returns RGB color code which is darker than rgbColor and is appropriate for shading </return>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.CalcHighlightColor(System.Drawing.Color)">
            <summary>
               Returns RGB color code which is lighter than rgbColor and is appropriate for shading
            </summary>
            <param name="rgbcolor"> Specifies the source color. </param>
            <return> Returns RGB color code which is lighter than rgbColor and is appropriate for shading </return>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Vert3dside(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Single,System.Boolean,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
               Draws a vertical side of the 3D frame.
            </summary>
            <param name="g2"> The graphics context.</param>		
            <param name="x1"> The x position of the frame edge.</param>		
            <param name="y1"> The top y position of the frame edge.</param>		
            <param name="y2"> The bottom y position of the frame edge.</param>		
            <param name="w"> The width of the frame edge.</param>		
            <param name="dir"> The direction of the bevel of the frame edge.</param>		
            <param name="attrib"> The attributes of the filled edge.</param>		
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Horiz3dside(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Single,System.Boolean,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
               Draws a vertical side of the 3D frame.
            </summary>
            <param name="g2"> The graphics context.</param>		
            <param name="x1"> The x position of the frame edge.</param>		
            <param name="y1"> The top y position of the frame edge.</param>		
            <param name="x2"> The inner x position of the frame edge.</param>		
            <param name="h"> The height of the frame edge.</param>		
            <param name="dir"> The direction of the bevel of the frame edge.</param>		
            <param name="attrib"> The attributes of the filled edge.</param>		
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.GetSideColor(System.Int32)">
            <summary>
               Returns RGB color code that is the shaded fill color for a frame edge.
            </summary>
            <param name="side"> Specifies the side of the 3D frame. </param>
            <return>  Returns color attributes that are the shaded fill color for a frame edge. </return>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Box3d1(System.Drawing.Graphics,com.quinncurtis.chart2dnet.Rectangle2D,System.Double,System.Drawing.Color)">
            <summary>
               Draws a 3D looking frame.
            </summary>
            <param name="g2"> The graphics context.</param>		
            <param name="rr"> The position and size of the 3D frame.</param>		
            <param name="maxborder"> The width of the 3D edged used to give the 3D frame depth.</param>		
            <param name="fillcolor"> The fill color of the 3D frame.</param>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.Draw(System.Drawing.Graphics)">
            <summary>
               The Draw method for the RT3DFrame class.
            </summary>
            <param name="g2"> The graphics context.</param>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.GetBoundingBox">
            <summary>
               Returns a copy of the Rectangle2D object used to define the position and size of the 3D frame.
            </summary>
            <return>  Returns the position and size of the 3D frame. </return>
            				
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RT3DFrame.FrameSize">
            <summary>
               Set/Get the size of the of the 3D frame.
            </summary>
            	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RT3DFrame.FrameRect">
            <summary>
               Set/Get the Rectangle2D object used to define the position and size of the 3D frame.
            </summary>
            	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RT3DFrame.InnerFrameRect">
            <summary>
               Set/Get the Rectangle2D object that represents the rectangle inside the 3D border of the 3D frame.
            </summary>
            	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RT3DFrame.LightMode">
            <summary>
               Set/Get the apparent direction of the light source used to highlight the 3D frame. Use one of the 
               direction constants: LIGHT_UPPER_LEFT, LIGHT_UPPER_RIGHT, LIGHT_LOWER_LEFT, LIGHT_LOWER_RIGHT , 
               LIGHT_STRAIGHT_ON , LIGHT_NONE, OUTSET_3D_LOOK, INSET_3D_LOOK.
            </summary>
            	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RT3DFrame.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              The CheckIntersection method. It test to see if the test point  is within the intersectionTestDistance 
              of the object location.  Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAlarm">
            <summary>
            Summary description for the RTAlarm class.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmType">
            <summary>
             The RTAlarm class stores alarm information for the RTProcessVar class. The RTAlarm class specifies the 
             type of the alarm, the alarm color, alarm text messages and alarm hysteresis value. The RTProcessVar 
             classes can hold an unlimited number of RTAlarm objects in a ArrayList.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmLimitValue">
            <summary>
             Specifies the alarm limit value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmDeviationBaseValue">
            <summary>
             Specifies the alarm deviation base value: Unused.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.hysteresisValue">
            <summary>
             Specifies the hysteresis value used in the alarm module. A process variable will go into alarm when 
             the alarmLimitValue is exceeded, it will fall out of alarm when the process value is less than 
             alarmLimitValue - hysteresisValue.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmState">
            <summary>
             Specifies true if the process variable is currently in alarm.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.prevAlarmState">
            <summary>
             Specifies the previous alarm state, last time the alarm was checked.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmEnable">
            <summary>
             Specifies true if alarm checking is enabled.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmDisplay">
            <summary>
             Specifies true if auto graphics should display alarm indicators for this alarm.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmSymbolColor">
            <summary>
             Specifies default alarm symbol color. Unused
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmTextColor">
            <summary>
             Specifies default alarm text color. Unused
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.normalMessage">
            <summary>
             Specifies message string displayed when there is no alarm.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.alarmMessage">
            <summary>
             Specifies message string displayed when in an alarm state.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.ackAlarmMessage">
            <summary>
             Specifies message string displayed when in an alarm state but the alarm is acknowledged. Unused.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarm.processVar">
            <summary>
             Specifies process variable associated with the alarm.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.Clone">
            <summary>
             Returns an object that is a Clone of this RTAlarm object. 
            </summary>
            <returns> Returns a Clone of this RTAlarm object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTAlarm object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.InitDefaults">
            <summary>
             Initializes default values for the RTAlarm object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.Copy(com.quinncurtis.rtgraphnet.RTAlarm)">
            <summary>
              Copies the source RTAlarm object. 
            </summary>
            <param name="source"> The source RTAlarm object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.#ctor">
            <summary>
              The default constructor for the RTAlarm class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32)">
            <summary>
              This constructor creates a new instance of an RTAlarm object, using the specified process variable 
              and alarm type.
            </summary>
            <param name="processvar"> Specifies the process variable that the alarm attached to. </param>
            <param name="alarmtype"> Specifies the alarm type: RT_ALARM_NONE, RT_ALARM_LOWERTHAN, or RT_ALARM_GREATERTHAN.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.#ctor(System.Int32,System.Double)">
            <summary>
              This constructor creates a new instance of an RTAlarm object, using the specified alarm type 
              and alarm limit value.
            </summary>
            <param name="alarmtype"> Specifies the alarm type: RT_ALARM_NONE, RT_ALARM_LOWERTHAN, or RT_ALARM_GREATERTHAN.</param>
            <param name="alarmlimitvalue"> Specifies the alarm limit value.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Double)">
            <summary>
              This constructor creates a new instance of an RTAlarm object, using the specified process variable, 
              alarm type and alarm limit value.
            </summary>
            <param name="processvar"> Specifies the process variable that the alarm is for. </param>
            <param name="alarmtype"> Specifies the alarm type: RT_ALARM_NONE, RT_ALARM_LOWERTHAN, or RT_ALARM_GREATERTHAN.</param>
            <param name="alarmlimitvalue"> Specifies the alarm limit value.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Double,System.String,System.String)">
            <summary>
              This constructor creates a new instance of an RTAlarm object, using the specified process variable, 
              alarm type, alarm limit value and alarm message.
            </summary>
            <param name="processvar"> Specifies the process variable that the alarm is attached to. </param>
            <param name="alarmtype"> Specifies the alarm type: RT_ALARM_NONE, RT_ALARM_LOWERTHAN, or RT_ALARM_GREATERTHAN.</param>
            <param name="alarmlimitvalue"> Specifies the alarm limit value.</param>
            <param name="normalmessage"> Specifies display message when no alarm present.</param>
            <param name="alarmmessage"> Specifies the alarm message.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Double,System.String,System.String,System.Double)">
            <summary>
              This constructor creates a new instance of an RTAlarm object, using the specified process variable, 
              alarm type, alarm limit value and alarm message.
            </summary>
            <param name="processvar"> Specifies the process variable that the alarm is attached to. </param>
            <param name="alarmtype"> Specifies the alarm type: RT_ALARM_NONE, RT_ALARM_LOWERTHAN, or RT_ALARM_GREATERTHAN.</param>
            <param name="alarmlimitvalue"> Specifies the alarm limit value.</param>
            <param name="normalmessage"> Specifies the message displayed when there is no alarm.</param>
            <param name="alarmmessage"> Specifies the alarm message.</param>
            <param name="hysteresisvalue"> Specifies the hysteresis value of the alarm.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.CheckAlarm(System.Double)">
            <summary>
              Check the current value against the alarmLimitValue.
            </summary>
            <return> Returns true if the alarm condition is met. Hysteresis values are used in the alarm checking </return>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmMessage">
            <summary>
              Get/Set the current alarm message.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.NormalMessage">
            <summary>
              Get/Set the Normal alarm message;
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AckAlarmMessage">
            <summary>
              Get/Set the Acknowledge alarm message;
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.GetAlarm">
            <summary>
              Returns the current alarm state based on the current value of the processVar.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarm.GetAlarm(System.Double)">
            <summary>
              Returns the current alarm state based on the passed in value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmType">
            <summary>
              Get/Set the alarm type: RT_ALARM_NONE, RT_ALARM_LOWERTHAN, or RT_ALARM_GREATERTHAN.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmLimitValue">
            <summary>
              Get/Set the alarm limit value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.HysteresisValue">
            <summary>
              Get/Set the alarm hysteresis value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmSymbolColor">
            <summary>
              Get/Set the alarm symbol color.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.ProcessVar">
            <summary>
              Get/Set the processVar object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmTextColor">
            <summary>
               Get/Set the alarm text color.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmEnable">
            <summary>
              Get/Set the alarm enable flag.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmDisplay">
            <summary>
              Get/Set the alarm display flag.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.AlarmState">
            <summary>
              Get/Set the alarm state, true if the last call to CheckAlarm show that the process variable 
              currently in alarm.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarm.PrevAlarmState">
            <summary>
              Get/Set the previous alarm state.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAlarmEventArgs">
            <summary>
            This class is used to pass information to the RTAlarmEventDelegate delegate in RTProcessVar alarm events.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.eventAlarm">
            <summary>
             The RTProcessVar class can throw an alarm event based on either the current alarm state, or an alarm transition 
             from one alarm state to another. The RTAlarmEventArgs class is used to pass alarm data to the event handler.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.processVar">
            <summary>
             A reference to the RTProcessVar object associated with the alarm event.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.alarmChannel">
            <summary>
             The channel number associated with the alarm
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.InitDefaults">
            <summary>
             Initializes default values for the object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTAlarmEventArgs object for common errors.
            </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.Copy(com.quinncurtis.rtgraphnet.RTAlarmEventArgs)">
            <summary>
             Copies the source RTAlarmEventArgs object.
            </summary>
             <param name= "source"> The source RTAlarmEventArgs object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.#ctor">
            <summary>
              The default RTAlarmEventArgs constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.rtgraphnet.RTAlarm,System.Int32)">
            <summary>
              This constructor creates a RTAlarmEventArgs object that is used to pass data associated with alarm events. 
            </summary>
            <param name="pv"> The RTProcessVar object associated with the alarm event. </param>
            <param name="alarm"> The RTAlarm object associated with the alarm event. </param>
            <param name="channel"> The channel number associated with the alarm event.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.ProcessVar">
            <summary>
              Get/Set the RTProcessVar object associated with the alarm.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.EventAlarm">
            <summary>
              Get/Set the RTAlarm object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmEventArgs.AlarmChannel">
            <summary>
              Get/Set the alarm channel associated with the alarm.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAlarmIndicator">
             <summary>
            This class is used to provide alarm limit indicators for RTSingleValueIndicator objects.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmIndicator.primaryAxis">
            <summary>
             A reference to the Axis object associated with alarm indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmIndicator.primaryPlot">
            <summary>
             A reference to the RTPlot object associated with alarm indicator. The process variable associated
             with the RTPlot object is used as the reference for all alarm levels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmIndicator.alarmLimitSymbols">
            <summary>
             If the alarmIndicatorMode is RT_ALARM_LIMIT_SYMBOL_INDICATOR, this ArrayList contains a list of the 
             symbols used to display the alarm levels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmIndicator.alarmColorBackgroundAlpha">
            <summary>
             The solid background alarm indicators (RT_ALARM_LIMIT_BACKGROUND_INDICATOR) can be transparent 
             if the alarmColorBackgroundAlpha is set to something less than 255.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmIndicator.alarmIndicatorMode">
            <summary>
             This property specifies the alarm indicator mode: RT_ALARM_LIMIT_SYMBOL_INDICATOR,
             RT_ALARM_LIMIT_LINE_INDICATOR, RT_ALARM_LIMIT_BACKGROUND_INDICATOR,
             RT_NO_ALARM_LIMIT_INDICATOR.
            </summary>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTAlarmIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTAlarmIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.#ctor">
            <summary>
              The default RTAlarmIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.Copy(com.quinncurtis.rtgraphnet.RTAlarmIndicator)">
            <summary>
             Copies the source RTAlarmIndicator object.
            </summary>
             <param name= "source"> The source RTAlarmIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.Clone">
            <summary>
             Returns an object that is a Clone of this RTAlarmIndicator object. 
            </summary>
            <returns> Returns a Clone of this RTAlarmIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTAlarmIndicator object of a specified type, and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTAlarmIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.AutoInitRTAlarmSymbols">
            <summary>
             Creates the alarm indicator symbols and adds them to the alarmLimitSymbols list.
            </summary> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.AutoInitRTBarAlarmAreas(System.Drawing.Graphics)">
            <summary>
             Draws the alarm indicator fill areas.
            <param name="g2"> The graphics context.</param>
            </summary> 		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.AutoInitRTBarAlarmLines(System.Drawing.Graphics)">
            <summary>
             Draws the alarm indicator lines.
            <param name="g2"> The graphics context.</param>
            </summary> 	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.#ctor(com.quinncurtis.chart2dnet.Axis,com.quinncurtis.rtgraphnet.RTPlot)">
            <summary>
              This constructor creates a new RTAlarmIndicator object that references the specified source axis and 
              RTPlot object. 
            </summary>
            <param name="sourceaxis"> A reference to the Axis object associated with alarm indicator. </param>
            <param name="rtplot"> A reference to the RTPlot object associated with alarm indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.InitRTAlarmIndicator(com.quinncurtis.chart2dnet.Axis,com.quinncurtis.rtgraphnet.RTPlot)">
            <summary>
              Initialize a RTAlarmIndicator object that references the specified source axis and 
              RTPlot object. 
            </summary>
            <param name="sourceaxis"> A reference to the Axis object associated with alarm indicator. </param>
            <param name="rtplot"> A reference to the RTPlot object associated with alarm indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTPlot)">
            <summary>
              This constructor creates a new RTAlarmIndicator object that references the specified source axis 
              and RTPlot object. 
            </summary>
            <param name="transform"> A reference to the coordinate system associated with alarm indicator. </param>
            <param name="rtplot"> A reference to the RTPlot object associated with alarm indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.InitRTAlarmIndicator(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTPlot)">
            <summary>
              Initialize a  RTAlarmIndicator object that references the specified source axis 
              and RTPlot object. 
            </summary>
            <param name="transform"> A reference to the coordinate system associated with alarm indicator. </param>
            <param name="rtplot"> A reference to the RTPlot object associated with alarm indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.DrawAlarmIndicators(System.Drawing.Graphics)">
            <summary>
              Draw the alarm indicators. 
            </summary>
            <param name="g2"> The graphics context.</param>*/
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>*/
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the alarm indicator objects. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the alarm indicator objects. </returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmIndicator.AlarmIndicatorMode">
            <summary>
              Get/Set the alarm indicator mode. RT_ALARM_LIMIT_SYMBOL_INDICATOR,
             RT_ALARM_LIMIT_LINE_INDICATOR, RT_ALARM_LIMIT_BACKGROUND_INDICATOR,
             RT_NO_ALARM_LIMIT_INDICATOR.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmIndicator.SymbolSize">
            <summary>
              Get/Set the size of the alarm indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmIndicator.AlarmColorBackgroundAlpha">
            <summary>
              Get/Set the alpha level of the fill colors used when the alarm indicator mode is
              RT_ALARM_LIMIT_BACKGROUND_INDICATOR.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmIndicator.PrimaryAxis">
            <summary>
              Get/Set the reference axis used to display the alarm indicators.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmIndicator.PrimaryPlot">
            <summary>
              Get/Set the RTPlot object associated with alarm indicator. The process variable associated
             with the RTPlot object is used as the reference for all alarm levels.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmIndicator.AlarmLimitSymbols">
            <summary>
              Get the ArrayList holding the RTSymbol object associated with an alarm.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter">
            Displays an alarm message in a RTPanelMeter format.  
            QCChart2D StringLabel class that is used to specify the font and format information associated with 
            the panel meter.
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.alarmTemplate">
            <summary>
            Displays an alarm text message. It contains a template based on the QCChart2D StringLabel class that is used 
            to specify the font and string format information associated with the panel meter. It bases the alarm text 
            message on the alarm information in the associated RTProcessVar object.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.textframe">
            <summary>
            The text frame used to display the alarm text. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.minValueWidth">
            <summary>
            Sets a minimum size for the text frame, to prevent empty or small strings from constantly changing the
            size of the textframe. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTAlarmPanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.#ctor">
            <summary>
             The default RTAlarmPanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.Copy(com.quinncurtis.rtgraphnet.RTAlarmPanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.Clone">
            <summary>  Returns an object that is a Clone of this RTAlarmPanelMeter object.
            </summary>
            <returns> Returns a Clone of this RTAlarmPanelMeter object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTAlarmPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTAlarmPanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTAlarmPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTAlarmPanelMeter object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTAlarmPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTAlarmPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.CalcAlarmFrameMinWidthx(System.Drawing.Graphics)">
            <summary>
             Calculates the minimum frame width to use in in displaying alarm strings in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
              <returns> The minimum frame width to use in in displaying alarm strings in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.SetResizeMultiplier(System.Double)">
            <summary>
             Sets the resize multiplier used by the RTPanelMeter object. 
            </summary>
            <param name="multiplier"> Sets the resize multiplier used by the object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.AlarmTemplate">
            <summary>
             Get/Set the string template defining the panel meter alarm string format. All of the text properties 
             associated with the panel meter are set using this property. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the AlarmTemplate template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAlarmPanelMeter.TextColor">
            <summary>
             Set/Get the text color of the panelmeter.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAnnunciator">
            <summary>
            An RTAnnunciator is used to display the current values and alarm states of a single channel real-time data. 
            It consists of a rectangular cell that can contain the tag name, units, current value, and alarm status message. 
            Any of these items may be excluded. If a channel is in alarm, the background of the corresponding cell changes 
            its color, giving a strong visual indication that an alarm has occurred. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAnnunciator.annunciatorRect">
            <summary>
             The annuncator rectangle.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAnnunciator.frame3DEnable">
            <summary>
             Enables drawing of the annunciator rectangle.
            </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTAnnunciator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.InitDefaults">
            <summary>
             Initializes default values for the RTAnnunciator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.#ctor">
            <summary>
              The default RTAnnunciator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.Copy(com.quinncurtis.rtgraphnet.RTAnnunciator)">
            <summary>
             Copies the source RTAnnunciator object.
            </summary>
             <param name= "source"> The source RTRAnnunciator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.Clone">
            <summary>
             Returns an object that is a Clone of this RTRAnnunciator object. 
            </summary>
            <returns> Returns a Clone of this RTRAnnunciator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTAnnunciator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTRAnnunciator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTAnnunciator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTRAnnunciator object. </param>
            <param name="datasource"> The process variable associated with the annunciator. </param>
            <param name="annunpos"> The position and size of the annunciator. </param>
            <param name="attrib"> The color attributes of the annunciator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.InitRTAnnunciatorPlot(com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTAnnunciator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the annunciator. </param>
            <param name="annunpos"> The position and size of the annunciator. </param>
            <param name="attrib"> The color attributes of the annunciator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.DrawRTAnnunciatorPlot(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the annunciator cell.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the annunciator. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the annunciator.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.GetRTProcessVar">
            <summary>
             Returns the RTProcessVar object associated with this plot object. 
            </summary>
            <returns> Returns the RTProcessVar object associated with this plot object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.GetRTProcessVar(System.Int32)">
            <summary>
             Returns the RTProcessVar object associated with a specific channel in this plot object. 
            </summary>
            <param name="channel"> Returns the RTProcessVar object associated with a specific channel in this plot object.  </param>
            <returns> Returns the RTProcessVar object associated with a specific channel in this plot object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAnnunciator.GetDataset">
            <summary>
             Returns the dataset of the RTProcessVar object associated with this plot object. 
            </summary>
            <returns> Returns the dataset of the RTProcessVar object associated with this plot object. </returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAnnunciator.AnnunciatorRect">
            <summary>
              Get/Set the annunciator rectangle.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAnnunciator.Frame3DEnable">
            <summary>
             Set/Get to true to enable drawing of the annunciator rectangle.
            </summary>	
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph">
            <summary>
            The RTAutoVerticalScrollGraph is a ChartView derived object that encapsulates all of the chart elements needed to draw a scrolling
            graph, including an array of RTProcessVar objects, a coordinate system, axes, axes labels, RTSingleValuePlot, RTGroupMultiValuePlot,
            RTAlarmSymbol alarm symbols, and RTPanelMeter objects for the display of numeric values, alarm status, a title and units strings. 
            Only horizontal scrolling modes are supported.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.defaultChartFontString">
            <summary>
             The default font used in the display of all strings in the table.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.chartSimpleDataset">
             <summary>
            The SimpleDataset that holds the data used to plot the scroll graph.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.chartGroupDataset">
             <summary>
            The SimpleDataset that holds the data used to plot the scroll graph.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.datasetList">
             <summary>
            A list of the SimpleDataset datasets.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.defaultSubHeadFont">
            <summary>
            The font used for the subhead title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.defaultFooterFont">
            <summary>
            The font used for the chart footer.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.defaultToolTipFont">
            <summary>
            The  font used for the chart tooltip template.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.defaultLegendFont">
            <summary>
            The  font used for the chart legend.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.xAxis">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.xAxis2">
            <summary>
            The x-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yAxis">
            <summary>
            The y-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yAxis2">
            <summary>
            The y-axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.xAxisLab">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.xAxisLab2">
            <summary>
            The x-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yAxisLab">
            <summary>
            The y-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yAxisLab2">
            <summary>
            The y-axis labels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.xAxisTitle">
            <summary>
            The x-axis title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yAxisTitle">
            <summary>
            The y-axis title.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.xGrid">
            <summary>
            The x-axis grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yGrid">
            <summary>
            The y-axis grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.barWidth">
            <summary>
            The barwidth.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.barDataValue">
            <summary>
            The numeric label template used to place numeric values on the bars.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.subHead">
            <summary>
            The subheader for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.footer">
            <summary>
            The footer for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.datatooltip">
            <summary>
            The data tooltip for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.autoFitGraphBorder">
            <summary>
            The default graph border for the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.datasetInitFlag">
            <summary>
            True means that the dataset has been initiated with the frequency data.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.plotObjectList">
            <summary>
             An array of the plot objects added to the chart.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.simplePlotObj">
            <summary>
             Holds a reference to the most recent simple plot object added to the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.groupPlotObj">
            <summary>
             Holds a reference to the most recent group plot object added to the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.alarmIndicator">
            <summary>
            A reference to the RTAlarmIndicator object.
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.yScaleType">
            <summary>
             Specifies the x-scale scroll type. Use one of the contants: AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.graphScrollFrame">
            <summary>
             A reference to the RTVerticalScrollFrame used to control the scrolling and auto-scaling of the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.singleValuePlot">
            <summary>
             Holds a reference to the most recent RTSimpleSingleValuePlot object created for the graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.singleValuePlotList">
            <summary>
             An array of the RTSimpleSingleValuePlot objects created for the graph
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.startTime">
            <summary>
             The starting date/time for the chart, if yScaleType = AUTOSCROLL_DATETIME is used.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.lastTime">
            <summary>
             Stores the previous time, used in time interval calculations.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.sampleInterval">
            <summary>
             Stores the most recent sample interval, i.e. the time between adjacent sample intervals.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.initialTimeSpanSeconds">
            <summary>
             The initial time span of the x-axis is used.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.graphTimeBase">
            <summary>
             The time-base of the graph, i.e. what the x-axis is scaled for. Use one of the ChartObj time constants: MILLISECOND,SECOND,MINUTE,HOUR, DAY_OF_MONTH,DAY_OF_WEEK,DAY_OF_YEAR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.timeBaseMultiplier">
            <summary>
             Stores a a multiplier to use.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.updateCount">
            <summary>
             Counts the number of updates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.legendFont">
            <summary>
            Stores a reference to the chart legend font.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.legendAttributes">
            <summary>
            Stores a reference to the legend attriburtes.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.chartLegend">
            <summary>
            Stores a reference to the chart legend.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.CalcTimeBaseMutliplier(System.Int32)">
            <summary>
             Calculate the base time multiplier
             </summary>		
             <param name= "timebase">  Specifies the time base:  MILLISECOND,SECOND,MINUTE,HOUR, DAY_OF_MONTH,DAY_OF_WEEK,DAY_OF_YEAR.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.FormatOptions(System.Int32)">
            <summary>
             Format options for the class, if applicatble.
             </summary>
             <param name= "format">  Graph format. </param>
             
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.#ctor">
            <summary>
             Default constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitRTAutoScrollGraph(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "maxx">  The ending x-value</param>
             <param name= "maxy">  The ending y-value, in units of the timebase. . </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitRTAutoScrollGraph(System.Double,System.TimeSpan,System.Double,System.TimeSpan)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value as a TimeSpan value. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value as a TimeSpan value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitRTAutoScrollGraph(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value, in units of the timebase, usually 0 for elapsed time scales.. </param>
             <param name= "maxx">  The ending x-value.</param>
             <param name= "maxy">  The ending y-value, in units of the timebase. . </param>
             <param name= "scaletype">  Specifies the scale type:  AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitRTAutoScrollGraph(System.Double,System.DateTime,System.Double,System.DateTime)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value as a DateTime value. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value as a DateTime value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitRTAutoScrollGraph(System.Double,com.quinncurtis.chart2dnet.ChartCalendar,System.Double,com.quinncurtis.chart2dnet.ChartCalendar)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value as a DateTime value. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value as a DateTime value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value, in units of the timebase. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.#ctor(System.Double,System.TimeSpan,System.Double,System.TimeSpan)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value as a TimeSpan value. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value as a TimeSpan value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.#ctor(System.Double,System.DateTime,System.Double,System.DateTime)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value as a DateTime value. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value as a DateTime value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.#ctor(System.Double,com.quinncurtis.chart2dnet.ChartCalendar,System.Double,com.quinncurtis.chart2dnet.ChartCalendar)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value as a ChartCalendar value. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value as a ChartCalendar value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.SetInitialScale(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Initialize the x- and y-scales of the scrolling graph.
             </summary>		
             <param name= "minx">  The starting x-value. </param>
             <param name= "miny">  The starting y-value, in units of the timebase, usually 0 for elapsed time scales. </param>
             <param name= "maxx">  The ending x-value. </param>
             <param name= "maxy">  The ending y-value, in units of the timebase. </param>
             <param name= "scaletype">  Specifies the scale type:  AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitDefaults">
            <summary>
              Initialize default values. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateCoordinateSystems">
            <summary>
              Updates the coordinate system of all chart objects.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitRTProcessVar(System.String)">
            <summary>
             Initialize a default process variable.
             </summary>		
             <param name= "tag"> The string associated with the process variable </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitSimpleRTPlotObject(System.Int32,System.Drawing.Color,System.String)">
            <summary>
             Initializes the scrolling graph plot object
             </summary>		
             <param name= "plottype">  Specifies the simple plot type: LINE_MARKER_PLOT, LINE_PLOT, BAR_PLOT, SCATTER_PLOT </param>
             <param name= "colr">  The primary color of the plot object. </param>
             <param name= "tag">  The tag name associated with the plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.AddRTPlotObject(System.Int32,System.Drawing.Color,System.String)">
            <summary>
             Add a simple plot object to the scrolling graph.
             </summary>		
             <param name= "plottype">  Specifies the simple plot type: LINE_MARKER_PLOT, LINE_PLOT, BAR_PLOT, SCATTER_PLOT </param>
             <param name= "colr">  The primary color of the plot object. </param>
             <param name= "tag">  The tag name associated with the plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.GetAxisRect(com.quinncurtis.chart2dnet.AxisLabels)">
            <summary>
            Returns the bounding box of an axis, and axis labels object.
            </summary>
            <param name="lab">Axis labels object</param>
            <returns>Returns the union of the axis and axis labels bounding boxes.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.SetDefaultPlotAttributes(com.quinncurtis.chart2dnet.SimpleVersaPlot,System.Drawing.Color)">
            <summary>
             Given a color, sets the default attributes of a simple plot object.
             </summary>		
             <param name= "plot">  The SimpleVersaPlot object used as the scrolling graph object. </param>
             <param name= "colr">  The primary color of the plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitStrings(System.String,System.String,System.String)">
            <summary>
             Initializes the scrolling graph title and axis strings.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
             <param name= "xtitle">  The x-axis title string. </param>
             <param name= "ytitle">  The t-axis title string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitStrings(System.String)">
            <summary>
             Initializes the scrolling graph title.
             </summary>		
             <param name= "title">  The title (or tag) string. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.GetAverageInterval(com.quinncurtis.chart2dnet.ChartDataset)">
            <summary>
             Get the average interval between adjacent data samples.
             </summary>		
             <param name= "ds">  The sourc dataset. </param>
             <returns> The average interval between adjacent data samples.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitCoordinateSystem(System.Int32)">
            <summary>
             Initialize the coordinate system based on the scroll type.
             </summary>		
             <param name= "coords">  Specifies the type:  AUTOSCROLL_CARTESIAN, AUTOSCROLL_ELAPSEDTIME, AUTOSCROLL_DATETIME. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BuildChart">
            <summary>
             Builds the scroll graph using the base objects ChartView.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BuildChart(com.quinncurtis.chart2dnet.ChartView)">
            <summary>
             Builds the scroll graph using the passed in ChartView object.
             </summary>
             <param name= "chartVu"> A ChartView object that the scroll graph is to be drawn in. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.CalcAutoBarWidth">
            <summary>
             Calculated the bar width
             </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "value"> A new value. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.Double,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.Double,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "value"> A new value. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.TimeSpan,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(com.quinncurtis.chart2dnet.ChartCalendar,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.DateTime,System.Double[],System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.TimeSpan,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(com.quinncurtis.chart2dnet.ChartCalendar,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.UpdateScrollGraph(System.DateTime,System.Double,System.Boolean)">
            <summary>
             Update the process variable scroll graph.
             </summary>	
             <param name= "timestamp"> Specifies the time stamp for the data values. </param>
             <param name= "values"> New values, one for each trace. </param>
             <param name= "updatedraw"> True and the chart is immediately updated. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.EnableChannel(System.Int32,System.Boolean)">
            <summary>
             Enable, disable a specific channel in the chart
             </summary>	
             <param name= "channel"> channel number. </param>
             <param name= "enable"> True and the channel is enabled. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.PreDrawGraphObjects">
            <summary>
            Pre-draw the graph objects in order to define their size.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.Draw(System.Drawing.Graphics)">
            <summary>
             Overrides the Draw method of the underlying ChartView class.
             <param name= "g"> The graphics context the chart is drawn to. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.ChartSimpleDataset">
            <summary>
            Get the SimpleDataset object that holds the data used to plot the scroll graph.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.DefaultToolTipFont">
            <summary>
            Set/Get the default font object used for the tooltip. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.XAxis">
            <summary>
            Get the x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.XAxis2">
            <summary>
            Get the second x-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.YAxis">
            <summary>
            Get the y-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.YAxis2">
            <summary>
            Get the second y-axis object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.XAxisLab">
            <summary>
            Get the x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.XAxisLab2">
            <summary>
            Get the second x-axis labels object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.YAxisLab">
            <summary>
            Get the y-axis labels object. Accessible only after BuildGrap
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.YAxisLab2">
            <summary>
            Get the second y-axis labels object. Accessible only after BuildGrap
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.XAxisTitle">
            <summary> 
            Get the x-axis title object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.YAxisTitle">
            <summary>
            Get the y-axis title  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.XGrid">
            <summary>
            Get the x-axis grid  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.YGrid">
            <summary>
            Get the y-axis grid  object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.SimplePlotObj">
            <summary>
            Get the SimpleVersaPlot plot object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.GroupPlotObj">
            <summary>
            Get the GroupVersaPlot plot object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BarDataValue">
            <summary>
            Get the numeric label template  object used to place numeric values on the bars.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.DefaultLegendFont">
            <summary>
            Get/Set the font used for the legend.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.DefaultSubHeadFont">
            <summary>
            Get/Set the font used for the sub head.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.SubHead">
            <summary>
            Get the sub head  object for the chart. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.DefaultFooterFont">
            <summary>
            Get/Set the font used for the chart footer. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.Footer">
            <summary>
            Get the footer object for the chart. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.Datatooltip">
            <summary>
            Get the data tooltip object for the chart. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.AutoFitGraphBorder">
            <summary>
            Set to true and the graph will be auto-positioned in the chart view, maximizing the plot area.
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BarLineColor">
            <summary>
             Sets the  line color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BarFillColor">
            <summary>
             Sets the fill color for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BarLineWidth">
            <summary>
             Sets the line width for the chart object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.DefaultChartFontString">
            <summary>
               Set/Get the default font used in the chart. This is a string specifiying the name of the font.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.BarWidth">
            <summary>
            Set/Get the bar width.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.PlotObjectList">
            <summary>
            Get plot object list.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.DatasetList">
            <summary>
            Get dataset object list.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.GraphScrollFrame">
            <summary>
            Get the graphs RTVerticalScrollFrame.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.SingleValuePlot">
            <summary>
            Get the most recent  RTSingleValuePlot object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.ProcessVariableArray">
            <summary>
            Get the ArrayList holding all of the RTProcessVar objects
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.SingleValuePlotList">
            <summary>
            Get the ArrayList holding all of the RTSimpleSingleValuePlot objects
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.StartTime">
            <summary>
            Get/Set the start time the elapsed time and date time scrolling scale uses
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.ChartLegend">
            <summary>
            Get/Set the charts Legend object
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.AlarmIndicator">
            <summary>
            Get a reference to the RTAlarmIndicator object
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTAutoVerticalScrollGraph.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTBarIndicator">
            <summary>
            An RTBarIndicator is used to display the current value of an RTProcessVar using a bar changing its size. 
            One end of each bar is always fixed at the specified base value. Bars can change their size either in vertical or 
            horizontal direction. Sub types within the RTBarIndicator class support segmented bars, custom segmented bars with 
            variable width segments, and pointer bar indicators.An RTBarIndicator is used to display the current value of an 
            RTProcessVar using a bar changing its size. One end of each bar is always fixed at the specified base value. 
            Bars can change their size either in vertical or horizontal direction. Sub types within the RTBarIndicator class 
            support segmented bars, custom segmented bars with variable width segments, and pointer bar indicators.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.indicatorSubType">
            <summary>
             Specifies the bar indicator sub type: RT_BAR_SOLID_SUBTYPE, RT_BAR_SEGMENTED_SUBTYPE, 
             RT_BAR_SINGLE_SEGMENT_SUBTYPE, RT_POINTER_SUBTYPE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.barOffset">
            <summary>
             Specifies the bar offset from its fixed x or y value in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.segmentWidth">
            <summary>
             Specifies the thickness of a segmented bars segment in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.segmentSpacing">
            <summary>
             Specifies the spacing between segmented bars segments in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.indicatorBackground">
            <summary>
             Specifies the background attributes of the indicator display area.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.indicatorBackgroundEnable">
            <summary>
             Set to True if indicatorBackground is on.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.segmentValueRoundMode">
            <summary>
             Specifies that the current process value is rounded up in calculating how many segments to display in  
             RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE modes. Use one of the constants: RT_FLOOR_VALUE, 
             RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.segmentCornerRadius">
            <summary>
             Specifies the corner radius used to draw the segment rounded rectangles.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.barEndBulb">
            <summary>
             True and a bulb is drawn at the minimum endpoint of the bar indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.barEndBulbScaleFactor">
            <summary>
             Bulb bar end scale factor (multiplier times bar width).
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.barEndBulbOffset">
            <summary>
             Bulb bar end offset factor (multiplier times bar width).
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.barBulbSymbol">
            <summary>
             The ChartSymbol object used as the bar bulb.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTBarIndicator.pointerSymbolNum">
            <summary>
             Specifies the symbol used for the pointer symbol indicator subtype, RT_POINTER_SUBTYPE.
             Use one of the constants: RT_NO_SYMBOL, RT_LEFT_LOW_ALARM_SYMBOL.RT_LEFT_SETPOINT_SYMBOL. 
             RT_LEFT_HIGH_ALARM_SYMBOL , RT_RIGHT_LOW_ALARM_SYMBOL, RT_RIGHT_SETPOINT_SYMBOL,
              RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL , RT_TOP_SETPOINT_SYMBOL,
               RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL,
               RT_BOTTOM_HIGH_ALARM_SYMBOL;
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTBarIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTBarIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.#ctor">
            <summary>
              The default RTBarIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.Copy(com.quinncurtis.rtgraphnet.RTBarIndicator)">
            <summary>
             Copies the source RTBarIndicator object.
            </summary>
             <param name= "source"> The source RTBarIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.Clone">
            <summary>
             Returns an object that is a Clone of this RTBarIndicator object. 
            </summary>
            <returns> Returns a Clone of this RTBarIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTBarIndicator object and scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTBarIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute,System.Int32,System.Int32)">
            <summary>
             This constructor creates a new RTBarIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTBarIndicator object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="barwidth"> The width of the bar in physical units . </param>
            <param name="barbase"> The base of the bar in physical units. </param>
            <param name="attrib"> The color attributes of the bar indicator. </param>
            <param name="barjust"> The justification of bars. Use one of the bar justification constants: JUSTIFY_MIN, 
            JUSTIFY_CENTER, JUSTIFY_MAX.. </param>
            <param name="barorient"> The orientation of the bar indicator: HORIZ_DIR or VERT_DIR. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.InitRTBarIndicator(com.quinncurtis.rtgraphnet.RTProcessVar,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute,System.Int32)">
            <summary>
             This method intializes a RTBarIndicator object and scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="barwidth"> The width of the bar in physical units . </param>
            <param name="barbase"> The base of the bar in physical units. </param>
            <param name="attrib"> The color attributes of the bar indicator. </param>
            <param name="barjust"> The justification of bars. Use one of the bar justification constants: 
            JUSTIFY_MIN, JUSTIFY_CENTER, JUSTIFY_MAX.. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.CalcBulbSymbol(System.Double,System.Double)">
            <summary>
             Calculates the shape used to draw a bulb at the end of a bar.
             <param name= "x">  The x-position of the bulb. </param>
             <param name= "y">   The x-position of the bulb. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.DrawBarIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the bar indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the bar plot bars. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the bar plot bars.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.GetCustomBarOffset(System.Double)">
            <summary>
              This virtual property is used to Set/Get algorithmic bar offsets for custom bar indicators.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTBarIndicator.GetCustomBarWidth(System.Double)">
            <summary>
              This virtual property is used to Set/Get algorithmic bar widths for custom bar indicators.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.SegmentWidth">
            <summary>
              Get/Set the thickness of segments for the  RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE 
              bar indicator sub types.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.SegmentSpacing">
            <summary>
              Get/Set the segments spacing for the  RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE 
              bar indicator sub types.
            </summary>		
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.IndicatorBackground">
            <summary>
              Get/Set the background attribute of the bar indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.IndicatorBackgroundEnable">
            <summary>
              Set to true to enable the display of the bar indicator background.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.SegmentValueRoundMode">
            <summary>
             Set/Get the segment value round mode. Specifies that the current process value is rounded up in 
             calculating how many segments to display in  RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE modes.
             Use one of the constants: RT_FLOOR_VALUE, RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.BarOffset">
            <summary>
             Set/Get the bar offset from its fixed x or y value in physical units.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.PointerSymbolNum">
            <summary>
             Set/Get the symbol used for the pointer symbol indicator subtype, RT_POINTER_SUBTYPE.
             Use one of the constants: RT_NO_SYMBOL, RT_LEFT_LOW_ALARM_SYMBOL.RT_LEFT_SETPOINT_SYMBOL. 
             RT_LEFT_HIGH_ALARM_SYMBOL , RT_RIGHT_LOW_ALARM_SYMBOL, RT_RIGHT_SETPOINT_SYMBOL,
              RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL , RT_TOP_SETPOINT_SYMBOL,
               RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL,
               RT_BOTTOM_HIGH_ALARM_SYMBOL.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.IndicatorSubType">
            <summary>
             Get/Set the bar indicator sub type: RT_BAR_SOLID_SUBTYPE, RT_BAR_SEGMENTED_SUBTYPE, 
             RT_BAR_SINGLE_SEGMENT_SUBTYPE, RT_POINTER_SUBTYPE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.SegmentCornerRadius">
            <summary>
             Get/Set the corner radius used to draw the segment rounded rectangles.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.BarEndBulb">
            <summary>
             Get/Set true to draw bulb at end of bar.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.BarEndBulbScaleFactor">
            <summary>
             Get/Set the scaling factor (multiplier times bar width) of the bar end bulb.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.BarEndBulbOffset">
            <summary>
             Get/Set Bulb bar end offset factor (multiplier times bar width).
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTBarIndicator.BarBulbSymbol">
            <summary>
             Get/Set the scaling factor (multiplier times bar width) of the bar end bulb.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTComboProcessVar">
            <summary>
            Summary description for the RTComboProcessVar class. This class transforms a single value in a
            group of values suitable for use with clocks and dials that have an underlying modulo-n display
            algorithm.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTComboProcessVar.processVarsList">
            <summary> A list of the process variables where the converted value is stored. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTComboProcessVar.moduloList">
            <summary> An array of the modulo factors used to calculate the combo process variables.
            			  processVarsList[i].Current = (this.CurrentValue / divisorList[i]) % moduloList[i];
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTComboProcessVar.divisorList">
            <summary> An array of the divisors used to calculate the combo process variables
            			  processVarsList[i].Current = (this.CurrentValue / divisorList[i]) % moduloList[i];
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTComboProcessVar object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.Copy(com.quinncurtis.rtgraphnet.RTComboProcessVar)">
            <summary>
             Copies the source object.
             </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.Clone">
            <summary>  Returns an object that is a Clone of this RTComboProcessVar object.
            </summary>
             <returns> Returns a Clone of this RTComboProcessVar object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.InitDefaults">
            <summary>
             Initializes default values for the class.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.#ctor">
            <summary>
             The default RTComboProcessVar constructor.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.#ctor(System.String,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTComboProcessVar object.
             </summary>
             <param name="tagname"> The string representing the tag name of the process variable.</param>
             <param name= "defaultattribute"> Specifies the default attribute for this process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.#ctor(com.quinncurtis.chart2dnet.TimeSimpleDataset,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTComboProcessVar object.
             </summary>
             <param name="dataset"> A dataset that will be used to store historical values.</param>
             <param name= "defaultattribute"> Specifies the default attribute for this process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.AddProcessVar(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             Adds a new process variable to the processVarsList.
            </summary>
             <param name= "pv"> A new process variable that is added to the processVarsList. The process variables
             added to this list much correspond to the moduloList and divisorList values relative to the same index.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.ResetProcessVarsList">
            <summary>
             Clears the processVarsList.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.GetProcessVar(System.Int32)">
            <summary>
             Returns the RTProcessVar object at the specified index.
            </summary>
             <param name= "index"> Index of the RTProcessVar object in the processVarsList.</param> 
             <returns> Returns the RTProcessVar object at the specified index. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.SetCurrentValue(System.Double,System.Double)">
            <summary>
             Updates the current value and the dataset of the underlying RTProcessVar.
             It also updates the processVarsList with the calculated process values.
            </summary>
             <param name= "timestamp"> The time stamp of the current value.</param> 
             <param name= "pv">Current process value.</param>
                 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.SetCurrentValue(System.Double)">
            <summary>
             Updates the current value and the dataset of the underlying RTProcessVar.
             It also updates the processVarsList with the calculated process values.
            </summary>
             <param name= "pv">Current process value.</param>
                
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.SetCurrentValue(com.quinncurtis.chart2dnet.ChartCalendar,System.Double)">
            <summary>
             Updates the current value and the dataset of the underlying RTProcessVar.
             It also updates the processVarsList with the calculated process values.
            </summary>
             <param name= "timestamp"> The time stamp of the current value.</param> 
             <param name= "pv">Current process value.</param>
                
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.SetModuloItem(System.Int32,System.Double)">
            <summary>
             Sets the modulo factor at the specified index.
            </summary>
             <param name= "index"> The index of modulo factor.</param> 
             <param name= "modulofactor"> Sets the modulo factor at the specified index.</param> 
             
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTComboProcessVar.SetDivisorItem(System.Int32,System.Double)">
            <summary>
             Sets the divisor factor at the specified index.
            </summary>
             <param name= "index"> The index of the divisor.</param> 
             <param name= "divisor"> Sets the divisor factor at the specified index.</param> 
             
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTComboProcessVar.Item(System.Int32)">
            <summary>
              Get the RTProcessVar item at the specified index in the processVarsList.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTControlButton">
            <summary>
            Derived from the .Net Form Control Button class, it adds superior On/Off button text and color control 
            and supports momentary, toggle and radio button styles.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonChecked">
            <summary>
            Specifies the button checked state.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonCheckedColor">
            <summary>
            Specifies the button checked color.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonCheckedTextColor">
            <summary>
            Specifies the button checked text color.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonCheckedText">
            <summary>
            Specifies the button checked text.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonUncheckedColor">
            <summary>
            Specifies the button checked color.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonUncheckedTextColor">
            <summary>
            Specifies the button checked text color.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonUncheckedText">
            <summary>
            Specifies the button checked text.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonFont">
            <summary>
            Specifies the button font.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.paintFlag">
            <summary>
            Specifies that a paint operation has been triggered. Prevents recursive redraws in OnPaint.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlButton.buttonSubtype">
            <summary>
            Specifies the button subtype. Use of of the button type constants: RT_CONTROL_RADIOBUTTON_SUBTYPE, 
            RT_CONTROL_MOMENTARYBUTTON_SUBTYPE, RT_CONTROL_TOGGLEBUTTON_SUBTYPE
            </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTControlButton object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.InitDefaults">
            <summary>
             Initializes default values for the RTControlButton object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.Copy(com.quinncurtis.rtgraphnet.RTControlButton)">
            <summary>
              Copies the source RTControlButton object. Since the base Button class
              has no copy method, only the properties unique to RTControlButton are copied.
            </summary>
            <param name="source"> The source RTControlButton object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.#ctor">
            <summary>
             The default RTControlButton constructor.
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.#ctor(System.Int32)">
            <summary>
             This constructor creates a new RTControlButton object.
            </summary>
             <param name= "buttontype"> The button type of the new button. User on of the button subtypetype constants:
             RT_CONTROL_RADIOBUTTON_SUBTYPE, RT_CONTROL_MOMENTARYBUTTON_SUBTYPE, RT_CONTROL_TOGGLEBUTTON_SUBTYPE. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
             Override of the Button OnPaint method, that sets the button foreground, background and text colors
             based on the RTControlButton state.
            </summary>
             <param name= "e"> A PaintEventArgs that contains the event data.  </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.CFPaint">
            <summary>
             Updates button parameters, in lew of on OnPaint message for CF
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.CheckButton(System.Boolean)">
            <summary>
              Sets the button true, updating the button color to buttonCheckedColor
              and the button text to buttonCheckedTextColor. 
            </summary>
            <param name="redraw"> True forces a redraw of the button.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.UncheckButton(System.Boolean)">
            <summary>
              Sets the button false, updating the button color to buttonUncheckedColor
              and the button text to buttonUncheckedTextColor. 
            </summary>
            <param name="redraw"> True forces a redraw of the button.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.button_Click(System.Object,System.EventArgs)">
            <summary>
              The internal button click event handler. 
            </summary>
            <param name="sender"> The originator of the buton click event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.button_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
              The internal button mouse down event handler. 
            </summary>
            <param name="sender"> The originator of the buton mouse down event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlButton.button_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
              The internal button mouse up event handler. 
            </summary>
            <param name="sender"> The originator of the buton mouse up event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonChecked">
            <summary>
              Get/Set the button check state.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonCheckedColor">
            <summary>
              Get/Set the color of the button when the button is checked.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonCheckedTextColor">
            <summary>
              Get/Set the color of the button text when the button is checked.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonCheckedText">
            <summary>
              Get/Set the button text when the button is checked.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonUncheckedColor">
            <summary>
              Get/Set the color of the button when the button is unchecked.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonUncheckedTextColor">
            <summary>
              Get/Set the color of the button text when the button is unchecked.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonUncheckedText">
            <summary>
              Get/Set the button text when the button is unchecked.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonSubtype">
            <summary>
              Get/Set the button subtype. RT_CONTROL_RADIOBUTTON_SUBTYPE, RT_CONTROL_MOMENTARYBUTTON_SUBTYPE, 
              RT_CONTROL_TOGGLEBUTTON_SUBTYPE
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlButton.ButtonFont">
            <summary>
              Get/Set the button subtype. RT_CONTROL_RADIOBUTTON_SUBTYPE, RT_CONTROL_MOMENTARYBUTTON_SUBTYPE, 
              RT_CONTROL_TOGGLEBUTTON_SUBTYPE
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTControlTrackBar">
            <summary>
            Derived from the .Net Form Control TrackBar class, it adds floating point scaling for the track bar 
            endpoints, increments, current value and tick mark frequency.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.rtMinimum">
            <summary>
            Specifies the floating point minimum value for the track bar. Equivalent to the the TrackBar.Minimum 
            property, except allows floating point numbers.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.rtMaximum">
            <summary>
            Specifies the floating point maximum value for the track bar. Equivalent to the the TrackBar.Maximum 
            property, except allows floating point numbers.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.rtLargeChange">
            <summary>
            Specifies the floating point large change value for the track bar. Equivalent to the the TrackBar.LargeChange 
            property, except allows floating point numbers.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.rtSmallChange">
            <summary>
            Specifies the floating point small change value for the track bar. Equivalent to the the TrackBar.SmallChange 
            property, except allows floating point numbers.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.rtTickFrequency">
            <summary>
            Specifies the floating point tick mark frequencey value for the track bar. Equivalent to the the 
            TrackBar.Frequency property, except allows floating point numbers.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.rtValue">
            <summary>
            Specifies the floating point thumb position value for the track bar. Equivalent to the the TrackBar.Value 
            property, except allows floating point numbers.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTControlTrackBar.scaleFactor">
            <summary>
            Specifies the scaling factor used to convert from RTControlTrackBar units to TrackBar units. It is equal to
            1.0/rtSmallChange
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTControlTrackBar object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.InitDefaults">
            <summary>
             Initializes default values for the RTControlTrackBar object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.Copy(com.quinncurtis.rtgraphnet.RTControlTrackBar)">
            <summary>
              Copies the source RTControlTrackBar object. Since the base TrackBar class
              has no copy method, only the properties unique to RTControlTrackBar are copied.
            </summary>
            <param name="source"> The source RTControlTrackBar object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.#ctor">
            <summary>
             The default RTTrackBar constructor.
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.InitializeFormControlTrackbar(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
              Initializes the properties of the RTFormControlTrackBar. 
            </summary>
            <param name="minvalue"> Specifies the floating point minimum value for the track bar. Equivalent to the 
             TrackBar.Minimum  property, except allows floating point numbers. </param>
            <param name="maxvalue"> Specifies the floating point maximum value for the track bar. Equivalent to 
            the  TrackBar.Maximum  property, except allows floating point numbers. </param>
            <param name="largechange"> Specifies the floating point large change value for the track bar. Equivalent to 
             the TrackBar.LargeChange  property, except allows floating point numbers. </param>
            <param name="smallchange"> Specifies the floating point small change value for the track bar. Equivalent to 
             the TrackBar.SmallChange  property, except allows floating point numbers. </param>
            <param name="tickfrequency"> Specifies the floating point tick frequency value for the track bar. 
            Equivalent to the the TrackBar.TickFrequency  property, except allows floating point numbers. </param>
             
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.InitializeFormControlTrackbar">
            <summary>
              Initializes the RTFormControlTrackBar with the current properties. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.#ctor(System.Double,System.Double)">
            <summary>
             This constructor creates a new RTFormControlTrackBar object.
            </summary>
            <param name="minvalue"> Specifies the floating point minimum value for the track bar. Equivalent to the 
             TrackBar.Minimum  property, except allows floating point numbers. </param>
            <param name="maxvalue"> Specifies the floating point maximum value for the track bar. Equivalent to 
             the TrackBar.Maximum property, except allows floating point numbers. </param>
             
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
             This constructor creates a new RTFormControlTrackBar object.
            </summary>
            <param name="minvalue"> Specifies the floating point minimum value for the track bar. Equivalent to the 
             TrackBar.Minimum property, except allows floating point numbers. </param>
            <param name="maxvalue"> Specifies the floating point maximum value for the track bar. Equivalent to 
             the TrackBar.Maximum property, except allows floating point numbers. </param>
            <param name="largechange"> Specifies the floating point large change value for the track bar. Equivalent to 
             the TrackBar.LargeChange property, except allows floating point numbers. </param>
            <param name="smallchange"> Specifies the floating point small change value for the track bar. Equivalent to 
             the TrackBar.SmallChange  property, except allows floating point numbers. </param>
            <param name="tickfrequency"> Specifies the floating point tick frequency value for the track bar. Equivalent
             to the TrackBar.TickFrequency  property, except allows floating point numbers. </param>
             		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
             Override of the Trackbar OnPaint method, frocing update of RTTrackbar RTValue property.
            </summary>
             <param name= "e"> A PaintEventArgs that contains the event data.  </param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlTrackBar.RTMinimum">
            <summary>
              Get/Set the the double value of the RTControlTrackBar rtMinimum property. Specifies the floating point 
              minimum value for the track bar. Equivalent to the the TrackBar.Minimum 
             property, except allows floating point numbers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlTrackBar.RTMaximum">
            <summary>
              Get/Set the the double value of the RTControlTrackBar rtMaximum property. Specifies the floating point 
              maximum value for the track bar. Equivalent to the the TrackBar.Maximum 
             property, except allows floating point numbers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlTrackBar.RTLargeChange">
            <summary>
              Get/Set the the double value of the RTControlTrackBar rtLargeChange property. Specifies the floating 
              point large change value for the track bar. Equivalent to the the TrackBar.LargeChange 
             property, except allows floating point numbers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlTrackBar.RTSmallChange">
            <summary>
              Specifies the floating point small change value for the track bar. Equivalent to the the 
              TrackBar.SmallChange 
             property, except allows floating point numbers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlTrackBar.RTTickFrequency">
            <summary>
              Get/Set the the double value of the RTControlTrackBar rtTickFrequency property. Specifies the floating 
              point tick mark frequencey value for the track bar. Equivalent to the the TrackBar.Frequency 
             property, except allows floating point numbers.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTControlTrackBar.SetRTValue(System.Double)">
            <summary>
              Set the TrackBar value.
            </summary>
            <param name="r"> Specifies physical coordinate value of the TrackBar value. </param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTControlTrackBar.RTValue">
            <summary>
              Get/Set the the double value of the RTControlTrackBar slider.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs">
            <summary>
            This class is used to pass information to the RTDatasetTruncateDelegate delegate in RTProcessVar truncate events.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.processVar">
            <summary>
             A reference to the RTProcessVar object associated with the truncate event.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.processVarDataset">
            <summary>
            The current historical dataset associated with a process variable, after truncation.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.discardedData">
            <summary>
            The discarded data associated with a process variable, after truncation.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.InitDefaults">
            <summary>
             Initializes default values for the object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTDatasetTruncateArgs object for common errors.
            </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.Copy(com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs)">
            <summary>
             Copies the source RTDatasetTruncateArgs object.
            </summary>
             <param name= "source"> The source RTDatasetTruncateArgs object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.#ctor">
            <summary>
              The default RTDatasetTruncateArgs constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.TimeSimpleDataset,com.quinncurtis.chart2dnet.TimeSimpleDataset)">
            <summary>
              This constructor creates a RTDatasetTruncateArgs object that is used to pass data associated 
              with alarm events. 
            </summary>
            <param name="pv"> The RTProcessVar object associated with the alarm event. </param>
            <param name="currentdataset"> The current dataset associated with the process variable. </param>
            <param name="discardeddata"> The most recent data truncated off of the end of the dataset.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.ProcessVar">
            <summary>
              Get/Set the processVar object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.ProcessVarDataset">
            <summary>
              Get/Set the current dataset associated with the process variable. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTDatasetTruncateArgs.DiscardedData">
            <summary>
              Get/Set the most recent data truncated off of the end of the dataset.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis">
            <summary>
            A dual axis for use with sweep graphs. The axis is dual, because the times in front of the sweep line are older than the times
            behind the sweep line.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.#ctor(com.quinncurtis.chart2dnet.Axis,com.quinncurtis.chart2dnet.Axis,com.quinncurtis.chart2dnet.AxisLabels,com.quinncurtis.chart2dnet.Grid,com.quinncurtis.chart2dnet.Grid)">
            <summary>
             This constructor creates a new RTDualScaleSweepGraphAxis object
            </summary> 
            <param name="xaxis"> The x-axis user for the graph. </param>
            <param name="yaxis"> The  y-axis user for the graph. </param> 
            <param name="xaxislabels"> The x-axis labelsuser for the graph. </param>
            <param name="xaxisgrid"> The x-axis grid for the graph </param>
            <param name="yaxisgrid"> The y-axis grid for the graph. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.#ctor(com.quinncurtis.chart2dnet.Axis,com.quinncurtis.chart2dnet.AxisLabels)">
            <summary>
             This constructor creates a new RTDualScaleSweepGraphAxis object
            </summary> 
            <param name="primaryaxis"> The x-axis user for the graph. </param>
            <param name="primaryaxislabels"> The x-axis labelsuser for the graph. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.InitDefaults">
            <summary>
              Initializes default values for the axis.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.ErrorCheck(System.Int32)">
            <summary>
              Checks the current axis object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.Copy(com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis)">
            <summary>
              Copies the source axis. 
            </summary>
            <param name="source"> The source axis object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.Clone">
            <summary>
             Returns an object that is a clone of this TimeAxis object. 
            </summary>
            <returns> Returns a clone of this TimeAxis object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class. 
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.SetMaxXValue(System.Double)">
            <summary>
              This method must be called each time the sweep graph is updated to keep the dual axis in sync with the sweep graph. This 
             method would be used if the sweep graph had a numeric x-axis, or an elapsed time x-axis.
            </summary>
            <param name="x"> The new x-value of the sweep graph.  </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.SetMaxXTimeValue(com.quinncurtis.chart2dnet.ChartCalendar)">
            <summary>
              This method must be called each time the sweep graph is updated to keep the dual axis in sync with the sweep graph. This 
             method would be used if the sweep graph had a time-based x-axis.
            </summary>
            <param name="x"> The new x-value of the sweep graph.  </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTDualScaleSweepGraphAxis.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              The CheckIntersection method. It test to see if the test point  is within the intersectionTestDistance 
              of the object location.  Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter">
            <summary>
            Displays elapsed time information in a RTPanelMeter format. It contains a template based on the 
            QCChart2D ElapsedTimeLabel class that is used to specify the font and  format information associated with 
            the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.elapsedTimeTemplate">
            <summary>
            Displays the elapsed time value of the time stamp of the associated RTProcessVar object. It contains a template 
            based on the QCChart2D ElapsedTimeLabel class that is used to specify the font and elapsed time format information 
            associated with the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.textframe">
            <summary>
            The RTTextFrame is used to display the panel meter text, framing the text using a 3D beveled border.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTElapsedTimePanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.#ctor">
            <summary>
             The default RTElapsedTimePanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.Copy(com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.Clone">
            <summary>  Returns an object that is a Clone of this RTElapsedTimePanelMeter object.
            </summary>
            <returns> Returns a Clone of this RTElapsedTimePanelMeter object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTElapsedTimePanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTElapsedTimePanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTElapsedTimePanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTElapsedTimePanelMeter object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTElapsedTimePanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTElapsedTimePanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.CalcTimeFrameMinWidth(System.Drawing.Graphics)">
            <summary>
             Calculates the minimum frame width to use in in displaying time value strings in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
              <returns> The minimum frame width to use in in displaying time value strings in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.SetResizeMultiplier(System.Double)">
            <summary>
             Sets the resize multiplier used by the RTPanelMeter object. 
            </summary>
            <param name="multiplier"> Sets the resize multiplier used by the object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.TimeTemplate">
            <summary>
             The ElapsedTimeLabel template for the panel meter elapsed time value. All of the text properties associated with
             the panel meter are set using this property. In addition, the format of the elapsed time value is also set here.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the TimeTemplate template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTElapsedTimePanelMeter.TextColor">
            <summary>
             Set/Get the text color of the panelmeter.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTFormControl">
            <summary>
            Summary description for the RTFormControl class.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.controlAdded">
            <summary>
            The RTFormControl class wraps the .Net Form Controls, and our RTControlButton and RTControlTrackBar 
            controls so that they can be placed in a graph. It includes the special rendering routines for rendering 
            the Button, TrackBar, RTControlButton, RTControlTrackBar, and PictureBox controls to an image file 
            and to a printer.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.controlSize">
            <summary>
            The size of the control in device units
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.controlBackground">
            <summary>
            Set to true to match the control background color to the ChartObjAttributes.FillColor.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.frame3D">
            <summary>
             3D frame around text.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.formControl">
            <summary>
             A reference to the Form.Control object contained in this class.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.frame3DEnable">
            <summary>
             True specifies that a 3D frame is drawn around the control object.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControl.controltext">
            <summary>
             Internal object used to rescale the Font size of button text.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTFormControl object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.#ctor">
            <summary>
             The default RTFormControl constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.Copy(com.quinncurtis.rtgraphnet.RTFormControl)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.Clone">
            <summary>  Returns an object that is a Clone of this RTFormControl object.
            </summary>
            <returns> Returns a Clone of this RTFormControl object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.GetControlIndexValue(System.Object)">
            <summary>  Returns the control index value: o to 7
            </summary>
            	<param name="obj"> The control object object. </param>
            <returns>Returns the control index. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.GetControlType(System.Object)">
            <summary>  Returns the control type: NOT_SPECIALCONTROL_TYPE, TRACKBAR_TYPE, HSCROLLBAR_TYPE, 
            VSCROLLBAR_TYPE, SIMPLEBUTTON_TYPE, RADIOBUTTON_TYPE, RT_CONTROL_BUTTON_TYPE, RT_CONTROL_TRACKBAR_TYPE.
            </summary>
            	<param name="obj"> The control object object. </param>
            <returns>Returns the control type. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.SetControlDefaultColors(System.Windows.Forms.Control)">
            <summary>
             Set the Form.Control colors based on the current attribute line and fill colors
            </summary>
             <param name= "cntrl"> The source Form.Control object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.ResizeControlFont(System.Windows.Forms.Control)">
            <summary>
             Resize the Font of the underlying button text.
            </summary>
             <param name= "cntrl"> The source Form.Control object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Windows.Forms.Control)">
            <summary>
             This constructor creates a new RTFormControl object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTFormControl object. </param>
            <param name="cntrl"> The source Form.Control object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Windows.Forms.Control,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTFormControl object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTFormControl object. </param>
             <param name= "cntrl"> The source Form.Control object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawSimpleButton(System.Drawing.Graphics)">
            <summary>
              Draws a simple Button in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawRTControlButton(System.Drawing.Graphics)">
            <summary>
              Draws a RTControlButton in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawSimpleTrackBar(System.Drawing.Graphics)">
            <summary>
              Draws a TrackBar in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawSimplePictureBox(System.Drawing.Graphics)">
            <summary>
              Draws a PictureBox in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawDefaultControl(System.Drawing.Graphics)">
            <summary>
              Draws a default unsupported Control in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.GetTrackBarSymbol(System.Windows.Forms.TrackBar)">
            <summary>
             Returns the symbol constant for the track bar thumb, depending on the track bar orientation and tick style.  One
             of the following symbol constants is returned: RT_TRACKBAR_VERTICAL_RIGHT_POINTER, 
             RT_TRACKBAR_HORIZONTAL_DOWN_POINTER, RT_TRACKBAR_VERTICAL_CENTER_POINTER, RT_TRACKBAR_HORIZONTAL_CENTER_POINTER.
            </summary>
            <param name="trackbar"> The source track bar object.</param>
            <returns>Returns the ymbol constant for the track bar thumb. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawTrackBar(System.Drawing.Graphics)">
            <summary>
              Draws a TrackBar in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawRTControlTrackBar(System.Drawing.Graphics)">
            <summary>
              Draws a RTControlTrackBar in the file or printer rendering mode.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawFormControl(System.Drawing.Graphics)">
            <summary>
              Draws the form control of the RTFormControl object.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.DrawRTFormControl(System.Drawing.Graphics)">
            <summary>
              Draws the RTFormControl object.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControl.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.FormControl">
            <summary>
             Set/Get the reference to the Form.Control object contained in this class.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.Frame3D">
            <summary>
             Set/Get the 3D frame.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.Frame3DEnable">
            <summary>
             Set/Get to true to enable drawing of the annunciator rectangle.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.ControlBackground">
            <summary>
             Set/Get to true to match the control background color to the ChartObjAttributes.FillColor.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.ControlSize">
            <summary>
             Set/Get the control size.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.FrameRect">
            <summary>
             Set/Get the 3D frame.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControl.ControlAdded">
            <summary>
             Set/Get a flag the designates whether or not the control has been added to a container.
            </summary>	
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTFormControlGrid">
            <summary>
            The RTFormControlGrid organizes a collection of RTFormControl objects functionally and visually in a grid format. 
            An RTControlButton must be added to an RTFormControlGrid before the radio button processes of the RTControlButton 
            will work.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.numberRows">
            <summary>
            Specifies the number of rows in the grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.numberColumns">
            <summary>
            Specifies the number of columns in the grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.cellRowMargin">
            <summary>
            Specifies the extra space between rows of the grid, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.cellColumnMargin">
            <summary>
            Specifies the extra space between columns of the grid, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.radioButtonChecked">
            <summary>
            Specifies the the index of the radio button that is currently checked.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.internalAction">
            <summary>
            Set to true if you want radio button click and scroll bar value changed events processed
            to update colors of buttons and numeric values of scroll bars.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.headersTemplate">
            <summary>
            The string template defining the title strings.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.rowHeaders">
            <summary>
            An array of strings used as the row heads for the control grid.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlGrid.columnHeaders">
            <summary>
            An array of strings used as the column heads for the control grid.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.InitDefaults">
            <summary>
             Initializes default values for the RTFormControlGrid object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.Copy(com.quinncurtis.rtgraphnet.RTFormControlGrid)">
            <summary>
              Copies the source RTFormControlGrid object. 
            </summary>
            <param name="source"> The source RTFormControlGrid object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.Clone">
            <summary>
             Returns an object that is a clone of this RTFormControlGrid object. 
            </summary>
            <returns> Returns a clone of this RTFormControlGrid object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.#ctor">
            <summary>
              The default constructor for the RTFormControlGrid class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates an RTGroupMultiValuePlot referencing the specified coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTGroupMultiValuePlot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],System.Collections.ArrayList,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTFormControlGrid object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTFormControlGrid object. </param>
            <param name="datasource"> An array of the process variables associated with the  bar indicator. </param>
            <param name="formcontrolarray"> An array fo the Controls assigned to the form control grid. </param>
            <param name="attrib"> A single attribute object that applies to all control grid cells. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],System.Collections.ArrayList,System.Int32,System.Int32,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTFormControlGrid object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTFormControlGrid object. </param>
            <param name="datasource"> An array of the process variables associated with the  bar indicator. </param>
            <param name="formcontrolarray"> An array fo the Controls assigned to the control grid. </param>
            <param name="numcols"> The number of columns in the control grid. </param>
            <param name="numrows"> The number of rows in the control grid. </param>
            <param name="attrib"> A single attribute object that applies to all grid cells. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],System.Collections.ArrayList,System.Int32,System.Int32,System.String[],System.String[],com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTFormControlGrid object that will reside in  the specified coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTFormControlGrid object. </param>
            <param name="datasource"> An array of the process variables associated with the control grid objects. </param>
            <param name="formcontrolarray"> An array fo the Controls assigned to the control grid. </param>
            <param name="numcols"> The number of columns in the control grid. </param>
            <param name="numrows"> The number of rows in the control grid. </param>		
            <param name="colheads"> An array of string that are used as the column heads for the control grid. </param>
            <param name="rowheads"> An array of string that are used as the row heads for the control grid. </param>
            <param name="attrib"> A single attribute object aht applies to all control grid objects. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.SetEventHandler(System.Windows.Forms.Control)">
            <summary>
              Set the event handler for a specific control
            </summary>
            <param name="ctrlobj"> The control. </param>
            		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.InitializeRadioButtons">
            <summary>
              Initialize the state of the grids radio buttons, make sure that only one button is selected. 
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.CheckRadioButton(com.quinncurtis.rtgraphnet.RTControlButton)">
            <summary>
              Check a radio button, and uncheck the previously selected button. 
            </summary>
            <param name="button"> The source RTControlButton object.</param>
            		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.CreateFormControlGrid(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Creates and draws the RTFormControlGrid.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.FindControlIndex(System.Windows.Forms.Control)">
            <summary>
             Returns the index in the grid of the source Forms.Control object.
             </summary>		
             <param name= "obj">  The source Forms.Control object. </param>
             <returns> Returns the index in the grid of the source Forms.Control object.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.UpdateGridCell(System.Drawing.Graphics,System.Windows.Forms.Control)">
            <summary>
              Updates the panel meters associated with a object in the grid.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="cntrl"> The source Forms.Control object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.trackBar_ValueChanged(System.Object,System.EventArgs)">
            <summary>
              The internal track bar value changed event handler. 
            </summary>
            <param name="sender"> The originator of the track bar value changed event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.button_Click(System.Object,System.EventArgs)">
            <summary>
              The internal button click event handler. Needed to process the radio buttons, otherwise falls through.
            </summary>
            <param name="sender"> The originator of the buton click event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.AddInternalObjects">
            <summary>
             Add the chart and plot objects to the ChartView.
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates which 
              point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlGrid.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the grid objectys. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the grid objects.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.NumberRows">
            <summary>
              Get the number of rows in the annunciator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.NumberColumns">
            <summary>
              Get the number of rows in the annunciator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.CellRowMargin">
            <summary>
              Get/Set the extra space between rows of the grid, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.CellColumnMargin">
            <summary>
              Get/Set the extra space between columns of the grid, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.HeadersTemplate">
            <summary>
             Set/Get the string template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.ColumnHeaders">
            <summary>
             Set/Get the column headers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.RowHeaders">
            <summary>
             Set/Get the row headers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.InternalAction">
            <summary>
             Set/Get to true if you want radio button click and scroll bar value changed events processed
             to update colors of buttons and numeric values of scroll bars.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.FormControlTemplate">
            <summary>
             Set/Get the row headers.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlGrid.RadioButtonChecked">
            <summary>
              Get/Set the extra space between columns of the grid, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter">
            <summary>
            This panel meter class contains encapsulates an RTFormControl object in a panel meter class, so that 
            controls can be added to indicator objects.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.formControlList">
            <summary>
            A collection of the RTFormControl objects contained in the class. It needs to be a collection
            because it is not possible to clone a Forms.Control object, so copies cannot be readily made.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.recommendedMinimumSizes">
            <summary>
            Recommended sizes for the major control types: 
            NOT_SPECIALCONTROL_TYPE, TRACKBAR_TYPE, HSCROLLBAR_TYPE, VSCROLLBAR_TYPE, SIMPLEBUTTON_TYPE, 
            RADIOBUTTON_TYPE,  RT_TRACKBAR_TYPE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.formDeviceSize">
            <summary>
            The size of the control in device units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.formControlSize">
            <summary>
            The size of the control in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.controlSizeMode">
            <summary>
             The size mode for the Control. Use one of the Control size mode constants: RT_ORIG_CONTROL_SIZE, 
             RT_MIN_CONTROL_SIZE,  RT_INDICATORRECT_CONTROL_SIZE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.internalAction">
            <summary>
            Set to true if you want radio button click and scroll bar value changed events processed
            to update colors of buttons and numeric values of scroll bars.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTFormControlPanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.#ctor">
            <summary>
             The default RTFormControlPanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.Copy(com.quinncurtis.rtgraphnet.RTFormControlPanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.Clone">
            <summary>  Returns an object that is a Clone of this RTFormControlPanelMeter object.
            </summary>
            <returns> Returns a Clone of this RTFormControlPanelMeter object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.InstallEventHandlers">
            <summary>  Install the form controls event handlers.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTFormControlPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTFormControlPanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Windows.Forms.Control,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTFormControlPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTFormControlPanelMeter object. </param>
            <param name="formcontrol"> A reference to the Controls assigned to this panel meter. </param>
            <param name="attrib"> The color attributes of the panel meter. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,System.Windows.Forms.Control,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTFormControlPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTFormControlPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the control. </param>
            <param name="formcontrol"> A reference to the Controls assigned to this panel meter. </param>
            <param name="attrib"> The color attributes of the panel meter. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Collections.ArrayList,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTFormControlPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTFormControlPanelMeter object. </param>
            <param name="formcontrolarray"> An array fo the Controls assigned to this panel meter. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.CalcValueFrameMinWidth(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>
             Calculates the minimum frame width to use in in displaying numeric values in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
             <param name= "minvalue"> The minimum value that will be displayed. </param>
             <param name= "maxvalue">  The maximum value that will be displayed. </param>  
              <returns> The minimum frame width to use in in displaying numeric values in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.CalcFormControlPosition(System.Drawing.Graphics,com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.chart2dnet.Dimension)">
            <summary> This method justifies the datapoint text against the associated bar, and
             draws it to the specified graphics context.
            </summary>		 
             <param name= "g2"> The graphics context. </param>
             <param name= "datapointpos"> The x- and y-position, in physical coordinates, of the
             datapoint value. </param>
             <param name= "barrect"> The positioning rectangle for the panel meter text. </param>		
             <param name= "controlsize"> The size of the control in device units. </param>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.FormControlList">
            <summary>
             Set/Get the string panel meter numeric template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.FormControlSize">
            <summary>
             Get the size of the form control in device units.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.UpdatePanelMeter(System.Drawing.Graphics,System.Windows.Forms.Control)">
            <summary>
              Updates the panel meters associated with a object in the grid.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="cntrl"> The source Forms.Control object.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.trackBar_ValueChanged(System.Object,System.EventArgs)">
            <summary>
              The internal track bar value changed event handler. 
            </summary>
            <param name="sender"> The originator of the track bar value changed event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.AddInternalObjects">
            <summary>
             Add the chart and plot objects to the ChartView.
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.FindControlIndex(System.Windows.Forms.Control)">
            <summary>
             Returns the index in the formControlList of the source Forms.Control object.
             </summary>		
             <param name= "obj">  The source Forms.Control object. </param>
             <returns> Returns the index in the formControlList of the source Forms.Control object.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.button_Click(System.Object,System.EventArgs)">
            <summary>
              The internal button click event handler. Everything falls through. Radio buttons are processed 
              by RTFormControlGrid class.
            </summary>
            <param name="sender"> The originator of the button click event.</param>
            <param name="e"> An EventArgs that contains the event data.</param>
            	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.InternalAction">
            <summary>
             Set/Get to true if you want radio button click and scroll bar value changed events processed
             to update colors of buttons and numeric values of scroll bars.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.ControlSizeMode">
            <summary>
             Set/Get to the size mode for the Control. Use one of the Control size mode constants: 
             RT_ORIG_CONTROL_SIZE, RT_MIN_CONTROL_SIZE,  RT_INDICATORRECT_CONTROL_SIZE.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTFormControlPanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the NumericLabel template.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTGenShape">
             <summary>
            This class is used to draw filled and unfilled rectangles, rectangles with rounded corners, general 
            ellipses and aspect ratio corrected circles. These shapes can be used by the programmer to add visual 
            enhancements to graphs.
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGenShape.shapeRect">
            <summary>
            Specifies the bounding rectangle for the shape.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGenShape.cornerRadius">
            <summary>
            Specifies the corner radius for rounded rectangles.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGenShape.genShape">
            <summary>
            Specifies the shape of the object. Use one of the generalized shape constants:
            RT_SHAPE_RECTANGLE,	RT_SHAPE_ROUNDEDRECTANGLE, RT_SHAPE_ELLIPSE.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGenShape.aspectRatioCorrection">
            <summary>
            Specifies the aspect ratio correction mode for the RT_SHAPE_ELLIPSE shape:
            NO_ASPECT_RATIO_CORRECTION, FIXED_X_ASPECT_RATIO_CORRECTION, FIXED_Y_ASPECT_RATIO_CORRECTION.
            </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTGenShape object for common errors.
            </summary>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.Copy(com.quinncurtis.rtgraphnet.RTGenShape)">
            <summary>
              Copies the source RTGenShape object. 
            </summary>
            <param name="source"> The source RTGenShape object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.InitDefaults">
            <summary>
             Initializes default values for the RTGenShape object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.Clone">
            <summary>
             Returns an object that is a clone of this RTGenShape object. 
            </summary>
            <returns> Returns a clone of this RTGenShape object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.SetRoundedRect(System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Defines the position and size of the RTGenShape object. 
            </summary>
            <param name="xx"> The x-position of the upper left of the object. </param>
            <param name="yy"> The y-position of the upper left of the object. </param>
            <param name="ww"> The width of the object. </param>
            <param name="hh"> The height of the object.</param>
            <param name="corner"> The corner radius of the rectangle. </param>
            <param name="postype"> The position type of the rectangle.Use one of the coordinate system constants: 
            DEV_POS, PHYS_POS, NORM_GRAPH_POS, NORM_PLOT_POS.</param>///
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.#ctor">
            <summary>
              The default constructor for the RTGenShape class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.SetShape(System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
             Defines the position and size of the RTGenShape object. 
            </summary>
            <param name="xx"> The x-position of the upper left of the object. </param>
            <param name="yy"> The y-position of the upper left of the object. </param>
            <param name="ww"> The width of the object. </param>
            <param name="hh"> The height of the object.</param>
            <param name="corner"> The corner radius of the rectangle. </param>
            <param name="shape"> The shape of the RTGenShape object. Use one of the generalized shape constants:
             RT_SHAPE_RECTANGLE,	RT_SHAPE_ROUNDEDRECTANGLE, RT_SHAPE_ELLIPSE.</param>
            <param name="postype"> Specifies the what coordinate system the coordinates reference. Use one of the 
            position type  constants: DEV_POS, PHYS_POS, POLAR_POS, NORM_GRAPH_POS, NORM_PLOT_POS.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
             This constructor creates an RTGenShape object defined  by its position, height and width. 
            </summary>
            <param name="transform"> The coordinate system for the new RTGenShape object. </param>
            <param name="xx"> The x-position of the upper left of the object. </param>
            <param name="yy"> The y-position of the upper left of the object. </param>
            <param name="ww"> The width of the object. </param>
            <param name="hh">  The height of the object.</param>
            <param name="corner"> The corner radius of the rounded rectangle.</param>
            <param name="shape"> The shape of the RTGenShape object. Use one of the generalized shape constants:
             RT_SHAPE_RECTANGLE,	RT_SHAPE_ROUNDEDRECTANGLE, RT_SHAPE_ELLIPSE.</param>
            <param name="postype"> Specifies the what coordinate system the coordinates reference. Use one of the 
            position type  constants: DEV_POS, PHYS_POS, POLAR_POS, NORM_GRAPH_POS, NORM_PLOT_POS.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,System.Double,System.Int32,System.Int32)">
            <summary>
             This constructor creates an RTGenShape object based on the properties  of a Rectangle2D object. 
            </summary>
            <param name="transform"> The coordinate system for the new RTGenShape object. </param>
            <param name="rect"> The source rectangle.</param>
            <param name="corner"> The corner radius of the rounded rectangle.</param>
            <param name="shape"> The shape of the RTGenShape object. Use one of the generalized shape constants:
             RT_SHAPE_RECTANGLE,	RT_SHAPE_ROUNDEDRECTANGLE, RT_SHAPE_ELLIPSE.</param>
            <param name="postype"> Specifies the what coordinate system the coordinates reference. Use one of the 
            position type  constants: DEV_POS, PHYS_POS, POLAR_POS, NORM_GRAPH_POS, NORM_PLOT_POS.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.GetEllipsePath">
            <summary>
             Calculates and creates the graphics path for an ellipse defined by the bounding box shapeRect.
            </summary>
             <returns> Returns an ellipse GraphicsPath. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.GetRectPath">
            <summary>
             Calculates and creates the graphics path for the rectangle defined by shapeRect.
            </summary>
             <returns> Returns the graphics path for the rectangle defined by shapeRect. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.GetRoundedRectPath">
            <summary>
             Calculates and creates the graphics path for a rounded corner rectangle defined by the bounding box shapeRect.
            </summary>
             <returns> Returns the graphics path for a rounded corner rectangle defined by the bounding box shapeRect. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.GetPath">
            <summary>
             Calculates and creates the graphics path for the shape genShape with the bound shapeRect.
            </summary>
             <returns> Returns an ellipse GraphicsPath. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              The CheckIntersection method. It test to see if the test point  is within the intersectionTestDistance 
              of the object location.  Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGenShape.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class. 
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.ShapeRect">
            <summary>
             Get/Set the rectangle control the size and position of the object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.X">
            <summary>
             Get/Set the x-value of the shape rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.Y">
            <summary>
             Get/Set the y-value of the shape rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.Width">
            <summary>
             Get/Set the width of the rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.Height">
            <summary>
             Get/Set the height of the shape rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.CornerRadius">
            <summary>
             Get/Set the corner radius of the rounded rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.GenShape">
            <summary>
             Get/Set the shape control property genShape. Use one of the generalized shape constants:
             RT_SHAPE_RECTANGLE,	RT_SHAPE_ROUNDEDRECTANGLE, RT_SHAPE_ELLIPSE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGenShape.AspectRatioCorrection">
            <summary>
            Get/Set the aspect ratio correction mode for the RT_SHAPE_ELLIPSE shape:
            NO_ASPECT_RATIO_CORRECTION, FIXED_X_ASPECT_RATIO_CORRECTION, FIXED_Y_ASPECT_RATIO_CORRECTION.
            </summary>	
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs">
            <summary>
            This class is used to pass information to the RTGroupDatasetTruncateDelegate delegate in RTMultiProcessVar events.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.processVar">
            <summary>
             A reference to the RTProcessVar object associated with the truncate event.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.processVarGroupDataset">
            <summary>
            The current historical dataset associated with a process variable, after truncation.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.discardedData">
            <summary>
            The discarded data associated with a process variable, after truncation.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.InitDefaults">
            <summary>
             Initializes default values for the object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTGroupDatasetTruncateArgs object for common errors.
            </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.Copy(com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs)">
            <summary>
             Copies the source RTGroupDatasetTruncateArgs object.
            </summary>
             <param name= "source"> The source RTGroupDatasetTruncateArgs object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.#ctor">
            <summary>
              The default RTGroupDatasetTruncateArgs constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.#ctor(com.quinncurtis.rtgraphnet.RTMultiProcessVar,com.quinncurtis.chart2dnet.TimeGroupDataset,com.quinncurtis.chart2dnet.TimeGroupDataset)">
            <summary>
              This constructor creates a RTGroupDatasetTruncateArgs object that is used to pass data associated 
              with alarm events. 
            </summary>
            <param name="pv"> The RTProcessVar object associated with the alarm event. </param>
            <param name="currentdataset"> The current dataset associated with the process variable. </param>
            <param name="discardeddata"> The most recent data truncated off of the end of the dataset.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.ProcessVar">
            <summary>
              Get/Set the processVar object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.ProcessVarGroupDataset">
            <summary>
              Get/Set the current dataset associated with the process variable. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateArgs.DiscardedData">
            <summary>
              Get/Set the most recent data truncated off of the end of the dataset.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot">
            <summary>
            The RTGroupMultiValuePlot plot class uses a template based on the QCChart2D GroupPlot class 
            to create a real-time  plot that displays a collection of RTProcessVar objects as a group plot in a 
            scrolling graph.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.plotTemplate">
            <summary>
              This field holds a reference to a GroupPlot object that serves as a template for the RTGroupMultiValuePlot 
              plot object.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.groupdataset">
            <summary>
              This field holds a reference to a GroupDataset made from the RTProcessVar objects in RTMultProcessVar.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.endOfPlotLineMarker">
            <summary>
             The end of plot marker type. Use one of the Marker marker type constants:  MARKER_NULL, MARKER_VLINE, 
             MARKER_HLINE, MARKER_HVLINE. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.markerGroupNumber">
            <summary>
             This value specifies which plot in a group plot is used to position the end of plot marker. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.sweepMode">
            <summary>
             Specifies that a sweep mode display is enabled, where older data is placed in front 
             of the sweep line, and newer data before the sweep line.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.InitDefaults">
            <summary>
             Initializes default values for the RTMultiValueIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTGroupMultiValuePlot object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.#ctor">
            <summary>
              The default constructor for the RTMultiValueIndicator class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.Copy(com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot)">
            <summary>
              Copies the source RTGroupMultiValuePlot object. 
            </summary>
            <param name="source"> The source RTGroupMultiValuePlot object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.Clone">
            <summary>
             Returns an object that is a clone of this RTGroupMultiValuePlot object. 
            </summary>
            <returns> Returns a clone of this RTGroupMultiValuePlot object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates an RTGroupMultiValuePlot referencing the specified coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTGroupMultiValuePlot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.GroupPlot,com.quinncurtis.rtgraphnet.RTProcessVar[])">
            <summary>
              This constructor creates a new RTGroupMultiValuePlot object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTSimpleSingleValuePlot object. </param>
            <param name="plottemplate"> A template defining the group plot object. </param>
            <param name="datasource"> An array of RTProcessVar objects, one for each group in the group plot template. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.GroupPlot,com.quinncurtis.rtgraphnet.RTMultiProcessVar)">
            <summary>
              This constructor creates a new RTGroupMultiValuePlot object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTSimpleSingleValuePlot object. </param>
            <param name="plottemplate"> A template defining the group plot object. </param>
            <param name="datasource"> An RTMultiProcessVar object that contains a collection of the RTProcessVar 
            objects associated each group. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.UpdateGroupDataset">
            <summary>
              Incremental update of the group plot object. 
            </summary>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.GetDataset">
            <summary>
             Returns a reference to the dataset associated with the primary process variable for the indicator.
             <returns> Returns a reference to the primary process variable for the indicator. </returns>
             </summary>			
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.PlotTemplate">
            <summary>
             Get/Set the group plot template. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.MarkerGroupNumber">
            <summary>
             Get/Set the group number that is used for the end of plot line marker. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.EndOfPlotLineMarker">
            <summary>
             Get/Set The end of plot marker type. Use one of the Marker marker type constants:  
             MARKER_NULL, MARKER_VLINE, MARKER_HLINE, MARKER_HVLINE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTGroupMultiValuePlot.SweepMode">
            <summary>
             Specifies that a sweep mode display is enabled, where older data is placed in front 
             of the sweep line, and newer data before the sweep line.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterArcIndicator">
            <summary>
            This RTMeterArcIndicator class displays the current RTProcessVar value as an arc. Segmented meter 
            arcs are one of the RTMeterArcIndicator subtypes.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.innerValueArcNormalized">
            <summary>
             Specifies the inner radius of the arc in normalized radius coordinates.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.outerValueArcNormalized">
            <summary>
             Specifies the outer radius of the arc in normalized radius coordinates.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.segmentWidth">
            <summary>
             Specifies the sweep, in degrees, of a single segment of a segmented arc.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.segmentSpacing">
            <summary>
             Specifies the space between adjacent segments, in degrees, of a segmented arc.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.segmentValueRoundMode">
            <summary>
             Specifies that the current process value is rounded up in calculating how many segments to display in 
             RT_METER_SEGMENTED_ARC_SUBTYPE, RT_METER_SINGLE_SEGMENT_ARC_SUBTYPE
             modes.
             Use one of the constants: RT_FLOOR_VALUE, RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.outerArcCapStyle">
            <summary>
             Specifies how the outer cap of the segment arc is drawn in RT_METER_SEGMENTED_ARC_SUBTYPE, 
             RT_METER_SINGLE_SEGMENT_ARC_SUBTYPE modes. Use one of the constants:RT_METER_ARC_RADIUS_CAP, 
             RT_METER_ARC_WEDGE_WIDTH_CAP, RT_METER_ARC_FLAT_CAP.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.innerArcCapStyle">
            <summary>
             Specifies how the inner cap of the segment arc is drawn in RT_METER_SEGMENTED_ARC_SUBTYPE, 
             RT_METER_SINGLE_SEGMENT_ARC_SUBTYPE modes. Use one of the constants:RT_METER_ARC_RADIUS_CAP, 
             RT_METER_ARC_WEDGE_WIDTH_CAP, RT_METER_ARC_FLAT_CAP.
            </summary>			
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterArcIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMeterArcIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.#ctor">
            <summary>
              The default constructor for the RTMeterArcIndicator class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.Copy(com.quinncurtis.rtgraphnet.RTMeterArcIndicator)">
            <summary>
              Copies the source RTMeterArcIndicator object. 
            </summary>
            <param name="source"> The source RTMeterArcIndicator object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.Clone">
            <summary>
             Returns an object that is a clone of this RTMeterArcIndicator object. 
            </summary>
            <returns> Returns a clone of this RTMeterArcIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.InitMeterArc(com.quinncurtis.rtgraphnet.RTProcessVar,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTMeterArcIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the indicator. </param>
            <param name="innerarc"> The inner radius value in radius normalized units (0.0-1.0). </param>
            <param name="outerarc"> The inner radius value in radius normalized units (0.0-1.0). </param>
            <param name="attrib"> The color attributes of the indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             This constructor creates a new RTMeterArcIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the indicator. </param>
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTMeterArcIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the indicator. </param>
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the indicator. </param>
            <param name="innerarc"> The inner radius value in radius normalized units (0.0-1.0). </param>
            <param name="outerarc"> The inner radius value in radius normalized units (0.0-1.0). </param>
            <param name="attrib"> The color attributes of the indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.GetOuterCapRadius(com.quinncurtis.chart2dnet.Point2D,System.Double,System.Double,System.Double)">
            <summary>
             Calculates the radius value used for a segment end cap.
             </summary>			
             <param name= "centerpos">  The xy position of the center of the arc radius in device coordinates. </param>
             <param name="radiusmajordev"> The radius of the outer arc in device coordinates. </param>
             <param name="degrees"> The degrees of the arc.</param>
             <param name="wedgewidthdegrees"> The width in degrees of the arc wedge segment.</param>
             <returns> Returns the radius in device coordinates of the outer segment cap. </returns> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.AddOuterCapRadius(System.Drawing.Drawing2D.GraphicsPath,com.quinncurtis.chart2dnet.Point2D,System.Double,System.Double,System.Double)">
            <summary>
             Adds the outer cap radius to drawing path of an arc segment.
             </summary>			
             <param name= "path">  The graphics path of the arc segment. </param>
             <param name= "centerpos">  The xy position of the center of the arc radius in device coordinates. </param>
             <param name="radiusmajordev"> The radius of the outer arc in device coordinates. </param>
             <param name="degrees"> The degrees of the arc.</param>
             <param name="wedgewidthdegrees"> The width in degrees of the arc wedge segment.</param>
             <returns> Returns the radius in device coordinates of the outer segment cap.  </returns> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.AddInnerCapRadius(System.Drawing.Drawing2D.GraphicsPath,com.quinncurtis.chart2dnet.Point2D,System.Double,System.Double,System.Double)">
            <summary>
             Adds the inner cap radius to drawing path of an arc segment.
             </summary>			
             <param name= "path">  The graphics path of the arc segment. </param>
             <param name= "centerpos">  The xy position of the center of the arc radius in device coordinates. </param>
             <param name="radiusminordev"> The radius of the inner arc in device coordinates. </param>
             <param name="degrees"> The degrees of the arc.</param>
             <param name="wedgewidthdegrees"> The width in degrees of the arc wedge segment.</param>
             <returns> Returns the radius in device coordinates of the outer segment cap.  </returns>returns> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.DrawArcWedges(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double)">
            <summary>
              Draws the wedge segments of a segmented arc indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="currentvalue"> The current value of the arc indicator.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.DrawMeterArc(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double)">
            <summary>
              Draws the arc of a solid arc indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="currentvalue"> The current value of the arc indicator.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.DrawArcIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double)">
            <summary>
              Draws the arc of an arc indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="currentvalue"> The current value of the arc indicator.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.DrawMeterIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the meter indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Not supported 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object (Not supported at this time). 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.InnerValueArcNormalized">
            <summary>
             Set/Get the value of the inner arc radius in normalized radius coordinates.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.OuterValueArcNormalized">
            <summary>
             Set/Get the value of the outer arc radius in normalized radius coordinates.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.SegmentWidth">
            <summary>
             Set/Get the value of the arc segment width in degrees.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.SegmentSpacing">
            <summary>
             Set/Get the spacing of the arc segments in degrees.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.SegmentValueRoundMode">
            <summary>
             Set/Get how the current process value is rounded up in calculating how many segments to display in 
             RT_METER_SEGMENTED_ARC_SUBTYPE, RT_METER_SINGLE_SEGMENT_ARC_SUBTYPE
             modes.
             Use one of the constants: RT_FLOOR_VALUE, RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.OuterArcCapStyle">
            <summary>
             Set/Get the outer arc cap style. Use one of the constants:RT_METER_ARC_RADIUS_CAP, 
             RT_METER_ARC_WEDGE_WIDTH_CAP, RT_METER_ARC_FLAT_CAP.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterArcIndicator.InnerArcCapStyle">
            <summary>
             Set/Get the inner arc cap style. Use one of the constants:RT_METER_ARC_RADIUS_CAP,
              RT_METER_ARC_WEDGE_WIDTH_CAP, RT_METER_ARC_FLAT_CAP.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterAxis">
            <summary>
            A meter axis extends for the extent of the meter arc and is centered on the origin. Major and minor tick marks 
            are placed at evenly spaced intervals perpendicular to the meter arc. The meter axis also draws meter alarm arcs 
            using the alarm information in the associated RTProcessVar object.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.showAlarms">
            <summary>
             Specify true if the meter axis alarm arcs are to be displayed.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.meterIndicator">
            <summary>
             Holds a reference to a meter indicator associated with the meter axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.meterAxisLabels">
            <summary>
             Holds a reference to a meter labels associated with the meter axis.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.minorTickLineWidth">
            <summary>
             Specifies the width of the lines used to draw the minor tick marks.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.majorTickLineWidth">
            <summary>
             Specifies the width of the lines used to draw the major tick marks.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.innerAlarmArcNormalized">
            <summary>
             Specifies the radius of the inner arc in normalized radius coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterAxis.outerAlarmArcNormalized">
            <summary>
             Specifies the radius of the outer arc in normalized radius coordinates.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.#ctor">
            <summary>
              The default constructor for the RTMeterAxis class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterAxis object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.Copy(com.quinncurtis.rtgraphnet.RTMeterAxis)">
            <summary>
              Copies the source RTMeterAxis object. 
            </summary>
            <param name="source"> The source RTMeterAxis object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.Clone">
            <summary>
             Returns an object that is a clone of this RTMeterAxis object. 
            </summary>
            <returns> Returns a clone of this RTMeterAxis object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.CalcAutoAxis">
            <summary>
              This auto-axis method uses the current minimum and maximum values in the underlying
               RTMeterCoordinates coordinate system object to determine the minimum and maximum value for the axis, 
              and the  appropriate minor and major tick mark spacing.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.InitDefaults">
            <summary>
             Initializes default values for the RTMeterAxis object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates)">
            <summary>
             This constructor creates a new RTMeterAxis object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the meter axis. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTMeterIndicator)">
            <summary>
             This constructor creates a new RTMeterAxis object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the meter axis. </param>
            <param name="graphplot"> The RTMeterIndicator object associated with the meter axis. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTMeterIndicator,System.Double,System.Int32)">
            <summary>
             This constructor creates a new RTMeterAxis object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the meter axis. </param>
            <param name="graphplot"> The RTMeterIndicator object associated with the meter axis. </param>
            <param name="tickspace"> Specifies the spacing between minor tick marks, in degrees. </param>
            <param name="tickspermajor"> Specifies the number of minor tick marks per major tick mark.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTMeterIndicator,System.Double,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
             This constructor creates a new RTMeterAxis object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the meter axis. </param>
            <param name="graphplot"> The RTMeterIndicator object associated with the meter axis. </param>
            <param name="tickspace"> Specifies the spacing between minor tick marks, in degrees. </param>
            <param name="tickspermajor"> Specifies the number of minor tick marks per major tick mark.</param>
            <param name="minorticklength"> The length of minor tick marks, in window device coordinates. </param>
            <param name="majorticklength"> The length of major tick marks, in window device coordinates. </param>
            <param name="tickdir"> The direction of the tick marks. User one of the tick mark direction  
            constants: AXIS_MIN, AXIS_CENTER, or AXIS_MAX.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.SetAxisTicks(System.Double,System.Int32)">
            <summary>
              This method is used to initialize the minor and major tick mark spacing,  and the tick mark origin. 
            </summary>
            <param name="tickspace"> Specifies the spacing between minor tick marks, in degrees. </param>
            <param name="tickspermajor"> Specifies the number of minor tick marks per major tick mark.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.SetAxisTicks(System.Double,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
              This method is used to initialize the minor and major tick mark spacing,  and the tick mark origin. 
            </summary>
            <param name="tickspace"> Specifies the spacing between minor tick marks, in degrees. </param>
            <param name="tickspermajor"> Specifies the number of minor tick marks per major tick mark.</param>
            <param name="minorticklength"> The length of minor tick marks, in window device coordinates. </param>
            <param name="majorticklength"> The length of major tick marks, in window device coordinates. </param>
            <param name="tickdir"> The direction of the tick marks. User one of the tick mark direction  
            constants: AXIS_MIN, AXIS_CENTER, or AXIS_MAX.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.DrawMeterArc(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the meter indicator.  
            </summary>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.MakeTickMark(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
              This method make a meter tick mark and adds it to the tick mark list. 
            </summary>
            <param name="degrees"> Specifies the value of the position of the tick mark in degrees. </param>
            <param name="currentscalevalue"> Specifies scaled value of the tick mark.</param>
            <param name="radius"> The radius length. </param>
            <param name="radiusmajor"> The outer radius of the tick mark. </param>
            <param name="radiusminor"> The inner radius of the tick mark. </param>
            <param name="aspectratio"> The aspect ratio of the parent ChartView. </param>
            <param name="count"> The tick mark count, used to determine if major or minor tick mark. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.CalcAxisTicks">
            <summary>
              This methods calculates the tick marks for the meter axis.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.AutoInitRTMeterAlarmArcs(System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
              Calculate the alarm arcs based on the alarm list in the primary RTProcessVar channel.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="alarmvector"> An ArrayList of RTAlarm objects</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.DrawMeterAxisTicks(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the meter axis tick marks.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxis.GetCompatibleAxisLabels">
            <summary>
             Returns an RTMeterAxisLabels object, compatible with the RTMetereAxis object.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.MeterAxisLabels">
            <summary>
             Get/Set the RTMeterAxisLabels object, if any, associated with this object.
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.MeterIndicator">
            <summary>
             Get/Set the RTMeterIndicator object, if any, associated with this object.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.MinorTickLineWidth">
            <summary>
             Get/Set the minor tick line width.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.MajorTickLineWidth">
            <summary>
             Get/Set the major tick line width.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.InnerAlarmArcNormalized">
            <summary>
             Get/Set the inner arc of the axis in normalized radius coordinates.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.OuterAlarmArcNormalized">
            <summary>
             Get/Set the outer arc of the axis in normalized radius coordinates.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.ShowAlarms">
            <summary>
             Get/Set true to show the alarm arcs.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxis.MeterFrame">
            <summary>
             Get/Set the RTMeterCoordinates coordinate system associated with this object.
             </summary>	
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterAxisLabels">
            <summary>
            This class labels the major tick marks of the RTMeterAxis class. The class supports many predefined and 
            user-definable formats, including numeric, exponent, percentage, business and currency formats.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.#ctor">
            <summary>
              The default constructor for the RTMeterAxisLabels class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.InitDefaults">
            <summary>
             Initializes default values for the RTMeterAxisLabels object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterAxisLabels object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.Copy(com.quinncurtis.rtgraphnet.RTMeterAxisLabels)">
            <summary>
              Copies the source RTMeterAxisLabels object. 
            </summary>
            <param name="source"> The source RTMeterAxisLabels object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.Clone">
            <summary>
             Returns an object that is a clone of this RTMeterAxisLabels object. 
            </summary>
            <returns> Returns a clone of this RTMeterAxisLabels object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.#ctor(com.quinncurtis.rtgraphnet.RTMeterAxis)">
            <summary>
             This constructor creates a new RTMeterAxisLabels object for the specified meter axis.
            </summary> 
            <param name="baseaxis"> The RTMeterAxis object associated with the labels. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.SetOuterLabelsTextJust(com.quinncurtis.chart2dnet.ChartText,System.Double)">
            <summary>
             This methods sets the justification properties of the
            	ChartText used to label the outside of the meter axis, based on the angular
             position of the text.		
            </summary> 
            <param name="text"> A reference to the ChartText object used to label the
               radial axis tick marks. </param>
            <param name="rangle"> The angular position, in degrees, of the tick mark. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.SetInnerLabelsTextJust(com.quinncurtis.chart2dnet.ChartText,System.Double)">
            <summary>
             This methods sets the justification properties of the
            	ChartText used to label the inside of the meter axis, based on the angular
             position of the text.		
            </summary> 
            <param name="text"> A reference to the ChartText object used to label the
               radial axis tick marks. </param>
            <param name="rangle"> The angular position, in degrees, of the tick mark. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.SetMeterLabelsTextJust(com.quinncurtis.chart2dnet.ChartText,System.Double)">
            <summary>
             This methods sets the justification properties of the
            	ChartText used to label the meter axis, based on the angular
             position of the text.		
            </summary> 
            <param name="text"> A reference to the ChartText object used to label the
               radial axis tick marks. </param>
            <param name="rangle"> The angular position, in degrees, of the tick mark. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.CalcMeterAxisLabels(System.Drawing.Graphics)">
            <summary>
              Draws the meter tick mark labels.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.SetAxisLabels(System.Drawing.Font,System.Int32,System.Drawing.Color)">
            <summary>
              Initializes the attributes of an RTMeterAxisLabels object. 
            </summary>
            <param name="font"> The font object used to display the axis label text. </param>
            <param name="decimalpos"> Sets the number of digits to the right of the decimal point for numeric axis labels. </param>
            <param name="labcolor"> The color of the label text.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterAxisLabels.MeterAxis">
            <summary>
             Get/Set the RTMeterAxis associated with this object.
             </summary>	
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterCoordinates">
            <summary>
            A meter coordinate system has more properties than a simple Cartesian coordinate system, 
            or even a polar coordinate system. Because of the variation in meter styles, a meter coordinate system 
            sets the start and end angle of the meter arc within the 360 degree polar coordinate system. 
            It also maps a physical coordinate system, representing the meter scale, on top of the meter arc. 
            And the origin of the meter coordinate system can be offset in both x- and y-directions with respect to 
            the containing plot area. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.startArcAngle">
            <summary>
             Specifies the starting arc angle position of the meter arc in degrees.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.arcExtent">
            <summary>
             Specifies the extent of the meter arc in degrees. The default meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.arcDirectionPositive">
            <summary>
             Specifies the direction of the arcExtent. The default arcDirectionPositive value of false meter arc 
             starts at startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the meter arc extend in a positive (counter-clockwise) direction.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.startArcScale">
            <summary>
             Specifies the scaling value associated with the startArcAngle position of the meter arc.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.endArcScale">
            <summary>
             Specifies the scaling value associated with the ending position of the meter arc.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.arcRadius">
            <summary>
             Specifies radius of the meter arc in plot area normalized coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.arcCenterX">
            <summary>
             Specifies x-position of the center of the meter arc in plot area normalized coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterCoordinates.arcCenterY">
            <summary>
             Specifies y-position of the center of the meter arc in plot area normalized coordinates.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterCoordinates object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.InitDefaults">
            <summary>
             Initializes default values for the RTMeterCoordinates object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.Copy(com.quinncurtis.rtgraphnet.RTMeterCoordinates)">
            <summary>
              Copies the source RTMeterCoordinates object. 
            </summary>
            <param name="source"> The source RTMeterCoordinates object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.Clone">
            <summary>
             Returns an object that is a clone of this RTMeterCoordinates object. 
            </summary>
            <returns> Returns a clone of this RTMeterCoordinates object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.#ctor">
            <summary>
              The default constructor for the RTMeterCoordinates class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.#ctor(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
             This constructor creates a new RTMeterCoordinates object using he specified parameters.
            </summary> 
            <param name="startarcangle"> Specifies the starting arc angle position of the meter arc in degrees.</param>
            <param name="arcextent"> Specifies the extent of the meter arc in degrees. The default meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent. </param>
            <param name="startarcscale"> Specifies the scaling value associated with the startArcAngle position of the 
             meter arc.</param>
            <param name="endarcscale"> Specifies the scaling value associated with the ending position of the meter arc. </param>
            <param name="arcdirection"> Specifies the direction of the arcExtent. The default arcDirectionPositive 
             value of false meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the meter arc extend in a positive (counter-clockwise) direction.</param>
            <param name="arcradius"> Specifies radius of the meter arc in plot area normalized coordinates. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.#ctor(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
             This constructor creates a new RTMeterCoordinates object using he specified parameters.
            </summary> 
            <param name="startarcangle"> Specifies the starting arc angle position of the meter arc in degrees.</param>
            <param name="arcextent"> Specifies the extent of the meter arc in degrees. The default meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent. </param>
            <param name="startarcscale"> Specifies the scaling value associated with the startArcAngle position of the 
             meter arc.</param>
            <param name="endarcscale"> Specifies the scaling value associated with the ending position of the meter arc. </param>
            <param name="arcdirection"> Specifies the direction of the arcExtent. The default arcDirectionPositive 
             value of false meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the meter arc extend in a positive (counter-clockwise) direction.</param>
            <param name="x"> Specifies x-position of the center of the meter arc in plot area normalized coordinates.</param>
            <param name="y"> Specifies y-position of the center of the meter arc in plot area normalized coordinates. </param>
            <param name="arcradius"> Specifies radius of the meter arc in plot area normalized coordinates. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.InitMeterCoordinates(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
             Initialize a RTMeterCoordinates object using he specified parameters.
            </summary> 
            <param name="startarcangle"> Specifies the starting arc angle position of the meter arc in degrees.</param>
            <param name="arcextent"> Specifies the extent of the meter arc in degrees. The default meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent. </param>
            <param name="startarcscale"> Specifies the scaling value associated with the startArcAngle position of the 
             meter arc.</param>
            <param name="endarcscale"> Specifies the scaling value associated with the ending position of the meter arc. </param>
            <param name="arcdirection"> Specifies the direction of the arcExtent. The default arcDirectionPositive 
             value of false meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the meter arc extend in a positive (counter-clockwise) direction.</param>
            <param name="x"> Specifies x-position of the center of the meter arc in plot area normalized coordinates.</param>
            <param name="y"> Specifies y-position of the center of the meter arc in plot area normalized coordinates. </param>
            <param name="arcradius"> Specifies radius of the meter arc in plot area normalized coordinates. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ValueToDegreesW(System.Double)">
            <summary>
              Converts a width value in physical coordinates to a width value in degrees. 
            </summary>
            <param name="value"> The width value in physical coordinates.</param>
            <returns> Returns a width value in degrees.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ValueToDegrees(System.Double)">
            <summary>
              Converts an absolute value in physical coordinates to an absolute value in degrees. 
            </summary>
            <param name="value"> The absolute value in physical coordinates.</param>
            <returns> Returns a absolute value in degrees.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.DrawArcDegrees(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Double,System.Double,System.Double)">
            <summary>
              Draws an arc using specified using degrees using the RTMeterCoordinates coordinate system.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="startdegrees"> Specifies the start of the arc in degrees.</param>
            <param name="enddegrees"> Specifies the end of the arc in degrees. </param>
            <param name="innerpercent"> Specifies the inner radius of the arc. </param>
            <param name="outerpercent"> Specifies the outer radius of the arc. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterCoordinates.GetCompatibleAxis(com.quinncurtis.rtgraphnet.RTMeterIndicator)">
            <summary>
             This method returns an RTMeterAxis object,  compatible with this coordinate system. 
            </summary>
            <returns> Returns either an PolarAxes axis object,  compatible with this coordinate system.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.StartArcAngle">
            <summary>
             Get/Set Specifies the starting arc angle position of the meter arc in degrees.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ArcExtent">
            <summary>
             Specifies the extent of the meter arc in degrees. The default meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ArcDirectionPositive">
            <summary>
             Get/Set the direction of the arcExtent. The default arcDirectionPositive value of false meter arc starts at
             startArcAngle and extends in a negative (clockwise) direction with an extent arcExtent.
             Change to true to have the meter arc extend in a positive (counter-clockwise) direction.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.StartArcScale">
            <summary>
             Get/Set the scaling value associated with the startArcAngle position of the meter arc.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.EndArcScale">
            <summary>
             Get/Set the scaling value associated with the ending position of the meter arc.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ArcRadius">
            <summary>
             Get/Set radius of the meter arc in plot area normalized coordinates.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ArcCenterX">
            <summary>
             Get/Set Specifies x-position of the center of the meter arc in plot area normalized coordinates.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterCoordinates.ArcCenterY">
            <summary>
             Get/Set Specifies y-position of the center of the meter arc in plot area normalized coordinates.
             </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterIndicator">
            <summary>
            The RTMeterIndicator class is the abstract base class for all meter indicators. Familiar examples of analog 
            meters are voltmeters, car speedometers, pressure gages, compasses and analog clock faces. Three meter types 
            are supported: arc, symbol, and needle meters. An unlimited number of meter indicators can be added to a given 
            meter object. RTPanelMeter objects can be attached to an RTMeterIndicator object for the display of RTProcessVar 
            numeric, alarm and string data in addition to the indicator graphical display. Meter scaling, meter axes, meter 
            axis labels and alarm objects and handle by other classes.
            classes.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterIndicator.underRangeNormalizedValue">
            <summary>
             Specifies the displayable low end of the indicator range as a normalized value
             based on the RTMeterCoordinates and RTMeterAxis scale. For example, if the RTMeterAxis scale
             is 0 to 10, an underRangeNormalizedValue of -0.1 will allow the indicator to display
             off-scale down to -1.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterIndicator.overRangeNormalizedValue">
            <summary>
             Specifies the displayable high end of the indicator range as a normalized value
             based on the RTMeterCoordinates and RTMeterAxis scale. For example, if the RTMeterAxis scale
             is 0 to 10, an overRangeNormalizedValue of 0.1 will allow the indicator to display
             off-scale up to 11.0.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterIndicator.meterAxis">
            <summary>
             Holds a reference to the RTMeterAxis associated with the meter indicator.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterIndicator.indicatorSubtype">
            <summary> 
             Specifies the meter indicator subtype. Use one of the meter indicator subtype constants:
             RT_METER_NEEDLE_SIMPLE_SUBTYPE , RT_METER_NEEDLE_PIEWEDGE_SUBTYPE, RT_METER_NEEDLE_ARROW_SUBTYPE,
              RT_METER_ARC_BAND_SUBTYPE, RT_METER_SEGMENTED_ARC_SUBTYPE, RT_METER_SINGLE_SEGMENT_ARC_SUBTYPE ,
              RT_METER_SYMBOL_ARC_SUBTYPE, RT_METER_SINGLE_SYMBOL_SUBTYPE. 
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterIndicator.indicatorBackground">
            <summary>
             Specifies the background attributes of the indicator display area.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterIndicator.indicatorBackgroundEnable">
            <summary>
             Set to True if indicatorBackground is on.
            </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMeterIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterIndicator.#ctor">
            <summary>
              The default RTMeterIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterIndicator.Copy(com.quinncurtis.rtgraphnet.RTMeterIndicator)">
            <summary>
             Copies the source RTMeterIndicator object.
            </summary>
             <param name= "source"> The source RTMeterIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterIndicator.InitRTMeterIndicator(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This method intializes a RTMeterIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter coordinate system. </param>
            <param name="datasource"> The process variable associated with the  meter indicator. </param>
            <param name="attrib"> The color attributes of the meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterIndicator.ClampIndicatorPosition(System.Double)">
            <summary>
             This method clamps a meter value to the current physical scale, taking into account the under and 
             over range conditions. 
            </summary> 
            <param name="mvalue"> The value to be clamped. </param>
             <returns> REturns the clamped value. </returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterIndicator.MeterAxis">
            <summary>
              Get/Set the reference meter axis.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterIndicator.UnderRangeNormalizedValue">
            <summary>
              Get/Set the displayable low end of the indicator range as a normalized value
             based on the RTMeterCoordinates and RTMeterAxis scale. For example, if the RTMeterAxis scale
             is 0 to 10, an underRangeNormalizedValue of -0.1 will allow the indicator to display
             off-scale down to -1.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterIndicator.OverRangeNormalizedValue">
            <summary>
              Get/Set the displayable high end of the indicator range as a normalized value
             based on the RTMeterCoordinates and RTMeterAxis scale. For example, if the RTMeterAxis scale
             is 0 to 10, an overRangeNormalizedValue of 0.1 will allow the indicator to display
             off-scale up to 11.0.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterIndicator.IndicatorSubtype">
            <summary>
              Set/Get the meter indicator subtype. Use one of the meter indicator subtype constants:
             RT_METER_NEEDLE_SIMPLE_SUBTYPE , RT_METER_NEEDLE_PIEWEDGE_SUBTYPE, RT_METER_NEEDLE_ARROW_SUBTYPE,
              RT_METER_ARC_BAND_SUBTYPE, RT_METER_SEGMENTED_ARC_SUBTYPE, RT_METER_SINGLE_SEGMENT_ARC_SUBTYPE ,
              RT_METER_SYMBOL_ARC_SUBTYPE, RT_METER_SINGLE_SYMBOL_SUBTYPE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterIndicator.IndicatorBackground">
            <summary>
              Get/Set the background attribute of the meter indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterIndicator.IndicatorBackgroundEnable">
            <summary>
              Set to true to enable the display of the meter indicator background.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator">
            <summary>
            This RTMeterNeedleIndicator class displays the current RTProcessVar value as a needle. Subtypes of the 
            RTMeterNeedleIndicator are simple needles, pie wedge shaped needles and arrow needles.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.needleOverhang">
            <summary>
             Specifies the overhang of the back end of the needle indicator specified as a fraction of the
             needle length. For example: a value of 0.25 means that the needle will extend  
             the point, back through the RTMeterCoordinates arcCenterX, and arcCenterY point, and continue for
             a distance equal to 0.25 of the radius value.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.pivotRadius">
            <summary>
             Specifies in device coordinates the radius of the pivot point of the needle, analogous to the bearing 
             or axle supporting the meter needle.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.pivotColor">
            <summary>
             Specifies color of the pivot point.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.pivotDrawFlag">
            <summary>
             Set to true to draw the pivot point.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.needleBaseWidth">
            <summary>
             Specifies the width of the base end of the needle for the RT_METER_NEEDLE_SIMPLE_SUBTYPE needle type,
             in device coordinates. 
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.needleHeadWidthMultiplier">
            <summary>
             Specifies the head width multiplier for the RT_METER_NEEDLE_ARROW_SUBTYPE needle type,
             in device coordinates. 
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.needleHeadLengthMultiplier">
            <summary>
             Specifies the head length multiplier for the RT_METER_NEEDLE_ARROW_SUBTYPE needle type,
             in device coordinates. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.needleLength">
            <summary>
             Specifies the length of the needle in normalized plot coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.pieWedgeDegrees">
            <summary>
             Specifies the arc width of the needle for the RT_METER_NEEDLE_PIEWEDGE_SUBTYPE needle type,
             in degrees coordinates. 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterNeedleIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMeterNeedleIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.#ctor">
            <summary>
              The default RTMeterNeedleIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.Copy(com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator)">
            <summary>
             Copies the source RTMeterNeedleIndicator object.
            </summary>
             <param name= "source"> The source RTMeterNeedleIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.Clone">
            <summary>
             Returns an object that is a Clone of this RTMeterNeedleIndicator object. 
            </summary>
            <returns> Returns a Clone of this RTMeterNeedleIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             This constructor creates a RTMeterNeedleIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter coordinate system. </param>
            <param name="datasource"> The process variable associated with the  meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,System.Double,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a RTMeterNeedleIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="frame"> The RTMeterCoordinates object defining the meter coordinate system. </param>
            <param name="datasource"> The process variable associated with the  meter indicator. </param>
            <param name="needlelength"> Specifies length of the needle in normalized plot coordinates. </param>
            <param name="needleoverhang"> Specifies the overhang of the back end of the needle indicator specified in 
             needle radius
             normalized coordinates.  </param>
            <param name="needlewidth"> The color attributes of the meter indicator. </param>
            <param name="attrib"> The color attributes of the meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.InitMeterNeedle(com.quinncurtis.rtgraphnet.RTProcessVar,System.Double,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This method initializes a RTMeterNeedleIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the  meter indicator. </param>
            <param name="needlelength"> Specifies length of the needle in normalized plot coordinates. </param>
            <param name="needleoverhang"> Specifies the overhang of the back end of the needle indicator specified 
             in needle radius
             normalized coordinates.  </param>
            <param name="needlewidth"> The color attributes of the meter indicator. </param>
            <param name="attrib"> The color attributes of the meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.AutoCalcMeterNeedle">
            <summary>
             Auto-initializes the meter needle length based on the values of the RTMeterCoordinates and 
             RTMeterAxis objects.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.DrawSimpleNeedle(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Double)">
            <summary>
              Draws the simple meter needle indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="radius"> The needle length in normalized plot coordinates.</param>
            <param name="currentvalue"> The current value of the needle.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.DrawArrowNeedle(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Double)">
            <summary>
              Draws the arrow meter needle indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="radius"> The needle length in normalized plot coordinates.</param>
            <param name="currentvalue"> The current value of the needle.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.DrawPieWedgeNeedle(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Double)">
            <summary>
              Draws the pie wedge meter needle indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="radius"> The needle length in normalized plot coordinates.</param>
            <param name="currentvalue"> The current value of the needle.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.DrawNeedle(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double)">
            <summary>
              Draws the meter needle indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="currentvalue"> The current value of the needle.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.DrawMeterIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the meter needle indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Not supported.
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object (Not supported at this time). 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.NeedleOverhang">
            <summary>
             Set/Get the overhang of the back end of the needle indicator specified as a fraction of the needle
             length.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.PivotRadius">
             the meter needle.
            <summary>
             Set/Get in device coordinates the radius of the pivot point of the needle, analogous to the bearing 
             or axle supporting the meter needle.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.PivotColor">
            <summary>
             Set/Get the color of the needle pivot.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.PivotDrawFlag">
            <summary>
             Set to true to draw the needle pivot.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.NeedleBaseWidth">
            <summary>
             Set/Get the width of the base end of the needle for the RT_METER_NEEDLE_SIMPLE_SUBTYPE needle type,
             in device coordinates. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.NeedleHeadWidthMultiplier">
            <summary>
             Set/Get the head width multiplier for the RT_METER_NEEDLE_ARROW_SUBTYPE needle type,
             in device coordinates. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.NeedleHeadLengthMultiplier">
            <summary>
             Set/Get the head length multiplier for the RT_METER_NEEDLE_ARROW_SUBTYPE needle type,
             in device coordinates. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.NeedleLength">
            <summary>
             Set/Get the length of the needle in normalized plot coordinates.
             length.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterNeedleIndicator.PieWedgeDegrees">
            <summary>
             Set/Get Specifies the arc width of the needle for the RT_METER_NEEDLE_PIEWEDGE_SUBTYPE needle type,
             in degrees coordinates. 
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels">
             <summary>
            This class labels the major tick marks of the RTMeterAxis  class using user-defined strings
             </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.meterLabelTextOrient">
            <summary>
            Specifies if the text is horizontal to tick mark (METER_LABEL_HORIZONTAL) at right angles to 
            the tick mark (METER_LABEL_PERPENDICULAR), or radial to the tick mark parallel
             (METER_LABEL_RADIAL_1, METER_LABEL_RADIAL_2). 
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.#ctor">
            <summary>
              The default RTMeterStringAxisLabels constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.InitDefaults">
            <summary>
             Initializes default values for the RTMeterStringAxisLabels object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterStringAxisLabels object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.Copy(com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels)">
            <summary>
             Copies the source RTMeterStringAxisLabels object.
            </summary>
             <param name= "source"> The source RTMeterStringAxisLabels object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.Clone">
            <summary>
             Returns an object that is a Clone of this RTMeterStringAxisLabels object. 
            </summary>
            <returns> Returns a Clone of this RTMeterStringAxisLabels object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.#ctor(com.quinncurtis.rtgraphnet.RTMeterAxis)">
            <summary>
             This constructor creates a new RTMeterStringAxisLabels object for the specified meter axis.
            </summary> 
            <param name="baseaxis"> The RTMeterAxis object associated with the labels. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.SetOuterLabelsTextJust(com.quinncurtis.chart2dnet.ChartText,System.Double)">
            <summary>
             This methods sets the justification properties of the
            	ChartText used to label the outside of the meter axis, based on the angular
             position of the text.		
            </summary> 
            <param name="text"> A reference to the ChartText object used to label the
               radial axis tick marks. </param>
            <param name="rangle"> The angular position, in degrees, of the tick mark. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.SetInnerLabelsTextJust(com.quinncurtis.chart2dnet.ChartText,System.Double)">
            <summary>
             This methods sets the justification properties of the
            	ChartText used to label the inside of the meter axis, based on the angular
             position of the text.		
            </summary> 
            <param name="text"> A reference to the ChartText object used to label the
               radial axis tick marks. </param>
            <param name="rangle"> The angular position, in degrees, of the tick mark. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.SetMeterLabelsTextJust(com.quinncurtis.chart2dnet.ChartText,System.Double)">
            <summary>
             This methods sets the justification properties of the
            	ChartText used to label the meter axis, based on the angular
             position of the text.		
            </summary> 
            <param name="text"> A reference to the ChartText object used to label the
               radial axis tick marks. </param>
            <param name="rangle"> The angular position, in degrees, of the tick mark. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.CalcMeterAxisLabels(System.Drawing.Graphics)">
            <summary>
              Draws the meter tick mark labels.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.SetAxisLabels(System.Drawing.Font,System.Int32,System.Drawing.Color)">
            <summary>
              Initializes the attributes of an RTMeterAxisLabels object. 
            </summary>
            <param name="font"> The font object used to display the axis label text. </param>
            <param name="decimalpos"> Unused in this class. </param>
            <param name="labcolor"> The color of the label text.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.MeterAxis">
            <summary>
             Get/Set the RTMeterAxis associated with this object.
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterStringAxisLabels.MeterLabelTextOrient">
            <summary>
             Get/Set if the text is horizontal (METER_LABEL_HORIZONTAL) at right angles to the tick mark 
             (METER_LABEL_PERPENDICULAR), or radial to the tick mark parallel (METER_LABEL_RADIAL_1, METER_LABEL_RADIAL_2). 
             </summary>	
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator">
            <summary>
            This RTMeterSymbolIndicator class displays the current RTProcessVar value as a symbol moving around in 
            the meter arc. Symbols include all of the QCChart2D scatter plot symbols: SQUARE, TRIANGLE, DIAMOND, 
            CROSS, PLUS, STAR, LINE, HBAR, VBAR, BAR3D, CIRCLE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.symbolPosPercent">
            <summary>
             Specifies the radial position of the symbol indicator.
            </summary>	
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.symbolSize">
            <summary>
             Specifies the size in points of the symbol indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.symbolNum">
            <summary>
             Specifies the symbol used as the indicator symbol. Use one of  the scatter plot symbol constants: NOSYMBOL, 
              SQUARE, TRIANGLE, DIAMOND, CROSS, PLUS, STAR, LINE, HBAR, VBAR, BAR3D, CIRCLE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.symbolSpacing">
            <summary>
             Specifies the space, in degrees, between adjacent symbols.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.segmentValueRoundMode">
            <summary>
             Specifies that the current process value is rounded up in calculating how many symbols to display in  
             RT_METER_SYMBOL_ARC_SUBTYPE, RT_METER_SINGLE_SYMBOL_SUBTYPE modes.
             Use one of the constants: RT_FLOOR_VALUE, RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMeterSymbolIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMeterSymbolIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.#ctor">
            <summary>
              The default RTMeterSymbolIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.Copy(com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator)">
            <summary>
              Copies the source RTMeterSymbolIndicator object. 
            </summary>
            <param name="source"> The source RTMeterSymbolIndicator object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.Clone">
            <summary>
             Returns an object that is a clone of this RTMeterSymbolIndicator object. 
            </summary>
            <returns> Returns a clone of this RTMeterSymbolIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.InitMeterSymbol(com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This method initializes a RTMeterSymbolIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the indicator. </param>
            <param name="symbolnum"> Specifies what symbol to use in the indicator. 
            Use one of  the scatter plot symbol constants: NOSYMBOL,  SQUARE, TRIANGLE, DIAMOND, CROSS, 
             PLUS, STAR, LINE, HBAR, VBAR, BAR3D, CIRCLE.  </param>
            <param name="symbolsize"> The size of the symbol in points. </param>
            <param name="attrib"> The color attributes of the indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             This constructor creates a new RTMeterSymbolIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the indicator. </param>
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.#ctor(com.quinncurtis.rtgraphnet.RTMeterCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTMeterSymbolIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> The process variable associated with the indicator. </param>
            <param name="frame"> The RTMeterCoordinates object defining the meter properties for the indicator. </param>
            <param name="symbolnum"> Specifies what symbol to use in the indicator. 
            Use one of  the scatter plot symbol constants: NOSYMBOL,  SQUARE, TRIANGLE, DIAMOND, CROSS, 
             PLUS, STAR, LINE, HBAR, VBAR, BAR3D, CIRCLE.  </param>
            <param name="symbolsize"> The size of the symbol in points. </param>
            <param name="attrib"> The color attributes of the indicator. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.DrawSymbolArc(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double)">
            <summary>
              Draws the symbols of symbol indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="currentvalue"> The current value of the arc indicator.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.DrawSymbolIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double)">
            <summary>
              Draws the symbols of a symbol indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
            <param name="currentvalue"> The current value of the arc indicator.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.DrawSymbolMeterIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the symbols of a symbol indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              No supported
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the object (No supported). 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.SymbolPosPercent">
            <summary>
             Set/Get the radial position of the symbol indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.SymbolSize">
            <summary>
             Set/Get the size of the symbol indicator in points.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.SymbolNum">
            <summary>
             Set/Get the symbol used as the indicator symbol. Use one of  the scatter plot symbol constants: NOSYMBOL,  
             SQUARE, TRIANGLE, DIAMOND, CROSS, PLUS, STAR, LINE, HBAR, VBAR, BAR3D, CIRCLE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.SegmentValueRoundMode">
            Get/Set that the current process value is rounded up in calculating how many symbols to display in  
            RT_METER_SYMBOL_ARC_SUBTYPE, RT_METER_SINGLE_SYMBOL_SUBTYPE modes.
            Use one of the constants: RT_FLOOR_VALUE, RT_CEILING_VALUE.	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMeterSymbolIndicator.SymbolSpacing">
            <summary>
             Get/Set the space, in degrees, between adjacent symbols.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator">
            <summary>
            This class is used to provide alarm limit indicators for RTMultiValueIndicator objects. Each indicator in a 
            multi-indicator object can have unique alarm settings.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.primaryAxis">
            <summary>
             A reference to the Axis object associated with alarm indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.multiBarPlot">
            <summary>
             A reference to the RTMultiValueIndicator object associated with alarm indicator. The process variables 
             associated with the RTMultiValueIndicator object is used as the reference for all alarm levels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.alarmLimitSymbols">
            <summary>
             If the alarmIndicatorMode is RT_ALARM_LIMIT_SYMBOL_INDICATOR, this ArrayList contains a list of the symbols 
             used to display the alarm levels.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.alarmColorBackgroundAlpha">
            <summary>
             The solid background alarm indicators (RT_ALARM_LIMIT_BACKGROUND_INDICATOR) can be transparent if the 
             alarmColorBackgroundAlpha is set to something less than 255.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.alarmDisplayMode">
            <summary>
             This property specifies the alarm display mode: RT_ALARM_LIMIT_SYMBOL_INDICATOR,
             RT_ALARM_LIMIT_LINE_INDICATOR, RT_ALARM_LIMIT_BACKGROUND_INDICATOR,
             RT_NO_ALARM_LIMIT_INDICATOR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.alarmIndicatorMode">
            <summary>
             This property specifies the alarm indicator mode: 
             RT_DISPLAY_ALL_ALARMS, RT_DISPLAY_PRIMARY_ALARM
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMultiAlarmIndicator object for common errors.
             </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMultiAlarmIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.#ctor">
            <summary>
              The default RTMultiAlarmIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.Copy(com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator)">
            <summary>
             Copies the source RTMultiAlarmIndicator object.
            </summary>
             <param name= "source"> The source RTMultiAlarmIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.Clone">
            <summary>
             Returns an object that is a Clone of this RTMultiAlarmIndicator object. 
            </summary>
            <returns> Returns a Clone of this RTMultiAlarmIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AutoInitRTAlarmSymbols">
            <summary>
             Creates the alarm indicator symbols and adds them to the alarmLimitSymbols list.
            </summary> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AutoInitAllRTAlarmSymbols">
            <summary>
             Creates the alarm indicator symbols for all alarms and adds them to the alarmLimitSymbols list.
            </summary> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.#ctor(com.quinncurtis.chart2dnet.Axis,com.quinncurtis.rtgraphnet.RTMultiValueIndicator)">
            <summary>
              This constructor creates a new RTAlarmIndicator object that references the specified source axis and RTPlot object. 
            </summary>
            <param name="sourceaxis"> A reference to the Axis object associated with alarm indicator. </param>
            <param name="multibar"> A reference to the RTMultiValueIndicator object associated with alarm indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AutoInitRTBarAlarmAreas(System.Drawing.Graphics)">
            <summary>
             Draws the alarm indicator fill areas for the primary alarm.
            <param name="g2"> The graphics context.</param>
            </summary> 		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AutoInitAllRTAlarmAreas(System.Drawing.Graphics)">
            <summary>
             Draws the alarm indicator fill areas for all alarms.
            <param name="g2"> The graphics context.</param>
            </summary> 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AutoInitRTBarAlarmLines(System.Drawing.Graphics)">
            <summary>
             Draws the alarm indicator lines for the primary alarm.
            <param name="g2"> The graphics context.</param>
            </summary> 	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AutoInitAllRTAlarmLines(System.Drawing.Graphics)">
            <summary>
             Draws the alarm indicator lines for all alarms.
            <param name="g2"> The graphics context.</param>
            </summary> 	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.DrawAlarmIndicators(System.Drawing.Graphics)">
            <summary>
              Draw the alarm indicators.  
            </summary>
            <param name="g2"> The graphics context.</param>*/
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>*/
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object (Not supported at this time). 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AlarmDisplayMode">
            <summary>
              Get/Set the alarm display mode: RT_DISPLAY_ALL_ALARMS, RT_DISPLAY_PRIMARY_ALARM.
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AlarmIndicatorMode">
            <summary>
              Get/Set the alarm indicator mode. RT_ALARM_LIMIT_SYMBOL_INDICATOR,
             RT_ALARM_LIMIT_LINE_INDICATOR, RT_ALARM_LIMIT_BACKGROUND_INDICATOR,
             RT_NO_ALARM_LIMIT_INDICATOR.
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiAlarmIndicator.AlarmColorBackgroundAlpha">
            <summary>
              Get/Set the alpha level of the fill colors used when the alarm indicator mode is
              RT_ALARM_LIMIT_BACKGROUND_INDICATOR.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMultiBarIndicator">
            <summary>
            An RTMultiBarIndicator is used to display the current value of a collection of RTProcessVar objects using a 
            group of bars changing size. The bars are always fixed at the specified base value. Bars can change their size 
            either in vertical or horizontal direction. Sub types within the RTMultiBarIndicator class support segmented
             bars, custom segmented bars with variable width segments, and pointer bar indicators.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.indicatorSubType">
            <summary>
             Specifies the bar indicator sub type: RT_BAR_SOLID_SUBTYPE, RT_BAR_SEGMENTED_SUBTYPE, 
             RT_BAR_SINGLE_SEGMENT_SUBTYPE, RT_POINTER_SUBTYPE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.barOffset">
            <summary>
             Specifies the bar offset from its fixed x or y value in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.segmentWidth">
            <summary>
             Specifies the thickness of a segmented bars segment in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.segmentSpacing">
            <summary>
             Specifies the spacing between segmented bars segments in physical units.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.indicatorBackground">
            <summary>
             Specifies the background attributes of the indicator display area.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.indicatorBackgroundEnable">
            <summary>
             Set to True if indicatorBackground is on.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.segmentValueRoundMode">
            <summary>
             Specifies that the current process value is rounded up in calculating how many segments to display in 
              RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE modes. Use one of the constants: RT_FLOOR_VALUE, 
              RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.segmentCornerRadius">
            <summary>
             Specifies the corner radius used to draw the segment rounded rectangles.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.barEndBulb">
            <summary>
             True and a bulb is drawn at the minimum endpoint of the bar indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.barEndBulbScaleFactor">
            <summary>
             Bulb bar end scale factor (multiplier times bar width).
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.barEndBulbOffset">
            <summary>
             Bulb bar end offset factor (multiplier times bar width).
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.barBulbSymbol">
            <summary>
             The ChartSymbol object used as the bar bulb.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.pointerSymbolNum">
            <summary>
             Specifies the symbol used for the pointer symbol indicator subtype, RT_POINTER_SUBTYPE.
             Use one of the constants: RT_NO_SYMBOL, RT_LEFT_LOW_ALARM_SYMBOL.RT_LEFT_SETPOINT_SYMBOL. 
             RT_LEFT_HIGH_ALARM_SYMBOL , RT_RIGHT_LOW_ALARM_SYMBOL, RT_RIGHT_SETPOINT_SYMBOL,
              RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL , RT_TOP_SETPOINT_SYMBOL,
               RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL,
               RT_BOTTOM_HIGH_ALARM_SYMBOL;
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMultiBarIndicator object for common errors.
             </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMultiBarIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.#ctor">
            <summary>
              The default RTMultiBarIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.Copy(com.quinncurtis.rtgraphnet.RTMultiBarIndicator)">
            <summary>
             Copies the source RTMultiBarIndicator object.
            </summary>
             <param name= "source"> The source RTMultiBarIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.Clone">
            <summary>
             Returns an object that is a Clone of this RTMultiBarIndicator object. 
            </summary>
            <returns> Returns a Clone of this RTMultiBarIndicator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTMultiBarIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTMultiBarIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],System.Double,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute[],System.Int32,System.Int32)">
            <summary>
             This constructor creates a new RTMultiBarIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTMutliBarIndicator object. </param>
            <param name="datasource"> An array of the process variables associated with the  bar indicator. </param>
            <param name="barwidth"> The width of each bar in physical units. </param>
            <param name="barspacing"> The space between adjacent bars in physical units. </param>		
            <param name="barbase"> The base of the bar in physical units. </param>
            <param name="attribs"> An array of the color attributes of the bar indicator. </param>
            <param name="barjust"> The justification of bars. Use one of the bar justification constants: JUSTIFY_MIN, 
            JUSTIFY_CENTER, JUSTIFY_MAX.. </param>
            <param name="barorient"> The orientation of the bar indicator: HORIZ_DIR or VERT_DIR. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTMultiProcessVar,System.Double,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute[],System.Int32,System.Int32)">
            <summary>
             This constructor creates a new RTMultiBarIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTMutliBarIndicator object. </param>
            <param name="datasource"> An RTMultiProcessVar object that contains a collection of the RTProcessVar objects 
            associated with the  bar indicator. </param>
            <param name="barwidth"> The width of each bar in physical units. </param>
            <param name="barspacing"> The space between adjacent bars in physical units. </param>		
            <param name="barbase"> The base of the bar in physical units. </param>
            <param name="attribs"> An array of the color attributes of the bar indicator. </param>
            <param name="barjust"> The justification of bars. Use one of the bar justification constants: JUSTIFY_MIN, 
            JUSTIFY_CENTER, JUSTIFY_MAX.. </param>
            <param name="barorient"> The orientation of the bar indicator: HORIZ_DIR or VERT_DIR. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.InitRTMultiBarPlot(com.quinncurtis.rtgraphnet.RTProcessVar[],System.Double,System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute[],System.Int32)">
            <summary>
             This method initializes a RTMultiBarIndicator object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="datasource"> An array of the process variables associated with the  bar indicator. </param>
            <param name="barwidth"> The width of each bar in physical units. </param>
            <param name="barspacing"> The space between adjacent bars in physical units. </param>		
            <param name="barbase"> The base of the bar in physical units. </param>
            <param name="attribs"> An array of the color attributes of the bar indicator. </param>
            <param name="barjust"> The justification of bars. Use one of the bar justification constants: JUSTIFY_MIN, 
            JUSTIFY_CENTER, JUSTIFY_MAX.. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.CalcBulbSymbol(System.Double,System.Double,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             Calculates the shape used to draw a bulb at the end of a bar.
             <param name= "x">  The x-position of the bulb. </param>
             <param name= "y">   The x-position of the bulb. </param>
            <param name="attrib"> The color attribute of the bar bulb. </param>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.DrawMultiBarIndicator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the bar indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the bar plot bars. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the bar plot bars.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.GetCustomBarOffset(System.Double)">
            <summary>
              This virtual property is used to Set/Get algorithmic bar offsets for custom bar indicators.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.GetCustomBarWidth(System.Double)">
            <summary>
              This virtual property is used to Set/Get algorithmic bar widths for custom bar indicators.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.SegmentWidth">
            <summary>
              Get/Set the thickness of segments for the  RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE 
              bar indicator sub types.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.SegmentSpacing">
            <summary>
              Get/Set the segments spacing for the  RT_BAR_SEGMENTED_SUBTYPE and RT_BAR_SINGLE_SEGMENT_SUBTYPE bar 
              indicator sub types.
            </summary>		
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.IndicatorBackground">
            <summary>
              Get/Set the background attribute of the bar indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.IndicatorBackgroundEnable">
            <summary>
              Set to true to enable the display of the bar indicator background.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.SegmentValueRoundMode">
            <summary>
             Set/Get the segment value round mode. Specifies that the current process value is rounded up in 
             calculating how many segments to display in  RT_BAR_SEGMENTED_SUBTYPE and 
             RT_BAR_SINGLE_SEGMENT_SUBTYPE modes.
             Use one of the constants: RT_FLOOR_VALUE, RT_CEILING_VALUE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.BarOffset">
            <summary>
             Set/Get the bar offset from its fixed x or y value in physical units.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.IndicatorSubType">
            <summary>
             Set/Get the indicator subtype for the multibar indicator. Use one of the indicator subtype constants:
             RT_BAR_SOLID_SUBTYPE, RT_BAR_SEGMENTED_SUBTYPE, RT_BAR_SINGLE_SEGMENT_SUBTYPE, RT_POINTER_SUBTYPE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.PointerSymbolNum">
            <summary>
             Set/Get the symbol used for the pointer symbol indicator subtype, RT_POINTER_SUBTYPE.
             Use one of the constants: RT_NO_SYMBOL, RT_LEFT_LOW_ALARM_SYMBOL.RT_LEFT_SETPOINT_SYMBOL. 
             RT_LEFT_HIGH_ALARM_SYMBOL , RT_RIGHT_LOW_ALARM_SYMBOL, RT_RIGHT_SETPOINT_SYMBOL,
              RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL , RT_TOP_SETPOINT_SYMBOL,
               RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL,
               RT_BOTTOM_HIGH_ALARM_SYMBOL.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.SegmentCornerRadius">
            <summary>
             Get/Set the corner radius used to draw the segment rounded rectangles.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.BarEndBulb">
            <summary>
             Get/Set true to draw bulb at end of bar.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.BarEndBulbScaleFactor">
            <summary>
             Get/Set the scaling factor (multiplier times bar width) of the bar end bulb.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.BarEndBulbOffset">
            <summary>
             Get/Set Bulb bar end offset factor (multiplier times bar width).
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiBarIndicator.BarBulbSymbol">
            <summary>
             Get/Set the scaling factor (multiplier times bar width) of the bar end bulb.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTGroupDatasetTruncateDelegate">
            <summary>
            A delegate type for hooking up dataset truncate notifications.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMultiProcessVar">
            <summary>
            Summary description for the RTMultiProcessVar class, a class that manages a collection of process variables.
            </summary>
        </member>
        <member name="E:com.quinncurtis.rtgraphnet.RTMultiProcessVar.RTGroupDatasetTruncateEventHandler">
            <summary>
            Delegate for notification each time the processVarDataset is automatically truncated.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.processVarList">
            <summary>
            A collection of the RTProcessVar objects referenced by this list.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.datasetEnableUpdate">
            <summary>
            Set true data is logged to the processVarDataset.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.timeStamp">
            <summary>
            The time stamp for the current, most recently updated values.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.prevTimeStamp">
            <summary>
            The prevTimeStamp time stamp for the multi process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.uniqueIdentifier">
            <summary>
            A string that can hold a unique identifier for the multi process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.tagName">
            <summary>
            The identifying tag string for the multi process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.shortDescription">
            <summary>
            A short description of the multi process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.detailedDescription">
            <summary>
            A detailed description of the multi process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.autoTruncateDataset">
            <summary>
            Set to true and updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.autoTruncateMaxCount">
            <summary>
            If the autoTruncate flag is true updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiProcessVar.autoTruncateMinCount">
            <summary>
            If the autoTruncate flag is true updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.#ctor">
            <summary>
             The default RTMultiProcessVar constructor.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.#ctor(System.String,com.quinncurtis.rtgraphnet.RTProcessVar[])">
            <summary>
             This constructor creates a new RTMultiProcessVar object.
            </summary>
             <param name= "tagname"> A string representing the tag name of the process variable.</param>
             <param name= "processvars"> An array of the process variables to add to the RTMultiProcessVar. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.AddProcessVar(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             This method adds a new RTProcessVar object to the RTMultiProcessVar object.
            </summary>
             <param name= "pv"> The RTProcessVar object to add.</param>
            <returns> Returns the current count of RTProcessVar objects in this RTMultiProcessVar object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.ResetProcessVar">
            <summary>
             Clears the process variable list.
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.Clone">
            <summary>
             Returns an object that is a Clone of this RTMultiProcessVar object. 
            </summary>
            <returns> Returns a Clone of this RTMultiProcessVar object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.Copy(com.quinncurtis.rtgraphnet.RTMultiProcessVar)">
            <summary>
             Copies the source object.
            </summary>
             <param name="source"> The source object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.ErrorCheck(System.Int32)">
            <summary>
             Checks the current object for common errors.
            </summary>
             <param name="nerror"> Current error state</param>
             <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.GetCalendarTimeStamp">
            <summary>
              Returns the process variable time stamp value as a ChartCalendar object.
            </summary>    
             <returns> Returns the process variable time stamp value as a ChartCalendar object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.GetProcessVar(System.Int32)">
            <summary>
              Returns the RTProcessVariable in the processVarList at the specified index.
            </summary>    
             <returns> Returns the RTProcessVariable in the processVarList at the specified index.</returns>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.GetProcessVarDataset(System.Int32)">
            <summary>
              Returns the TimeSimpleDataset of the RTProcessVariable in the processVarList at the specified index.
            </summary>    
             <returns> Returns the TimeSimpleDataset of the RTProcessVariable in the processVarList at the specified index.</returns>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.SetCurrentValue(System.Double,System.Double[])">
            <summary>
             Update the current values of the process variables, and the associated datasets, if they exit and the 
             datasetEnableUpdate property is true. Alarms are checked and the alarm events invoked if enabled.
            </summary>
             <param name= "timestamp"> The time stamp, in milliseconds, for the process variable.</param>
             <param name= "pv"> An array values for the process variables. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.GetGroupDataset">
            <summary>
             This method assembles and returns TimeGroupDataset out of the TimeSimpleDatasets in the processVarList 
             collection. The advantage of a TimeGroupDataset is that the time stamp values are included only once, 
             in the first column, the other columns represent the data values for the associated process variable.
            </summary>
             <returns> Returns a TimeGroupDataset assembled out of the TimeSimpleDatasets in the processVarList 
             collection.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.GetProcessVarArray">
            <summary>
             Returns the internal RTProcessVar collection as a simple array of RTProcessVar objects.
            </summary>
             <returns> Returns the internal RTProcessVar collection as a simple array of RTProcessVar objects.</returns>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.SetCurrentValue(System.Double[])">
            <summary>
             Update the current values of the process variables, and the associated datasets, if they exist and the 
             datasetEnableUpdate property is true. The current TOD is used as the time stamp. Alarms are checked and 
             the alarm events invoked if enabled.
            </summary>
             <param name= "pv"> An array values for the process variables. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiProcessVar.SetCurrentValue(com.quinncurtis.chart2dnet.ChartCalendar,System.Double[])">
            <summary>
             Update the current values of the process variables, and the associated datasets, if they exist and the 
             datasetEnableUpdate property is true. The gv ChartCalendar value is used as the time stamp. Alarms are 
             checked and the alarm events invoked if enabled.
            </summary>
             <param name= "gv"> The time stamp for the process variable.</param>
             <param name= "pv"> An array values for the process variables. </param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.CurrentValue">
            <summary>
              Get an array of the process variable current values.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.TimeStamp">
            <summary>
              Get the time stamp value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.PrevTimeStamp">
            <summary>
              Get the previous time stamp value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.PrevCurrentValue">
            <summary>
              Get an array of the process variables previous current values.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.TagName">
            <summary>
              Get/Set the multi-process variable tag string.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.UniqueIdentifier">
            <summary>
              Get/Set the multi-process variable uniqueIdentifier string. This is unique to the multi-process object
              and does not affect the same property of the RTProcessVar objects stored within.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.ShortDescription">
            <summary>
              Get/Set the multi-process variable shortDescription string. This is unique to the multi-process object
              and does not affect the same property of the RTProcessVar objects stored within.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.DetailedDescription">
            <summary>
              Get/Set the mult-process variable detailedDescription string. This is unique to the multi-process object
              and does not affect the same property of the RTProcessVar objects stored within.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.ProcessVarList">
            <summary>
              Get the multi-process variable dataset list. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.DatasetEnableUpdate">
            <summary>
              Get/Set the enable flag for the process variable dataset. If this is enabled, ALL
              of the internal RTProcessVar objects have their DataEnableUpdate flags set to the same value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.AutoTruncateDataset">
            <summary>
            Set to true and updates of the all of the chart datasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the dataset
            to autoTruncateMinCount. In order for the RTMultiProcessVar auto-truncate to work, the
            internal RTProcessVar objects must be updated using one of the RTMultiProcessVar.SetCurrentValue methods, 
            and NOT updated on an individual basis.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.AutoTruncateMaxCount">
            <summary>
            If the autoTruncate flag is true updates of the datasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount. In order for the RTMultiProcessVar auto-truncate to work, the
            internal RTProcessVar objects must be updated using one of the RTMultiProcessVar.SetCurrentValue methods, 
            and NOT updated on an individual basis.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.AutoTruncateMinCount">
            <summary>
            If the autoTruncate flag is true updates of the datasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount. In order for the RTMultiProcessVar auto-truncate to work, the
            internal RTProcessVar objects must be updated using one of the RTMultiProcessVar.SetCurrentValue methods, 
            and NOT updated on an individual basis.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.Count">
            <summary>
            If the autoTruncate flag is true updates of the datasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount. In order for the RTMultiProcessVar auto-truncate to work, the
            internal RTProcessVar objects must be updated using one of the RTMultiProcessVar.SetCurrentValue methods, 
            and NOT updated on an individual basis.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiProcessVar.Item(System.Int32)">
            <summary>
              This accessor is the indexer for the class and get/sets the value of a RTProcessVar object in the 
              processVarList collection, 
            
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMultiValueIndicator">
            <summary>
            Summary description for RTMultiValueIndicator.
            The RTMultiValueIndicator class manages and displays indicator plot types that reference one or more 
            process variables.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.rtDataSource">
            <summary>
             An array of the RTProcessVar objects that are displayed in the multi-value indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.alarmIndicatorColorMode">
            <summary>
             Specifies whether the color of the indicator objects changes on an alarm. Use one of the constants:
             RT_INDICATOR_COLOR_NO_ALARM_CHANGE, RT_INDICATOR_COLOR_CHANGE_ON_ALARM.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTMultiValueIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMultiValueIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.Copy(com.quinncurtis.rtgraphnet.RTMultiValueIndicator)">
            <summary>
             Copies the source RTMultiValueIndicator object.
            </summary>
             <param name= "source"> The source RTMultiValueIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.GetCurrentProcessValues">
            <summary>
             Returns an array containing the current values of the process variables in the RTMultiValueIndicator object.
             <returns> Returns an array containing the current values of the process variables n the 
             RTMultiValueIndicator object. </returns>
             </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.#ctor">
            <summary>
              The default RTMultiValueIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.CheckValidPoint(System.Double,System.Double,System.Boolean)">
            <summary>
             Returns true if the current value and time stamp for a process variable are valid.
             <param name= "x">  The current x, or time stamp value </param>
             <param name= "y">  The current y, or process variable </param>
             <param name= "valid">  The valid flag for the data point. </param>
             <returns> Returns true if the current value and time stamp for a process variable are valid. </returns>
             </summary>		  
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.AddProcessVar(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             Adds a process variable to the list of process variables.
             <param name= "pv">  Add the process variable to the list of process variables. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.ResetProcessVar">
            <summary>
             Clears the process variable list.
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.SetRTDataSource(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             Replaces the primaryChannel of the RTProcessVar array list with the specified process variable.
             <param name= "pv">  An array of RTProcessVar objects that create the rtDataSource array list. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.SetRTDataSource(com.quinncurtis.rtgraphnet.RTProcessVar[])">
            <summary>
             Sets the rtDataSource array list of RTProcessVar objects for the indicator.
             <param name= "pv">  An array of RTProcessVar objects that create the rtDataSource array list. </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.GetDataset(System.Int32)">
            <summary>
             Returns a reference to the dataset associated with specific process variable for the indicator.
             <param name= "channel">  The channel, or index of the process variable in rtDataSource array list. </param>
             <returns> Returns a reference to a specific process variable for the indicator. </returns>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.MakeMultiValueAttribArray(com.quinncurtis.chart2dnet.ChartAttribute[],System.Int32)">
            <summary>
             Returns an array of default attributes for a specified number of channels.
             <param name= "attribs"> Returns an array of attributes </param>
             <param name= "nchannels"> Specifies the number of channels to return.  </param>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.GetDataset">
            <summary>
             Returns a reference to the dataset associated with the primary process variable for the indicator.
             <returns> Returns a reference to the primary process variable for the indicator. </returns>
             </summary>			
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.GetRTProcessVar">
            <summary>
             Returns a reference to the primary process variable for the indicator.
             <returns> Returns a reference to the primary process variable for the indicator. </returns>
             </summary>			
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.GetRTProcessVar(System.Int32)">
            <summary>
             Returns a reference to a specific process variable for the indicator.
             <param name= "channel">  The channel, or index of the process variable in rtDataSource array list. </param>
             <returns> Returns a reference to a specific process variable for the indicator. </returns>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.CalcBarRect(System.Double,System.Double,com.quinncurtis.chart2dnet.Rectangle2D)">
            <summary>
             Calculates the Rectangle2D shape used to draw a single bar.
             <param name= "x">  The position of the bar in units of the independent axis. </param>
             <param name= "y">  The maximum value of the bar in units of dependent axis. </param>
             <param name= "rect">  Returns the shape of the bar as a Rectangle2D object. </param>
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.RTDataSource">
            <summary>
             Get/Set the array list holding the RTProcessVar variables for the indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.CurrentProcessValue">
            <summary>
             Get the current process value of the primary channel.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueIndicator.AlarmIndicatorColorMode">
            <summary>
             Get/Set whether the color of the indicator objects changes on an alarm. Use one of the constants:
             RT_INDICATOR_COLOR_NO_ALARM_CHANGE, RT_INDICATOR_COLOR_CHANGE_ON_ALARM..
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator">
            <summary>
            An RTMultiValueAnnunciator is used to display the current values and alarm states of a collection of 
            RTProcessVar objects. It consists of a rectangular grid with individual channels represented by the rows and 
            columns in of the grid. Each grid cell can contain the tag name, units, current value, and alarm status message 
            for a single RTProcessVar object. Any of these items may be excluded. If a channel is in alarm, the background 
            of the corresponding cell changes its color, giving a strong visual indication that an alarm has occurred.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.numberRows">
            <summary>
            Specifies the number of rows in the annunciator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.numberColumns">
            <summary>
            Specifies the number of columns in the annunciator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.cellRowMargin">
            <summary>
            Specifies the extra space between rows of the annunciator, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.cellColumnMargin">
            <summary>
            Specifies the extra space between columns of the annunciator, specified in normalized 
            NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.annunCellList">
            <summary>
            Holds an array list of RTAnnunciator objects.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.frame3DEnable">
            <summary>
             Enables drawing of the annunciator rectangle.
            </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTMultiValueAnnunciator object for common errors.
             </summary>		
              <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.InitDefaults">
            <summary>
             Initializes default values for the RTMultiValueAnnunciator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.Copy(com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator)">
            <summary>
              Copies the source RTMultiValueAnnunciator object. 
            </summary>
            <param name="source"> The source RTMultiValueAnnunciator object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.Clone">
            <summary>
             Returns an object that is a clone of this RTMultiValueAnnunciator object. 
            </summary>
            <returns> Returns a clone of this RTMultiValueAnnunciator object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.#ctor">
            <summary>
              The default constructor for the RTMultiValueAnnunciator class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates an RTGroupMultiValuePlot referencing the specified coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTGroupMultiValuePlot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTMultiValueAnnunciator object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTMultiValueAnnunciator object. </param>
            <param name="datasource"> An array of RTProcessVar objects, one for each annunciator cell. </param>
            <param name="attrib"> A single attribute object that applies to all annunciator cells. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],com.quinncurtis.chart2dnet.ChartAttribute[])">
            <summary>
              This constructor creates a new RTMultiValueAnnunciator object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTMultiValueAnnunciator object. </param>
            <param name="datasource"> An array of RTProcessVar objects, one for each annunciator cell. </param>
            <param name="attribs"> An array of the color attributes, one for each annunciator cell. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar[],System.Int32,System.Int32,com.quinncurtis.chart2dnet.ChartAttribute[])">
            <summary>
              This constructor creates a new RTMultiValueAnnunciator object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTMultiValueAnnunciator object. </param>
            <param name="datasource"> An array of RTProcessVar objects, one for each annunciator cell. </param>
            <param name="numcols"> The number of columns in the annunciator display. </param>
            <param name="numrows"> The number of rows in the annunciator display. </param>
            <param name="attribs"> An array of the color attributes, one for each annunciator cell. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTMultiProcessVar,System.Int32,System.Int32,com.quinncurtis.chart2dnet.ChartAttribute[])">
            <summary>
              This constructor creates a new RTMultiValueAnnunciator object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTMultiValueAnnunciator object. </param>
            <param name="datasource"> An RTMultiProcessVar object that contains a collection of the RTProcessVar 
            objects associated with each cell of the annunciator. </param>
            <param name="numcols"> The number of columns in the annunciator display. </param>
            <param name="numrows"> The number of rows in the annunciator display. </param>
            <param name="attribs"> An array of the color attributes, one for each annunciator cell. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.CalcAnnunciatorRect(System.Int32,System.Double,System.Double)">
            <summary>
              Calculates the cell dimensions of a RTMultiValueAnnunciator cell.  
            </summary>
            <param name="i"> The index of the annunciator cell.</param>
            <param name="cellwidth"> The width of the annunciator cell.</param>
            <param name="cellheight"> The height of the annunciator cell.</param>
             <returns> Returns the annunciator cell rectangle. </returns>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.DrawRTMultiValueAnnunciator(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the RTMultiValueAnnunciator indicator.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.CreateMultiValueAnnunciator">
            <summary>
              Create the RTMultiValueAnnunciator indicator.  
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the annunciator cells. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the annunciator cells.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.NumberRows">
            <summary>
              Get the number of rows in the annunciator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.NumberColumns">
            <summary>
              Get the number of rows in the annunciator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.CellRowMargin">
            <summary>
              Get/Set the extra space between rows of the annunciator, specified in normalized NORM_PLOT_POS coordinates.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.CellColumnMargin">
            <summary>
              Get/Set the extra space between columns of the annunciator, specified in normalized NORM_PLOT_POS 
              coordinates.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.Frame3DEnable">
            <summary>
             Set/Get to true to enable drawing of the annunciator rectangle.
            </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTMultiValueAnnunciator.GetAnnunCell(System.Int32)">
            <summary>
              Returns the RTAnnunciator object associcated with the specified RTMultiValueAnnunciator index 
            </summary>
            <param name="value"> The index of the RTMultiValueAnnunciator cell </param>
            <returns> Returns the RTAnnunciator object associcated with the specified RTMultiValueAnnunciator index</returns>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTNumericPanelMeter">
            <summary>
            Displays the floating point numeric value of an RTProcessVar object. It contains a template based on the 
            QCChart2D NumericLabel class that is used to specify the font and numeric format information associated with 
            the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.numericTemplate">
            <summary>
            The NumericLabel template for the panel meter numeric value. All of the text properties associated with
            the panel meter are set using this property. In addition, the format of the numeric value and
             the number of digits to the right of the decimal point is also set here.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.textframe">
            <summary>
            The RTTextFrame is used to display the panel meter text, framing the text using a 3D beveled border.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTNumericPanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.#ctor">
            <summary>
             The default RTNumericPanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.Copy(com.quinncurtis.rtgraphnet.RTNumericPanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.Clone">
            <summary>  Returns an object that is a Clone of this RTNumericPanelMeter object.
            </summary>
            <returns> Returns a Clone of this RTNumericPanelMeter object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTNumericPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTNumericPanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTNumericPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTNumericPanelMeter object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTNumericPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTNumericPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.CalcValueFrameMinWidth(System.Drawing.Graphics,System.Double,System.Double)">
            <summary>
             Calculates the minimum frame width to use in in displaying numeric values in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
             <param name= "minvalue"> The minimum value that will be displayed. </param>
             <param name= "maxvalue">  The maximum value that will be displayed. </param>  
              <returns> The minimum frame width to use in in displaying numeric values in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.SetResizeMultiplier(System.Double)">
            <summary>
             Sets the resize multiplier used by the RTPanelMeter object. 
            </summary>
            <param name="multiplier"> Sets the resize multiplier used by the object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.NumericTemplate">
            <summary>
             Set/Get the NumericLabel template for the panel meter numeric value. All of the text properties associated 
             with the panel meter are set using this property. In addition, the format of the numeric value and
              the number of digits to the right of the decimal point is also set here.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.TextColor">
            <summary>
             Set/Get the text color of the panelmeter.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTNumericPanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the NumericLabel template.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTPanelMeter">
            <summary>
            The abstract base class for the panel meter types. Panel meters based objects can be added to 
            RTSingleValueIndicator and RTMultiValueIndicator objects to enhance the graphics display with numeric, 
            alarm and string information. The RTNumericPanelMeter, RTAlarmPanelMeter, RTStringPanelMeter and  
            RTTimePanelMeter classes are described in the preceding section.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.panelMeterPosition">
            <summary>
             Holds the panel meter position value. Use one of the panel meter position constants:
             CUSTOM_POSITION, CENTERED_BAR, INSIDE_INDICATOR,
             OUTSIDE_BAR, INSIDE_BAR, INSIDE_BARBASE, OUTSIDE_BARBASE,
             RADIUS_BOTTOM, RADIUS_TOP, RADIUS_LEFT, RADIUS_RIGHT, RADIUS_CENTER, OUTSIDE_RADIUS_BOTTOM, 
             INSIDE_RADIUS_BOTTOM, CENTER_RADIUS_BOTTOM, OUTSIDE_RADIUS_TOP, INSIDE_RADIUS_TOP, CENTER_RADIUS_TOP, 
             BELOW_REFERENCED_TEXT, ABOVE_REFERENCED_TEXT, RIGHT_REFERENCED_TEXT, LEFT_REFERENCED_TEXT,
             BELOW_CENTERED_PLOTAREA, ABOVE_CENTERED_PLOTAREA, LEFT_CENTERED_PLOTAREA, RIGHT_CENTERED_PLOTAREA,
             GRAPHAREA_TOP, GRAPHAREA_BOTTOM.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.panelMeterRectangle">
            <summary>
             Holds the panel meter bounding rectangle.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.frame3DEnable">
            <summary>
             True enables the 3D frame for the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.rtPlotObj">
            <summary>
             Specifies the RTPlot object associated with the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.panelMeterMinWidth">
            <summary>
             Holds the panel meter minimum width.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.indicatorRect">
            <summary> Indicator positioning rect.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.panelMeterPositionReference">
            <summary> 
            Specifies the RTPanelMeter object used to position this RTPanelMeter object. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.chartTextPositionReference">
            <summary> 
            Specifies the ChartText object used to position this RTPanelMeter object. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.positionReference">
            <summary> 
            Specifies the ChartText object used to position this RTPanelMeter object. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.panelMeterNudge">
            <summary>
             The panel meter position can be moved relative (nudged), using window device coordinates,  
             relative to the specified location of the text.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.panelMeterChannel">
            <summary>
             The channel number associated with a specific drawing of an panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.contrastTextAlarmColor">
            <summary>
             A contrast color to use for text when the object is in alarm, and the background color of 
             the panel meter changes.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPanelMeter.defaultTextBrightnessColor">
            <summary>
             The default brightness value to use when deciding whether to set the default color to Black or SpringGreen.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTPanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.InitDefaultTextColors">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.#ctor">
            <summary>
             The default RTPanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.Copy(com.quinncurtis.rtgraphnet.RTPanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTPanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.SetPositionReference(com.quinncurtis.rtgraphnet.RTPanelMeter)">
            <summary> This method sets the positioning reference rectangle to the referenced 
            RTPanelMeter.PanelMeterRectangle rectangle.
            </summary>		 
             <param name= "panelreference"> The reference panel meter. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.SetPositionReference(com.quinncurtis.chart2dnet.ChartText)">
            <summary> This method sets the positioning reference rectangle to the referenced ChartText bounding box.
            </summary>		 
             <param name= "textreference"> The reference panel meter. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.CalcTextPosition(System.Drawing.Graphics,com.quinncurtis.chart2dnet.ChartText,com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.Rectangle2D)">
            <summary> This method justifies the datapoint text against the associated bar, and
             draws it to the specified graphics context.
            </summary>		 
             <param name= "g2"> The graphics context. </param>
             <param name= "paneltemplate"> The ChartText object used as the template for the panel meter. </param>
             <param name= "datapointpos"> The x- and y-position, in physical coordinates, of the
             datapoint value. </param>
             <param name= "barrect"> The positioning rectangle for the panel meter text. </param>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.InitRTPanelMeter(com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This method initializes the RTPanelMeter object.
            </summary> 
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.InitRTPanelMeter(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This method initializes the RTPanelMeter object.
            </summary> 
            <param name="transform"> The coordinate system for the new RTPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the panel meter rectangle. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the panel meter rectangle.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.RTPlotObj">
            <summary>
             Set/Get the reference RTPlot object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PanelMeterPosition">
            <summary>
             Set/Get the panel meter position value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.Frame3DEnable">
            <summary>
             Set/Get to true to enable a 3D frame for the panel meter.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PanelMeterRectangle">
            <summary>
             Set/Get the  panel meter bounding rectangle.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PositionReference">
            <summary>
             Set/Get a RTPanelMeter object used as a positioning reference for this RTPanelMeter object.
             Use one of the panel meter position constants:
             CUSTOM_POSITION, CENTERED_BAR, INSIDE_INDICATOR,
             OUTSIDE_INDICATOR, INSIDE_INDICATOR, INSIDE_BARBASE, OUTSIDE_BARBASE,
             RADIUS_BOTTOM, RADIUS_TOP, RADIUS_LEFT, RADIUS_RIGHT, RADIUS_CENTER, OUTSIDE_RADIUS_BOTTOM,
              INSIDE_RADIUS_BOTTOM, CENTER_RADIUS_BOTTOM, OUTSIDE_RADIUS_TOP, INSIDE_RADIUS_TOP, CENTER_RADIUS_TOP, 
             BELOW_REFERENCED_TEXT, ABOVE_REFERENCED_TEXT, RIGHT_REFERENCED_TEXT, LEFT_REFERENCED_TEXT,
             BELOW_CENTERED_PLOTAREA, ABOVE_CENTERED_PLOTAREA, LEFT_CENTERED_PLOTAREA, RIGHT_CENTERED_PLOTAREA,
             GRAPHAREA_TOP, GRAPHAREA_BOTTOM.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.IndicatorRect">
            <summary> Get/Set Indicator positioning rect.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PanelMeterNudge">
            <summary>
              Set/Get the xy values of the panelMeterNudge property.  The textNudge property moves the relative 
              position, using window device coordinates,  of the text relative to the specified location of the text. 
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PanelMeterMinWidth">
            <summary>
              Set/Get the minimum allowable width of the panel meter, forces uniform sizing of the panel meters. 
            </summary>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PanelMeterChannel">
            <summary>
             Get/Set the channel number associated with a specific drawing of an panel meter.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.ContrastTextAlarmColor">
            <summary>
             Set/Get a contrast color to use for text when the object is in alarm, and the background color of the 
             panel meter changes.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the panel meters template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPanelMeter.PanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the panel meters template.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTPIDControl">
            <summary>
            This class represents a simple control loop with support for proportional, integral and derivative control. 
            It includes advanced features for anti-reset windup, error term smoothing, error term reset and rate limiting of 
            control outputs. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.olderror">
            <summary>
             Holds previous error value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.newerror">
            <summary>
             Holds new error value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.e1">
            <summary>
             Holds error term t-1.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.e2">
            <summary>
             Holds error term t-2.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.e3">
            <summary>
             Holds error term t-3.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.sumerror">
            <summary>
             Holds sum of all previous errors .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.steadystate">
            <summary>
             Specifies steady state output position.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.setpoint">
            <summary>
             Specifies setpoint value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.proportionalConstant">
            <summary>
             Specifies proportional constant value
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.integralConstant">
            <summary>
             Specifies integral constant value
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.derivativeConstant">
            <summary>
             Specifies derivative constant value
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.samplePeriod">
            <summary>
             Specifies time between adjacent updatese.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.kp">
            <summary>
             Specifies proportional constant value
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.ki">
            <summary>
             Specifies integral constant value
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.kd">
            <summary>
             Specifies derivative constant value
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.highclamp">
            <summary>
             Specifies high clamping value for output .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.lowclamp">
            <summary>
             Specifies low clamping value for output .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.rateclamp">
            <summary>
             Specifies rate (first derivative of output) clamping value for output .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.mvfilter">
            <summary>
             Specifies exponential smoothing constant.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.lastmv">
            <summary>
             Holds previous exponential smoothing constant.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.lastpidvalue">
            <summary>
             Holds previous PID output value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPIDControl.pidtype">
            <summary>
             Specifies PID type. Use one of the PID type constants: RTPID_POSITIONCONTROL, RTPID_VELOCITYCONTROL .
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.Clone">
            <summary>
             Returns an object that is a Clone of this RTPIDControl object. 
            </summary>
            <returns> Returns a Clone of this RTPIDControl object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTPIDControl object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.InitDefaults">
            <summary>
             Initializes default values for the RTPIDControl object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.Copy(com.quinncurtis.rtgraphnet.RTPIDControl)">
            <summary>
              Copies the source RTPIDControl object. 
            </summary>
            <param name="source"> The source RTPIDControl object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.#ctor">
            <summary>
              The default constructor for the RTPIDControl class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
              This constructor creates a new instance of an RTPIDControl object, using the specified 
              parameters.
            </summary>
            <param name="setpnt">       Specifies the starting setpoint value </param>
            <param name="steadstat">    Specifies the steady state output value </param>
            <param name="prop">         Specifies the proportional gain constant </param>
            <param name="integ">        Specifies the integral gain constant </param>
            <param name="deriv">        Specifies the derivative gain constant </param>
            <param name="lowclmp">      Specifies the low clamping value for output </param>
            <param name="highclmp">     Specifies the high clamping value for output </param>
            <param name="rateclmp">     Specifies the rate of change clamp on output </param>
            <param name="sampleper">    Specifies the update sample period </param>
            <param name="filterconst">  Specifies the exponential smoothing constant. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
              This constructor creates a new instance of an RTPIDControl object, using the specified 
              parameters.
            </summary>
            <param name="setpnt">       Specifies the starting setpoint value </param>
            <param name="steadstat">    Specifies the steady state output value </param>
            <param name="prop">         Specifies the proportional gain constant </param>
            <param name="integ">        Specifies the integral gain constant </param>
            <param name="deriv">        Specifies the derivative gain constant </param>
            <param name="sampleper">    Specifies the update sample period </param>
            <param name="filterconst">  Specifies the exponential smoothing constant. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.RTResetErrorTerms">
            <summary>
              This method resets all of the error terms for the PID calculations.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.RTAdjustForBumplessError">
            <summary>
              This method calculates a new sumerror term that provides for bump-less transfer when
              any of the PID constant terms are changed.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.SetPIDParameters(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
              This method sets the parameters of a PID loop.
            </summary>
            <param name="ptype">  Specifies the  PID type. Use one of the PID type constants: RTPID_POSITIONCONTROL, RTPID_VELOCITYCONTROL . </param>
            <param name="setpnt">       Specifies the starting setpoint value </param>
            <param name="steadstat">    Specifies the steady state output value </param>
            <param name="prop">         Specifies the proportional gain constant </param>
            <param name="integ">        Specifies the integral gain constant </param>
            <param name="deriv">        Specifies the derivative gain constant </param>
            <param name="lowclmp">      Specifies the low clamping value for output </param>
            <param name="highclmp">     Specifies the high clamping value for output </param>
            <param name="rateclmp">     Specifies the rate of change clamp on output </param>
            <param name="sampleper">    Specifies the update sample period </param>
            <param name="filterconst">  Specifies the exponential smoothing constant. </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.UpdatePIDIntermediateParameters(System.Double,System.Double,System.Double,System.Double)">
            <summary>
              This method updates the intermediate values in the PID calculation.
            </summary>
            <param name="prop">         Specifies the proportional gain constant </param>
            <param name="integ">        Specifies the integral gain constant </param>
            <param name="deriv">        Specifies the derivative gain constant </param>
            <param name="sampleper">    Specifies the sample period value </param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.RTCalcPosPID(System.Double,System.Double)">
            <summary>
              This method performs a PID loop calculation using the position algorithm.
            </summary>
            <param name="currentval">  Specifies the current value of the measured variable of the process. </param>
            <param name="setpnt">      Specifies the the setpoint of the process. </param>
            <returns>    Returns the control output value, in the same units as the input values. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.RTCalcVelPID(System.Double,System.Double)">
            <summary>
              This method performs a PID loop calculation using the velocity algorithm.
            </summary>
            <param name="currentval">  Specifies the current value of the measured variable of the process. </param>
            <param name="setpnt">      Specifies the the setpoint of the process. </param>
            <returns>    Returns the control output value, in the same units as the input values. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPIDControl.RTCalcPID(System.Double,System.Double)">
            <summary>
              This method performs a PID loop calculation.
            </summary>
            <param name="currentval">  Specifies the current value of the measured variable of the process. </param>
            <param name="setpnt">      Specifies the the setpoint of the process. </param>
            <returns>    Returns the control output value, in the same units as the input values. </returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.OldError">
            <summary>
             Set/Get previous error value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.NewError">
            <summary>
             Set/Get  new error value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.E1">
            <summary>
             Set/Get  error term t-1.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.E2">
            <summary>
             Set/Get  error term t-2.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.E3">
            <summary>
             Set/Get  error term t-3.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.SumError">
            <summary>
             Set/Get  sum of all previous errors .
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.SteadyState">
            <summary>
             Set/Get  steady state output position.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.SetPoint">
            <summary>
             Set/Get  setpoint value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.SamplePeriod">
            <summary>
             Set/Get  time between adjacent updatese.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.ProportionalConstant">
            <summary>
             Set/Get  proportional constant value
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.IntegralConstant">
            <summary>
             Set/Get  integral constant value
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.DerivativeConstant">
            <summary>
             Set/Get  derivative constant value
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.HighClamp">
            <summary>
             Set/Get  high clamping value for output .
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.LowClamp">
            <summary>
             Set/Get  low clamping value for output .
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.RateClamp">
            <summary>
             Set/Get  rate (first derivative of output) clamping value for output .
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.MvFilter">
            <summary>
             Set/Get  exponential smoothing constant.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.LastMv">
            <summary>
             Set/Get  previous exponential smoothing constant.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.LastPIDValue">
            <summary>
             Set/Get  previous PID output value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPIDControl.PIDType">
            <summary>
             Set/Get  PID type. Use one of the PID type constants: RTPID_POSITIONCONTROL, RTPID_VELOCITYCONTROL .
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTPlot">
            <summary>
            The abstract base class for the RTSingleValueIndicator and RtMultiValueIndicator classes. Through
            them it provides an abstract base class for all the indicator classes.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPlot.barSpacing">
            <summary> Specifies the spacing between adjacent items in multi-channel plots.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPlot.primaryChannel">
            <summary> Specifies the primary channel in a multi-channel plots.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPlot.numChannels">
            <summary> Specifies the number of channels in a multi-channel plots.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTPlot.panelMeterList">
            <summary> An array holding the panel meter objects used by the RT plot.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.InitDefaults">
            <summary>
             Initializes default values for the plot object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.ErrorCheck(System.Int32)">
            <summary>
             Checks the plot object for common errors.
            </summary>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.Copy(com.quinncurtis.rtgraphnet.RTPlot)">
            <summary>
             Copies the source plot object.
            </summary>
             <param name= "source"> The source plot object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.#ctor">
            <summary>
             The default RTPlot constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetRTProcessVar">
            <summary>
             An abstract method that returns the primary RTProcessVar object associated with this plot object. 
            </summary>
            <returns> Returns the RTProcessVar object associated with this plot object. </returns>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetRTProcessVar(System.Int32)">
            <summary>
             Returns the RTProcessVar object associated with a specific channel in this plot object. 
            </summary>
            <param name="channel"> Specifies the specific channel in this plot object.  </param>
            <returns> Returns the RTProcessVar object associated with a specific channel in this plot object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentProcessValue(System.Int32)">
            <summary>
             Returns the current process value of the RTProcessVar object associated with a specific channel 
             in this plot object. 
            </summary>
            <param name="channel"> Specifies the specific channel in this plot object.  </param>
            <returns> Returns the current process value of the RTProcessVar object associated with a specific 
            channel in this plot object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentProcessValue">
            <summary>
             Returns the current process value of the primary RTProcessVar object associated with this plot object. 
            </summary>
            <returns> Returns the current process value of the RTProcessVar object associated with this plot object. </returns>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentProcessTimeValue(System.Int32)">
            <summary>
             Returns the current process time value of the primary RTProcessVar object associated with this plot object. 
            </summary>
            <param name="channel"> Specifies the specific channel in this plot object.  </param>
            <returns> Returns the current process time value of the RTProcessVar object associated with this plot object. </returns>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentProcessElapsedTimeValue(System.Int32)">
            <summary>
             Returns the current process elapsed time value of the primary RTProcessVar object associated with this plot object. 
            </summary>
            <param name="channel"> Specifies the specific channel in this plot object.  </param>
            <returns> Returns the current process elapsed time value of the RTProcessVar object associated with this plot object. </returns>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentProcessElapsedTimeValue">
            <summary>
             Returns the current process elapsed time value of the primary RTProcessVar object associated with this plot object. 
            </summary>
            <returns> Returns the current process elapsed time value of the RTProcessVar object associated with this plot object. </returns>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentProcessTimeValue">
            <summary>
             Returns the current process time value of the primary RTProcessVar object associated with this plot object. 
            </summary>
            <returns> Returns the current process time value of the RTProcessVar object associated with this plot object. </returns>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.SortAlarmObjectsByValue(System.Int32)">
            <summary>
             This method sorts the alarm RTAlarm objects of the specific RTProcessVar. 
            </summary>
            <param name="channel"> Specifies the specific channel in this plot object.  </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetAlarmSymbolColor(System.Int32,System.Double)">
            <summary>
             This method checks to see if a channel is is in alarm and retrieves the alarm symbol color appropriate 
             to the alarm state.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <param name="pvalue"> Specifies the value to check.  </param>
            <returns> Returns the appropriate symbol color for the alarm state . </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetAlarmFillColor(System.Int32,System.Double)">
            <summary>
             This method checks to see if a channel is is in alarm and retrieves the alarm fill color appropriate 
             to the alarm state.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <param name="pvalue"> Specifies the value to check.  </param>
            <returns> Returns the appropriate fill color for the alarm state . </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetAlarmTextColor(System.Int32,System.Double,System.Drawing.Color)">
            <summary>
             This method checks to see if a channel is is in alarm and retrieves the alarm text color appropriate to 
             the alarm state.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <param name="pvalue"> Specifies the value to check.  </param>
            <param name="defaulttextcolor"> Specifies the default text color to use if there is no alarm.  </param>
            <returns> Returns the appropriate text color for the alarm state . </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetChannelAlarm(System.Int32,System.Double)">
            <summary>
             This method checks to see if a channel is is in alarm and retrieves the RTAlarm object associated with that 
             alarm state.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <param name="pvalue"> Specifies the value to check.  </param>
            <returns> Returns the RTAlarm object associated with that alarm state . </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetSetpointString(System.Int32)">
            <summary>
             This method checks to see if a channel has a setpoint RTAlarm object, and returns the alarm message if found.
             This is not an alarm, just a message associated with the setpoint. If found, it will override the default
             text displayed in the alarm message area.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <returns> Returns the alarm message associated with the channel setupoint alarm. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetAlarmString(System.Int32,System.Double)">
            <summary>
             This method checks to see if a channel is is in alarm and retrieves the alarm message string associated w
             ith that alarm state.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <param name="pvalue"> Specifies the value to check.  </param>
            <returns> Returns the alarm message string associated with that alarm state . </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetCurrentAlarm(System.Int32,System.Double)">
            <summary>
             This method checks to see if a channel is is in alarm and retrieves the index of the alarm in the sorted 
             alarm list.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
            <param name="pvalue"> Specifies the value to check.  </param>
            <returns>Returns the index of the alarm in the sorted alarm list. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetChannelTagString(System.Int32)">
            <summary> Returns the tag string associated with the speciric channel.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
              <returns> Returns the tag string associated with the speciric channel. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetChannelUnitsString(System.Int32)">
            <summary> Returns the units string associated with the speciric channel.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
              <returns> Returns the units string associated with the speciric channel. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetChannelAlarmString(System.Int32)">
            <summary> Returns the alarm string associated with the speciric channel.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
              <returns> Returns the alarm string associated with the speciric channel. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetChannelNumericValue(System.Int32)">
            <summary> Returns the process variable numeric value associated with the speciric channel.
            </summary>
            <param name="channel"> Specifies the channel in this plot object.  </param>
              <returns> Returns the process variable numeric value associated with the speciric channel. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetNumSegments(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Calculates the number of segments to display in segmented indicators.
            </summary>		 
             <param name= "baseline"> The base line of the indicator.  </param>
             <param name= "newvalue"> The new display value of the indicator.  </param>
             <param name= "segmentspacing"> The segment spacing of the indicator.  </param>
             <param name= "mode"> The segment rounding mode of the indicator.  </param>
              <returns> The number of segments to display.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.DrawRTIndicatorStrings(System.Drawing.Graphics,System.Int32,com.quinncurtis.chart2dnet.Rectangle2D)">
            <summary>
             This method draws all of the auxiliary text (tags, units, alarms and numeric values)for an indicator.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
            <param name="channel"> Specifies the channel in this plot object.  </param>
             <param name= "barrect"> The rectangle of the bar. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.DrawEndOfPlotLine(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Double,System.Int32)">
            <summary>
             This method draws a line marking the end of the current plot.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
            <param name="path"> A reference to the current GraphicsPath object. </param>
            <param name="xvalue"> The x-value of the last point in the plot.  </param>
            <param name="yvalue"> The y-value of the last point in the plot.  </param>
             <param name= "markertype"> The marker type of the end of line marker. Use one of the marker constants:
             MARKER_NULL, MARKER_VLINE, MARKER_HLINE, MARKER_CROSS,  MARKER_BOX or MARKER_HVLINE.
              </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetMinRTPlotValue">
            <summary>
             Returns the minimum scaling value to used in determining the minimum displayable numeric values. If the bar
             orientation is HORIZ_DIR the method returns the scales minimum x-value, otherwise the minimum y-value 
             is returned.
            </summary>		 
              <returns> Returns the minimum scaling value.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.GetMaxRTPlotValue">
            <summary>
             Returns the maximum scaling value to used in determining the maximum displayable numeric values. If the bar
             orientation is HORIZ_DIR the method returns the scales maximum x-value, otherwise the maximum y-value 
             is returned.
            </summary>		 
              <returns> Returns the minimum scaling value.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.AddPanelMeter(com.quinncurtis.rtgraphnet.RTPanelMeter)">
            <summary>
             Adds a panel meter display to the current RT Plot.
            </summary>		 
             <param name= "panel"> Add this RTPanelMeter object to the panelMeterList. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.SetResizeMultiplier(System.Double)">
            <summary>
             Sets the resize multiplier used by the RTPlot object. 
            </summary>
            <param name="multiplier"> Sets the resize multiplier used by the object.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPlot.BarSpacing">
            <summary> Set/Get the spacing between adjacent items in multi-channel plots.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPlot.PrimaryChannel">
            <summary> Set/Get the primary channel of the indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPlot.NumChannels">
            <summary> Get the number of channels in the indicator.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTPlot.PanelMeterList">
            <summary>
             Set/Get the panel meter list of the RT Plot.
            </summary>		 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTPlot.ResetPanelMeterList">
            <summary>
             Set/Get the panel meter list of the RT Plot.
            </summary>		 
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTAlarmEventDelegate">
            <summary>
            A delegate type for hooking up change notifications.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTDatasetTruncateDelegate">
            <summary>
            A delegate type for hooking up dataset truncate notifications.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTProcessVarUpdateDelegate">
            <summary>
            A delegate type for hooking up dataset update notifications.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTProcessVar">
            <summary>
            Real-time data is stored in RTProcessVar classes. The RTProcessVar class is designed to represent a single 
            process variable, complete with limit values, an unlimited number of high and low alarms, historical data  
            storage, and descriptive strings for use in displays.
            </summary>
        </member>
        <member name="E:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmStateEventHandler">
            <summary>
            Delegate for nodification each time the check of an process variable produces an alarm state condition.
            </summary>
        </member>
        <member name="E:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmTransitionEventHandler">
            <summary>
            Delegate for notification each time the check of an process variable produces a change of state in alarm 
            state condition.
            </summary>
        </member>
        <member name="E:com.quinncurtis.rtgraphnet.RTProcessVar.RTDatasetTruncateEventHandler">
            <summary>
            Delegate for notification each time the processVarDataset is automatically truncated.
            </summary>
        </member>
        <member name="E:com.quinncurtis.rtgraphnet.RTProcessVar.RTProcessVarUpdateEventHandler">
            <summary>
            Delegate for notification each time the processVarDataset is updated.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.processVarDataset">
            <summary>
            The historical dataset associated with a process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.goodValue">
            <summary>
            False signifies that that this process variable has a bad process variable value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.datasetEnableUpdate">
            <summary>
            Set true data is logged to the processVarDataset.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.currentValue">
            <summary>
            The current, most recently updated value, of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.timeStamp">
            <summary>
            The time stamp for the current, most recently updated value, of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.prevCurrentValue">
            <summary>
            The previous value of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.prevTimeStamp">
            <summary>
            The prevTimeStamp time stamp for of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.uniqueIdentifier">
            <summary>
            A string that can hold a unique identifier for the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.tagName">
            <summary>
            The identifying tag string for the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.shortDescription">
            <summary>
            A short description of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.detailedDescription">
            <summary>
            A detailed description of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.unitsString">
            <summary>
            The units string (Cent., Fahr., PSI, ...) of the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.minimumValue">
            <summary>
            The minimum allowable value for a process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.maximumValue">
            <summary>
            The maximum allowable value for a process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.defaultMinimumDisplayValue">
            <summary>
            The minimum allowable DISPLAY value for a process variable, used to scale initial axes in the 
            auto chart methods.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.defaultMaximumDisplayValue">
            <summary>
            The maximum allowable DISPLAY value for a process variable, used to scale initial axes in the 
            auto chart methods.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.accuracy">
            <summary>
            The accuracy of the process variable. Unused.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.alarmsSorted">
            <summary>
            True designates that the alarms have been sorted.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.alarmCheckEnable">
            <summary>
            Set to True to signify that alarms should checked.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.alarmStateEventEnable">
            <summary>
            Set to True to signify that any alarm should invoke the AlarmStateEventHandler.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.alarmTransitionEventEnable">
            <summary>
            Set to True to signify that any change in an alarm state should invoke the AlarmTransitionEventHandler.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.defaultAttribute">
            <summary>
            The default attribute for the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.alarmList">
            <summary>
            A list of RTAlarm objects associated with the process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.autoTruncateDataset">
            <summary>
            Set to true and updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.autoTruncateMaxCount">
            <summary>
            If the autoTruncate flag is true updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.autoTruncateMinCount">
            <summary>
            If the autoTruncate flag is true updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.autoScaleFlag">
            <summary>
            If the autoScaleFlag is true, auto-scaling based on this dataset is carried out by the RTScrollFrame class.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVar.yMode">
            <summary>
            If true, time value are stored as y-values, and process values are storeds as x-values.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmSort">
            <summary>
            A local class used to sort the alarm objects by the alarm limit value.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.OnAlarmStateEvent(com.quinncurtis.rtgraphnet.RTAlarm,System.Int32)">
            <summary>
            Invoked each time the check of a process variable produces an alarm state condition.
            </summary>
            <param name="alarm"> A reference to the alarm object that invoked the alarm event.</param>
            <param name="alarmindex"> The index of the alarm in the sorted alarm list.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.OnAlarmTransitionEvent(com.quinncurtis.rtgraphnet.RTAlarm,System.Int32)">
            <summary>
            Invoked each time the check of a process variable produces a change of the alarm state condition.
            </summary>
            <param name="alarm"> A reference to the alarm object that invoked the alarm event.</param>
            <param name="alarmindex"> The index of the alarm in the sorted alarm list.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.#ctor">
            <summary>
             The default RTProcessVar constructor.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.#ctor(System.String,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTProcessVar object.
            </summary>
             <param name= "tagname"> A string representing the tag name of the process variable.</param>
             <param name= "defaultattribute"> Specifies the default attributes for the process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.#ctor(com.quinncurtis.chart2dnet.TimeSimpleDataset,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTProcessVar object.
            </summary>
             <param name= "dataset"> A dataset that will be used to hold historical values for the process variable. The 
             tag name for the process variable will be taken from the ChartDataset.DataName property of the dataset.</param>
             <param name= "defaultattribute"> Specifies the default attributes for the process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.Clone">
            <summary>
             Returns an object that is a Clone of this RTProcessVar object. 
            </summary>
            <returns> Returns a Clone of this RTProcessVar object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.Copy(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             Copies the source object.
            </summary>
             <param name="source"> The source object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.ErrorCheck(System.Int32)">
            <summary>
             Checks the current object for common errors.
            </summary>
             <param name="nerror"> Current error state</param>
             <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetCalendarTimeStamp">
            <summary>
              Returns the process variable time stamp value as a ChartCalendar object.
            </summary>    
             <returns> Returns the process variable time stamp value as a ChartCalendar object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.UpdateDataset(System.Double,System.Double,System.Boolean)">
            <summary>
             Update the processVarDataset historical data, if one exists and the datasetEnableUpdate property is true.
            </summary>
             <param name= "timestamp"> The time stamp, in milliseconds, for the process variable.</param>
             <param name= "pv"> The value of the process variable. </param>
             <param name= "goodvalue"> False designates that the value is a bad value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.UpdateDataset(System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>
             Update the processVarDataset historical data, if one exists and the datasetEnableUpdate property is true.
            </summary>
             <param name= "index"> The index in the processVarDataset of the value to update.</param>
             <param name= "timestamp"> The time stamp, in milliseconds, for the process variable.</param>
             <param name= "pv"> The value of the process variable. </param>
             <param name= "goodvalue"> False designates that the value is a bad value. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetPVValue(com.quinncurtis.chart2dnet.Point2D)">
            <summary>
             Returns which double value in the Point2D object which represents the process value, taking into account the
             yMode.
            </summary>
             <param name= "p"> A Point2D object. </param>
             <result> Returns the process value. </result>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetTimeValue(com.quinncurtis.chart2dnet.Point2D)">
            <summary>
             Returns which double value in the Point2D object which represents the time value, taking into account the
             yMode.
            </summary>
             <param name= "p"> A Point2D object. </param>
             <result> Returns the time value. </result>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.SetCurrentValue(System.Double,System.Double)">
            <summary>
             Update the current value of the process variable, and the associated dataset, if one exists and the 
             datasetEnableUpdate property is true. Alarms are checked and the alarm events invoked if enabled.
            </summary>
             <param name= "timestamp"> The time stamp, in milliseconds, for the process variable.</param>
             <param name= "pv"> The value of the process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.SetCurrentValue(System.Double)">
            <summary>
             Update the current value of the process variable, and the associated dataset, if one exists and the 
             datasetEnableUpdate property is true. The current TOD is used as the time stamp. Alarms are checked and the 
             alarm events invoked if enabled.
            </summary>
             <param name= "pv"> The value of the process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.SetCurrentValue(System.TimeSpan,System.Double)">
            <summary>
             Update the current value of the process variable, and the associated dataset, if one exists and the 
             datasetEnableUpdate property is true. The current TOD is used as the time stamp. Alarms are checked and the 
             alarm events invoked if enabled.
            </summary>
             <param name= "ts"> The time stamp, as a TimeSpan value, for the process variable.</param>
             <param name= "pv"> The value of the process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.SetCurrentValue(com.quinncurtis.chart2dnet.ChartCalendar,System.Double)">
            <summary>
             Update the current value of the process variable, and the associated dataset, if one exists and the 
             datasetEnableUpdate property is true. The gv ChartCalendar value is used as the time stamp. Alarms are 
             checked and the alarm events invoked if enabled.
            </summary>
             <param name= "gv"> The time stamp for the process variable.</param>
             <param name= "pv"> The value of the process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.SetCurrentValue(System.DateTime,System.Double)">
            <summary>
             Update the current value of the process variable, and the associated dataset, if one exists and 
             the datasetEnableUpdate property is true. The gv DateTime value is used as the time stamp. Alarms are 
             checked and the alarm events invoked if enabled.
            </summary>
             <param name= "dt"> The time stamp for the process variable.</param>
             <param name= "pv"> The value of the process variable. </param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmSortedFlag">
            <summary>
              Get the process variable alarm sorted flag.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.SortAlarmObjectsByValue">
            <summary> This method sorts the objects in the chartObjectsVector array in
              the ascending value of their z-order.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.CalcAlarmTransition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
             Calculate the alarm transition.
            </summary>
             <param name= "alarmtype"> The alarm type. Use one of the alarm type constants: RT_ALARM_LOWERTHAN, 
             RT_ALARM_GREATERTHAN. </param>
             <param name= "alarmstate"> The current alarm state. </param>
             <param name= "prevalarmstate"> The previous alarm state. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.TransitionEventCondition(System.Int32)">
            <summary>
             Returns true if an alarm transition has taken place.
            </summary>
             <param name="transitionevent"> The current alarm transition. Use one of transition constants: 
             ALARM_TRANSITION_DECREASING_TO_LOW, ALARM_TRANSITION_INCREASING_FROM_LOW, ALARM_TRANSITION_INCREASING_TO_HIGH,
              ALARM_TRANSITION_DECREASING_FROM_HIGH, ALARM_TRANSITION_NONE_NORMAL.
             </param>
             <returns> Returns true if an alarm transition has taken place.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.CheckAlarms(System.Double)">
            <summary>
             Checks to see if an alarm exists and returns the index of the alarm in the alarmlist if any of the alarm
             conditions are true. Otherwise a -1 is returned.
            </summary>
             <param name="pvalue"> The value to use in checking alarms, usually the current process value. 
             </param>
             <returns> Returns the index of the alarm in the alarmlist if any of the alarm
             conditions are true. Otherwise a -1 is returned.</returns>
             		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.AddAlarm(com.quinncurtis.rtgraphnet.RTAlarm)">
            <summary>
             Adds an alarm to the alarm list.
            </summary>
             <param name="alarmobj"> A reference to the RTAlarm object that is to be added to the process 
             variables alarm list. 
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.AddCloneAlarm(com.quinncurtis.rtgraphnet.RTAlarm)">
            <summary>
             Adds a clone of an alarm to the alarm list.
            </summary>
             <param name="alarmobj"> A reference to the RTAlarm object that is cloned, then added to be added to the process 
             variables alarm list. Used when the RTAlarm object is used to initialize multiple RTProcessVar objects.
             </param>
             <returns> Returns the clone of the alarm, in case you want to change its properties. </returns>/// 
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.DeleteAlarm(com.quinncurtis.rtgraphnet.RTAlarm)">
            <summary> This method deletes the first instance of an RTAlarm from alarmList vector.
            </summary>
             <param name= "alarmobj"> The first instance of this object is deleted to the alarmList vector. </param>
             <returns> Returns true if the object is found, and deleted from the list. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetHistoryPoint(System.Int32)">
            <summary> Returns the x and y-values of a specific data point in the internal processVarDataset used 
            to store historical values for the process variable.
            </summary>
             <param name= "backcount"> The index from the END, not the beginning, of the values to be returned from   
             the processVarDataset. A value of 0 would correspond to the most recent value, or 
             processVarDataset[processVarDataset.NumberDatapoints-1]. </param>
             <returns> Returns the x and y-values of a specific data point in the internal processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetHistoryValue(System.Int32)">
            <summary> Returns the y-values of a specific data point in the internal processVarDataset used to store 
            historical values for the process variable.
            </summary>
             <param name= "backcount"> The index from the END, not the beginning, of the values to be returned from 
             the processVarDataset.  A value of 0 would correspond to the most recent value, or 
             processVarDataset[processVarDataset.NumberDatapoints-1]. </param>
             <returns> Returns the y-values of a specific data point in the internal processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetAverageHistoryValue(System.Int32)">
            <summary> Returns the average of the previous backcount y-values in the internal processVarDataset used 
            to store historical values for the process variable.
            </summary>
             <param name= "backcount"> The number of values, starting with the most recent, to be included in the  
             average. A value of 0 would correspond to the most recent value, or 
             processVarDataset[processVarDataset.NumberDatapoints-1]. </param>
             <returns>  Returns the average of the previous backcount y-values in the internal 
             processVarDataset used to store historical values for the process variable. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetMinTimeStampValue(System.Int32)">
            <summary> Returns the minimum time value, in milliseconds, within a specific range of values, starting 
            from the end of the processVarDataset.
            </summary>
             <param name= "backcount"> The index from the END, not the beginning, of the values to be 
             returned from the processVarDataset.  A value of 10 would correspond to the 
             processVarDataset[processVarDataset.NumberDatapoints-11]. </param>
             <returns> Returns the minimum time value, in milliseconds, within a specific range of values, 
             starting from the end of the processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetMaxTimeStampValue(System.Int32)">
            <summary> Returns the maximum time value, in milliseconds, within a specific range of values, starting 
            from the end of the processVarDataset.
            </summary>
             <param name= "backcount"> The index from the END, not the beginning, of the values to be 
             returned from the processVarDataset. A value of 10 would correspond to the 
             processVarDataset[processVarDataset.NumberDatapoints-11]. </param>
             <returns> Returns the maximum time value, in milliseconds, within a specific range of 
             values, starting from the end of the processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetMaxHistoryValue(System.Int32)">
            <summary> Returns the maximum process value value within a specific range of values, starting from 
            the end of the processVarDataset.
            </summary>
             <param name= "backcount"> The index from the END, not the beginning, of the values to be returned 
             from the processVarDataset.  A value of 10 would correspond to the 
             processVarDataset[processVarDataset.NumberDatapoints-11]. </param>
             <returns> Returns the maximum process value value within a specific range of values, starting from 
             the end of the processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetMaxHistoryValue(System.Double)">
            <summary> Returns the maximum process value value within a specific time range, starting from the 
            end of the processVarDataset.
            </summary>
             <param name= "mintimevalue"> The minimum value in terms of the time stamp, in milliseconds, 
             to use as a lower limit in the search for a maximum process value.  
              </param>
             <returns> Returns the maximum process value value within a specific time range, starting from the end of the processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetMinHistoryValue(System.Int32)">
            <summary> Returns the minimum process value value within a specific range of values, starting from the 
            end of the processVarDataset.
            </summary>
             <param name= "backcount"> The index from the END, not the beginning, of the values to be returned 
             from the processVarDataset.   A value of 10 would correspond to the 
             processVarDataset[processVarDataset.NumberDatapoints-11]. </param>
             <returns> Returns the minimum process value value within a specific range of values, starting from the 
             end of the processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.GetMinHistoryValue(System.Double)">
            <summary> Returns the minimum process value value within a specific time range, starting from the end 
            of the processVarDataset.
            </summary>
             <param name= "mintimevalue"> The minimum value in terms of the time stamp, in milliseconds, to use as a 
             lower limit in the search for a maximum process value.  
              </param>
             <returns> Returns the minimum process value value within a specific time range, starting from the 
             end of the processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.TruncateProcessVarDataset(System.Int32)">
            <summary> Truncates the current processVarDataset dataset, removing the oldest values in the 
            processVarDataset dataset, and returning a new dataset that contains the removed values.
            </summary>
             <param name= "newsize"> The processVarDataset is truncated to this size. New points are 
             appended to the dataset, increasing its size.
              </param>
             <returns> Returns the a dataset containing the oldest values that have been removed from the 
             processVarDataset. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVar.ResetAlarmList">
            <summary> This method empties all of the alarm objects out of the alarm list.
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmList">
            <summary>
              Get the process variable alarm list vector.
            </summary>    
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.CurrentValue">
            <summary>
              Get the process variable current value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.CurrentPointValue">
            <summary>
              Get the process variable current point value, where the x-value is the timestamp in milliseconds and 
              y is the currentValue.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.TimeStamp">
            <summary>
              Get the process variable time stamp value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.PrevTimeStamp">
            <summary>
              Get the process variable previous time stamp value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.PrevCurrentValue">
            <summary>
              Get the process variable previous current value.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.TagName">
            <summary>
              Get/Set the process variable tag string.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.UnitsString">
            <summary>
              Get/Set the process variable units string.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.UniqueIdentifier">
            <summary>
              Get/Set the process variable uniqueIdentifier string.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.ShortDescription">
            <summary>
              Get/Set the process variable shortDescription string.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.DetailedDescription">
            <summary>
              Get/Set the process variable detailedDescription string.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.ProcessVarDataset">
            <summary>
              Get/Set the process variable dataset.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.DatasetEnableUpdate">
            <summary>
              Get/Set the enable flag for the process variable dataset.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.MinimumValue">
            <summary>
              Get/Set minimum allowable value for the process variable.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.MaximumValue">
            <summary>
              Get/Set maximum allowable value for the process variable.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.DefaultMinimumDisplayValue">
            <summary>
              Get/Set minimum allowable display value for the process variable. Use by the auto chart methods.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.DefaultMaximumDisplayValue">
            <summary>
              Get/Set maximum allowable display value for the process variable. Used by the auto chart methods.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmStateEventEnable">
            <summary>
              Get/Set the flag for the alarm state event enable. Set to true to enable alarm checking.
            </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmTransitionEventEnable">
            <summary>
              Get/Set the flag for the AlarmTransitionEventHandler delegate enable. Set to true to enable the 
              AlarmTransitionEventHandler delegate.
            </summary>			
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AlarmCheckEnable">
            <summary>
              Get/Set the flag for the AlarmStateEventHandler delegate enable. Set to true to enable the 
              AlarmStateEventHandler delegate.
            </summary>			
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.GoodValue">
            <summary>
              Get/Set set to false designates that the current value is a bad value.
            </summary>			
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.DefaultAttribute">
            <summary>
              Get/Set the default attributes for the process variable.
            </summary>		
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AutoTruncateDataset">
            <summary>
            Set to true and updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AutoTruncateMaxCount">
            <summary>
            If the autoTruncate flag is true updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AutoTruncateMinCount">
            <summary>
            If the autoTruncate flag is true updates of the ChartDatasets automatically truncate when the number of
            data points reaches autoTruncateMaxCount. It truncates the number of points in the data set
            to autoTruncateMinCount;
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.AutoScaleFlag">
            <summary>
            If the autoScaleFlag is true, auto-scaling based on this dataset is carried out by the RTScrollFrame class.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVar.YMode">
            <summary>
            If the YMode is false, it the time value is stored as x-values in the historical buffers, otherwise it is stored as the 
            y-values. If the YMode is false, it the process value is stored as y-values in the historical buffers, otherwise it is stored as the 
            x-values. 
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs">
            <summary>
            This class is used to pass information to the RTProcessVarUpdateDelegate delegate in RTProcessVar update events.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.processVar">
            <summary>
             A reference to the RTProcessVar object associated with the update event.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.processVarDataset">
            <summary>
            The current historical dataset associated with a process variable.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.timeStamp">
            <summary>
            The time step of the new data.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.currentValue">
            <summary>
            The current value of the new data.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.InitDefaults">
            <summary>
             Initializes default values for the object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTProcessVarUpdateArgs object for common errors.
            </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.Copy(com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs)">
            <summary>
             Copies the source RTProcessVarUpdateArgs object.
            </summary>
             <param name= "source"> The source RTProcessVarUpdateArgs object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.#ctor">
            <summary>
              The default RTProcessVarUpdateArgs constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.#ctor(com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.TimeSimpleDataset,System.Double,System.Double)">
            <summary>
              This constructor creates a RTProcessVarUpdateArgs object that is used to pass data associated 
              with alarm events. 
            </summary>
            <param name="pv"> The RTProcessVar object associated with the alarm event. </param>
            <param name="currentdataset"> The current dataset associated with the process variable. </param>
            <param name="timestamp"> Time stamp of the update.</param>
            <param name="currentvalue"> Current value of the update.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.ProcessVar">
            <summary>
              Get/Set the processVar object.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.ProcessVarDataset">
            <summary>
              Get/Set the current dataset associated with the process variable. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.TimeStamp">
            <summary>
              Get/Set the most recent timestamp.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs.CurrentValue">
            <summary>
              Get/Set the most recent value.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTProcessVarViewer">
            <summary>
            The RTProcessVarViewer is a UserControl derived object that is used to view a RTProcessVar dataset.  
            Since it is usually not possible or practical to display the entire dataset, the RTProcessVarViewer windows
            a rectangular section of the dataset for display. Scroll bars can be used to scroll the rows and
            columns of the dataset.
            </summary>
            
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarViewer.sourceProcessVar">
            <summary>
            A reference to the source RTProcessVar variable associated with the table.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarViewer.autoUpdateData">
            <summary>
            Set to true and the table will update with the update of th RTProcessVar.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarViewer.autoRedrawTable">
            <summary>
            Set to true and the table will redraw using the current data associated with the update of th RTProcessVar.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarViewer.displayMostRecentData">
            <summary>
            Set to true to always display most recent data.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarViewer.processVarList">
            <summary>
            Keeps an array of the process variables associated with this viewer.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.#ctor">
            <summary>
            The default constructor for RTProcessVarViewer.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Int32,System.Int32)">
            <summary>
            A constructor for RTProcessVarViewer using the specified coordinate system and process variable. It is 
            initialized to display the specified number of rows and columns.
            </summary>
            <param name="chartvu"> The ChartView object the viewer is place in.</param>
            <param name="transform"> The coordinate system the DatasetViewer is placed in.</param>
            <param name="posrect"> A positioning rectangle for the dataset viewer, use null if not used.</param>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
            <param name="rows">Number of rows to display</param>
            <param name="cols">Number of columns to display.</param>
            <param name="start"> Starting column of the dataset viewer.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Int32,System.Int32)">
            <summary>
            A constructor for RTProcessVarViewer using the specified coordinate system and process variable. It is 
            initialized to display the specified number of rows and columns.
            </summary>
            <param name="chartvu"> The ChartView object the viewer is place in.</param>
            <param name="posrect"> A positioning rectangle for the dataset viewer, use null if not used.</param>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
            <param name="rows">Number of rows to display</param>
            <param name="cols">Number of columns to display.</param>
            <param name="start"> Starting column of the dataset viewer.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A constructor for RTProcessVarViewer using the specified coordinate system and process variable. It is 
            initialized to display the specified number of rows and columns.
            </summary>
            <param name="chartvu"> The ChartView object the viewer is place in.</param>
            <param name="posrect"> A positioning rectangle for the dataset viewer, use null if not used.</param>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
            <param name="rows">Number of rows to display</param>
            <param name="cols">Number of columns to display.</param>
            <param name="start"> Starting column of the dataset viewer.</param>
            <param name="orient"> Orients the dataset horizontal (HORIZ_DIR) or vertical (VERT_DIR).</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A constructor for RTProcessVarViewer using the specified coordinate system and process variable. It is 
            initialized to display the specified number of rows and columns.
            </summary>
            <param name="chartvu"> The ChartView object the viewer is place in.</param>
            <param name="transform"> The coordinate system the DatasetViewer is placed in.</param>
            <param name="posrect"> A positioning rectangle for the dataset viewer, use null if not used.</param>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
            <param name="rows">Number of rows to display</param>
            <param name="cols">Number of columns to display.</param>
            <param name="start"> Starting column of the dataset viewer.</param>
            <param name="orient"> Orients the dataset horizontal (HORIZ_DIR) or vertical (VERT_DIR).</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.InitRTProcessVarViewer(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize the RTProcessVarViewer using the specified coordinate system and process variable. It is 
            initialized to display the specified number of rows and columns.
            </summary>
            <param name="chartvu"> The ChartView object the viewer is place in.</param>
            <param name="transform"> The coordinate system the DatasetViewer is placed in.</param>
            <param name="posrect"> A positioning rectangle for the dataset viewer, use null if not used.</param>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
            <param name="rows">Number of rows to display</param>
            <param name="cols">Number of columns to display.</param>
            <param name="start"> Starting column of the dataset viewer.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.InitRTProcessVarViewer(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,com.quinncurtis.rtgraphnet.RTProcessVar,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize the RTProcessVarViewer using the specified coordinate system and process variable. It is 
            initialized to display the specified number of rows and columns.
            </summary>
            <param name="chartvu"> The ChartView object the viewer is place in.</param>
            <param name="transform"> The coordinate system the DatasetViewer is placed in.</param>
            <param name="posrect"> A positioning rectangle for the dataset viewer, use null if not used.</param>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
            <param name="rows">Number of rows to display</param>
            <param name="cols">Number of columns to display.</param>
            <param name="start"> Starting column of the dataset viewer.</param>
            <param name="orient"> Orients the dataset horizontal (HORIZ_DIR) or vertical (VERT_DIR).</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.AddProcessVar(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
            Add a process variable.
            </summary>
            <param name="pv"> The source RTProcessVar object displayed in the dataset viewer.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.RTProcessVarUpdateEventProc(System.Object,com.quinncurtis.rtgraphnet.RTProcessVarUpdateArgs)">
            <summary>
            Event handler triggered whenever the process variable is updated.
            </summary>
            <param name="sender"> The source of the event</param>
            <param name="e"> The update argumenets.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarViewer.AutoUpdateData">
            <summary>
            Set to true and the table will update with the update of the RTProcessVar.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarViewer.AutoRedrawTable">
            <summary>
            Set to true and the table will redraw using the current data associated with the update of th RTProcessVar.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTProcessVarViewer.DisplayMostRecentData">
            <summary>
            Set to true to always display most recent data.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTProcessVarViewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTProcessVarViewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D">
            <summary>
            Summary description for the RTRoundedRectangle2D class. This class is used to create a rectangle
            with rounded corners.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.rect">
            <summary>
            Specifies the size and position of the rectangle.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.cornerRadius">
            <summary>
            Specifies the radius of the rectangle corners.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.ErrorCheck(System.Int32)">
            <summary>
             Checks the object for common errors.
            </summary>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.Copy(com.quinncurtis.rtgraphnet.RTRoundedRectangle2D)">
            <summary>
              Copies the source RTRoundedRectangle2D object. 
            </summary>
            <param name="source"> The source RTRoundedRectangle2D object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.Clone">
            <summary>
             Returns an object that is a clone of this RTRoundedRectangle2D object. 
            </summary>
            <returns> Returns a clone of this RTRoundedRectangle2D object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.SetRoundedRect(System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             Defines the position and size of the RTRoundedRectangle2D object. 
            </summary>
            <param name="xx"> The x-position of the upper left of the rectangle. </param>
            <param name="yy"> The y-position of the upper left of the rectangle. </param>
            <param name="ww"> The width of the rectangle. </param>
            <param name="hh"> The height of the rectangle.</param>
            <param name="corner"> The radius of the rectangle corners.</param>
            <param name="postype"> The coordinate system the rectangle is defined in. 
            Use one of the coordinate system constants: DEV_POS, PHYS_POS, NORM_GRAPH_POS, NORM_PLOT_POS.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.#ctor">
            <summary>
             The default RTRoundedRectangle2D constructor.
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
             This constructor creates a new RTRoundedRectangle2D object. 
            </summary>
            <param name="transform"> Places the RTRoundedRectangle2D object in the coordinate system defined by transform. </param>
            <param name="xx"> The x-position of the upper left of the rectangle. </param>
            <param name="yy"> The y-position of the upper left of the rectangle. </param>
            <param name="ww"> The width of the rectangle. </param>
            <param name="hh"> The height of the rectangle.</param>
            <param name="corner"> The radius of the rectangle corners.</param>
            <param name="postype"> The coordinate system the rectangle is defined in. 
            Use one of the coordinate system constants: DEV_POS, PHYS_POS, NORM_GRAPH_POS, NORM_PLOT_POS.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTRoundedRectangle2D,System.Int32)">
            <summary>
             This constructor creates a new RTRoundedRectangle2D object. 
            </summary>
            <param name="transform"> Places the RTRoundedRectangle2D object in the coordinate system defined by transform. </param>
            <param name="r"> The size and position of the rectangle. </param>
            <param name="postype"> The coordinate system the rectangle is defined in. 
            Use one of the coordinate system constants: DEV_POS, PHYS_POS, NORM_GRAPH_POS, NORM_PLOT_POS.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.Rectangle2D,System.Double,System.Int32)">
            <summary>
             This constructor creates a new RTRoundedRectangle2D object. 
            </summary>
            <param name="transform"> Places the RTRoundedRectangle2D object in the coordinate system defined by transform. </param>
            <param name="r"> The size and position of the rectangle. </param>
            <param name="corner"> The radius of the rectangle corners.</param>
            <param name="postype"> The coordinate system the rectangle is defined in. 
            Use one of the coordinate system constants: DEV_POS, PHYS_POS, NORM_GRAPH_POS, NORM_PLOT_POS.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Drawing.RectangleF,System.Double,System.Int32)">
            <summary>
             This constructor creates a new RTRoundedRectangle2D object. 
            </summary>
            <param name="transform"> Places the RTRoundedRectangle2D object in the coordinate system defined by transform. </param>
            <param name="r"> The size and position of the rectangle. </param>
            <param name="corner"> The radius of the rectangle corners.</param>
            <param name="postype"> The coordinate system the rectangle is defined in. 
            Use one of the coordinate system constants: DEV_POS, PHYS_POS, NORM_GRAPH_POS, NORM_PLOT_POS.
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.GetPath">
            <summary>
             Calculates and creates the graphics path for the RTRoundedRectangle2D shape.
            </summary>
             <returns> Returns an RTRoundedRectangle2D GraphicsPath. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              The CheckIntersection method. It test to see if the test point  is within the intersectionTestDistance 
              of the object location.  Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class. 
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.X">
            <summary>
             Get/Set the x-value of the rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.Y">
            <summary>
             Get/Set the y-value of the rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.Width">
            <summary>
             Get/Set the width of the rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.Height">
            <summary>
             Get/Set the height of the rectangle. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTRoundedRectangle2D.CornerRadius">
            <summary>
             Get/Set the corner radius of the rounded rectangle. 
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTScrollFrame">
            <summary>
            The scrolling algorithm used in this software is different that in earlier Quinn-Curtis real-time graphics products. 
            Scrolling plots are no longer updated incrementally whenever the underlying data is updated. Instead, the underlying 
            RTProcessVar data objects are updated as fast as you want. Scrolling graphs (all graphs for that matter) are only 
            updated with the ChartView.UpdateDraw() method is called. What makes scrolling graphs appear to scroll is the scroll 
            frame (RTScrollFrame). When a scroll frame is updated as a result of the ChartView.UpdateDraw() event, it analyze the 
            RTSimpleSingleValuePlot and RTGroupMultiValuePlot objects that have been attached to it and creates a coordinate system 
            that matches the current and historical data associated with the plot objects. The plot objects in the scroll frame are 
            drawn into this coordinate system. As data progresses forward in time the coordinate system is constantly being rescaled 
            to include the most recent time values as part of the x-coordinate system. You can control whether or not the starting 
            point of the scroll frame coordinate system remains fixed, whether it advances in sync with the constantly changing end 
            of the scroll frame. Other options allow the y-scale to be constantly rescaled to reflect the current dynamic range of 
            the y-values in the scroll frame.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.maxDisplayHistory">
            <summary>
            The number of points in the display history for the fixed extent scroll modes
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.scrollScaleModeX">
            <summary>
            The scroll mode for the x-axis. Use one of the scroll mode constants:
            RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_CURRENT_SCALE, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, 
            RT_AUTOSCALE_X_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
            RT_FIXEDNUMPOINT_AUTOSCROLL
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.scrollScaleModeY">
            <summary>
            The scroll mode for the y-axis. Use one of the scroll mode constants:
            RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, RT_AUTOSCALE_Y_MINMAX
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.autoScaleRoundXMode">
            <summary>
            The rounding mode for the x-axis. Use one of the AUTOAXES round mode constants:
             AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.autoScaleRoundYMode">
            <summary>
            The rounding mode for the y-axis. Use one of the AUTOAXES round mode constants:
             AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.timeStampMode">
            <summary>
            The time stamp mode for the x-axis. Use one of the time stamp mode constants:
            RT_NOT_MONOTONIC_X_MODE and RT_MONOTONIC_X_MODE
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.minSamplesForAutoScale">
            <summary>
            The minimum number of samples before an auto-scale for the y-axis will take place.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.scrollFrameUpdateCount">
            <summary>
            Keeps track of the number of updates for the scrollFrame;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.scrollRescaleMargin">
            <summary>
            The rescale margin for the scrolling graph. When the coordinate system rescales, as the scrolling graph fills
            the graph, the amount of the rescale is determined by this value.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.frameExtent">
            <summary>
            A local variable storing the frame extent .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.timeMax">
            <summary>
            A local variable storing the frame maximum time value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.timeMin">
            <summary>
            A local variable storing the frame minimum time value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.autoRescaleFrame">
            <summary>
            Set to true and the frame coordinate system is rescaled every time the Draw method is called, usually in 
            response to the ChartView.UpdateDraw method call. If false the frame is only rescaled when the 
            RTScollFrame.RescaleFrame method is called.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTScrollFrame.autoScaleMinimumYRange">
            <summary>
            Specifies the minimum range to use in the auto-scale of the y-axis
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.ErrorCheck(System.Int32)">
            <summary>
             Checks the object for common errors.
            </summary>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.InitDefaults">
            <summary>
             Initializes default values for the RTScrollFrame object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.Copy(com.quinncurtis.rtgraphnet.RTScrollFrame)">
            <summary>
              Copies the RTScrollFrame object. 
            </summary>
            <param name="source"> The source RTScrollFrame object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.Clone">
            <summary>
             Returns an object that is a clone of this RTScrollFrame object. 
            </summary>
            <returns> Returns a clone of this RTScrollFrame object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.#ctor">
            <summary>
              The default RTScrollFrame constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32)">
            <summary>
              This constructor creates a new RTScrollFrame object that tracks the specified process variable and
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="processvar"> The source process variable. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="scrollmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_CURRENT_SCALE, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, 
              RT_AUTOSCALE_X_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
              RT_FIXEDNUMPOINT_AUTOSCROLL.	</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32,System.Int32)">
            <summary>
              This constructor creates a new RTScrollFrame object that tracks the specified process variable and
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="processvar"> The source process variable. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="scrollxmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode
             constants: RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_CURRENT_SCALE, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, 
             RT_AUTOSCALE_X_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
             RT_FIXEDNUMPOINT_AUTOSCROLL </param>
            <param name="autoscaleymode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode
              constants: RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, RT_AUTOSCALE_Y_MINMAX. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32)">
            <summary>
              This constructor creates a new RTScrollFrame object
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="scrollmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode constants:
             RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_CURRENT_SCALE, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, 
             RT_AUTOSCALE_X_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
             RT_FIXEDNUMPOINT_AUTOSCROLL. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32,System.Int32)">
            <summary>
              This constructor creates a new RTScrollFrame object
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="scrollxmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_CURRENT_SCALE, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, 
              RT_AUTOSCALE_X_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
              RT_FIXEDNUMPOINT_AUTOSCROLL. </param>
            <param name="autoscaleymode"> Specifies the scroll mode of the scroll frame. Use one of the scroll 
              mode constants: RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, RT_AUTOSCALE_Y_MINMAX. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.CalcFrameExtent(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              Calculates the frame extent.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.RescaleAxesToCurrentTransform">
            <summary>
              Rescales all of the axis objects in the RTScrollFrame to match the scale of the current transform.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.RescaleAxesToTransform(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              Rescales all of the axis objects in the RTScrollFrame to match the scale of the new transform.
            </summary>		
            <param name="transform"> A new coordinate system for the scroll frame.</param>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.SaveAxesIntercepts(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              Saves the normalized values of all of the axis intercepts.
            </summary>		
            <param name="transform"> A new coordinate system for the scroll frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetProcessVarMaxCount">
            <summary>
             Returns the maximum number of data points in the datasets of the process variables in the scroll frame.
            </summary>
             <returns>  Returns the maximum number of data points in the datasets of the process variables in 
             the scroll frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetProcessVarMinCount">
            <summary>
             Returns the minimum number of data points in the datasets of the process variables in the scroll frame.
            </summary>
             <returns>  Returns the minimum number of data points in the datasets of the process variables in the 
             scroll frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetProcessVarTimeValue(System.Int32)">
            <summary>
             Returns the millisecond time value associated with a specific backcount into the rtDataSource. It
             checks all process variables in the processVar list and returns the minimum time value at the backcount
             index for all process variables.
            </summary>
            <param name="backcount"> Looks for the minimum value within the most recent backcount values.</param>		
             <returns>  Returns the millisecond time value associated with a specific backcount into the rtDataSource. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMaxProcessVarTimeValue(System.Int32)">
            <summary>
             Returns the maximum millisecond time value within a specific interval of the process variables in the 
             rtDataSource. It checks all process variables in the processVar list and returns the maximum time 
             value within the backcount interval for all process variables.
            </summary>
            <param name="backcount"> Looks for the maximum value within the most recent backcount values.</param>		
             <returns> Returns the maximum millisecond time value within a specific interval of the process 
             variables in the rtDataSource. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMinProcessVarTimeValue(System.Int32)">
            <summary>
             Returns the minimum millisecond time value within a specific interval of the process variables in 
             the rtDataSource. It checks all process variables in the processVar list and returns the minimum time
             value within the backcount interval for all process variables.
            </summary>
            <param name="backcount"> Looks for the minimum value within the most recent backcount values.</param>		
             <returns>  Returns the minimum millisecond time value within a specific interval of the process 
             variables in the rtDataSource. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMaxProcessVarTimeValue">
            <summary>
             Returns the maximum millisecond time value of the most recent values of the process variables in 
             the rtDataSource. 
            </summary>
             <returns>  Returns the maximum millisecond time value of the most recent values of the process 
             variables in the rtDataSource.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMinProcessVarTimeValue">
            <summary>
             Returns the minimum millisecond time value of the most recent values of the process variables in the
              rtDataSource. 
            </summary>
             <returns>  Returns the minimum millisecond time value of the most recent values of the process 
             variables in the rtDataSource.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMaxProcessVarValue(System.Double)">
            <summary>
              Runs through process variable datasets and searches out the maximum process value, starting at 
              the time startx.
            </summary>
            <param name="startx"> The start time in milliseconds for the search for the maximum process variable.</param>		
             <returns> Returns the maximum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMaxProcessVarValue(System.Int32)">
            <summary>
              Runs through process variable datasets and searches out the maximum process value, starting at the 
              time startx.
            </summary>
            <param name="backcount"> Looks for the maximum value within the most recent backcount values.</param>		
             <returns> Returns the maximum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMinProcessVarValue(System.Double)">
            <summary>
              Runs through process variable datasets and searches out the minimum process value, starting 
              at the time startx.
            </summary>
            <param name="startx"> The start time in milliseconds for the search for the minimum process variable.</param>		
             <returns> Returns the minimum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.GetMinProcessVarValue(System.Int32)">
            <summary>
              Runs through process variable datasets and searches out the minimum process value, starting at the 
              time startx.
            </summary>
            <param name="backcount"> Looks for the maximum value within the most recent backcount values.</param>		
             <returns> Returns the maximum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.RescaleFrame(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Rescale the frame using the specified minimum and maximum values.
            </summary>
            <param name="minx"> The minimum value sfor the x-scale.</param>		
            <param name="miny"> The minimum value sfor the y-scale.</param>		
            <param name="maxx"> The maximum value sfor the x-scale.</param>		
            <param name="maxy"> The maximum value sfor the y-scale.</param>		
             <returns> Returns true if the coordinate system is rescaled. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.RescaleFrame">
            <summary>
              Runs through the process variables and checks to see if the current coordinate system needs to be rescaled.
              It is rescaled if needed.
            </summary>
             <returns> Returns true if the coordinate system is rescaled. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Not supported.
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTScrollFrame.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object (Not supported). 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of objects.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.ScrollRescaleMargin">
            <summary>
             Get/Set the scroll rescale margin. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.ScrollScaleModeX">
            <summary>
             Get/Set the scrolling mode for the x-coordinate. Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_CURRENT_SCALE, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, 
              RT_AUTOSCALE_X_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
              RT_FIXEDNUMPOINT_AUTOSCROLL.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.ScrollScaleModeY">
            <summary>
             Get/Set the scrolling mode for the y-coordinate. Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, RT_AUTOSCALE_Y_MINMAX.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.AutoScaleRoundXMode">
            <summary>
             Get/Set the auto-scale round mode for the x-coordinate. Use one of the AUTOAXES round mode constants:
              AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.AutoScaleRoundYMode">
            <summary>
             Get/Set the auto-scale mode for the y-coordinate. Use one of the AUTOAXES round mode constants:
              AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.TimeStampMode">
            <summary>
             Get/Set the time stamp mode for the time values in the process variables. Use one of the time stamp mode 
             constants: RT_NOT_MONOTONIC_X_MODE and RT_MONOTONIC_X_MODE
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.MinSamplesForAutoScale">
            <summary>
             Get/Set the minimum number of samples that need to be in the dataset before an auto-scale operation is 
             carried out. This prevents the first datapoints from generating an arbitrarily small range.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.MaxDisplayHistory">
            <summary>
             Get/Set the maximum number of points displayed.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.AutoRecaleFrame">
            <summary>
            Get/Set to true and the frame coordinate system is rescaled evertime the Draw method is called, usually in 
            response to the ChartView.UpdateDraw method call. If false the frame is only rescaled when the 
            RTScollFrame.RescaleFrame method is called.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.FrameExtent">
            <summary>
            Get/Set the frame extent.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTScrollFrame.AutoScaleMinimumYRange">
            <summary>
            Get/Set the scroll frames minimum auto-scale for the y-axis
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot">
            <summary>
            The RTSimpleSingleValuePlot plot class uses a template based on the QCChart2D SimplePlot class to create a 
            real-time plot that displays RTProcessVar current and historical real-time data in a scrolling line, scrolling
             bar,  or scrolling scatter plot format.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.localGraphicsContext">
            <summary>
              This field holds a reference to a local Graphics context.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.plotTemplate">
            <summary>
              This field holds a reference to a SimplePlot object that serves as a template for the 
              RTSimpleSingleValuePlot plot object.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.endOfPlotLineMarker">
            <summary>
             The end of plot marker type. Use one of the Marker marker type constants:  MARKER_NULL, MARKER_VLINE, 
             MARKER_HLINE, MARKER_HVLINE. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.sweepMode">
            <summary>
             Specifies that a sweep mode display is enabled, where older data is placed in front 
             of the sweep line, and newer data before the sweep line.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.InitDefaults">
            <summary>
              Initializes default values for the RTSimpleSingleValuePlot object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTSimpleSingleValuePlot object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.Copy(com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot)">
            <summary>
              Copies the RTSimpleSingleValuePlot object. 
            </summary>
            <param name="source"> The source RTSimpleSingleValuePlot object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.Clone">
            <summary>
             Returns an object that is a clone of this RTSimpleSingleValuePlot object. 
            </summary>
            <returns> Returns a clone of this RTSimpleSingleValuePlot object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.#ctor">
            <summary>
              The default RTSimpleSingleValuePlot constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.Finalize">
            <summary>
              The RTSimpleSingleValuePlot destructor, needed so that it can Displose the local graphics context.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              This constructor creates a new RTSimpleSingleValuePlot object that will reside in  the 
              specified coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTSimpleSingleValuePlot object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.SimplePlot,com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
              This constructor creates a new RTSimpleSingleValuePlot object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="transform"> The coordinate system for the new RTSimpleSingleValuePlot object. </param>
            <param name="plottemplate"> This SimplePlot object is used as a template for the scrolling plot object. </param>
            <param name="datasource"> The source process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.#ctor(com.quinncurtis.chart2dnet.SimplePlot,com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
              This constructor creates a new RTSimpleSingleValuePlot object that will reside in  the specified 
              coordinate system. 
            </summary>
            <param name="plottemplate"> This SimplePlot object is used as a template for the scrolling plot object. </param>
            <param name="datasource"> The source process variable. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              This method compares a test point against all of the xy points  in a simple dataset and calculates 
              which point in the dataset  is nearest the test point. The nearness test has many  different forms:  
              Nearness Mode Constant Description  FNP_X nearest x  FNP_Y nearest y  FNP_DIST shortest distance  
              FNP_NORMX nearest normalized x  FNP_NORMY nearest normalized y  FNP_NORMDIST shortest normalized distance 
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects one of the objects. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of the objects.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.PlotTemplate">
            <summary>
             Get/Set the simple plot template. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.EndOfPlotLineMarker">
            <summary>
             Get/Set The end of plot marker type. Use one of the Marker marker type constants:  MARKER_NULL, 
             MARKER_VLINE, MARKER_HLINE, MARKER_HVLINE.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSimpleSingleValuePlot.SweepMode">
            <summary>
             Specifies that a sweep mode display is enabled, where older data is placed in front 
             of the sweep line, and newer data before the sweep line.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTSingleValueIndicator">
            <summary>
            Summary description for the RTSingleValueIndicator class.
            The RTSingleValueIndicator class manages and displays indicator plot types that reference one process variables.
            
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.rtDataSource">
            <summary>
             A reference to the RTProcessVar object that is displayed in the indicator.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.alarmIndicatorColorMode">
            <summary>
             Specifies whether the color of the indicator object changes on an alarm. Use one of the constants:
             RT_INDICATOR_COLOR_NO_ALARM_CHANGE, RT_INDICATOR_COLOR_CHANGE_ON_ALARM.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.InitDefaults">
            <summary>
             Initializes default values for the RTSingleValueIndicator object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTSingleValueIndicator object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.Copy(com.quinncurtis.rtgraphnet.RTSingleValueIndicator)">
            <summary>
             Copies the source RTSingleValueIndicator object.
            </summary>
             <param name= "source"> The source RTSingleValueIndicator object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.#ctor">
            <summary>
              The default RTSingleValueIndicator constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.CheckValidPoint(System.Double,System.Double,System.Boolean)">
            <summary>
             Returns true if the current value and time stamp for a process variable are valid.
             <param name= "x">  The current x, or time stamp value </param>
             <param name= "y">  The current y, or process variable </param>
             <param name= "valid">  The valid flag for the data point. </param>
             <returns> Returns true if the current value and time stamp for a process variable are valid. </returns>
             </summary>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.CalcBarRect(System.Double,System.Double,com.quinncurtis.chart2dnet.Rectangle2D)">
            <summary>
             Calculates the Rectangle2D shape used to draw a single bar.
             <param name= "x">  The position of the bar in units of the independent axis. </param>
             <param name= "y">  The maximum value of the bar in units of dependent axis. </param>
             <param name= "rect">  Returns the shape of the bar as a Rectangle2D object. </param>
             </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.AlarmIndicatorColorMode">
            <summary>
             Get/Set whether the color of the indicator objects changes on an alarm. Use one of the constants:
             RT_INDICATOR_COLOR_NO_ALARM_CHANGE, RT_INDICATOR_COLOR_CHANGE_ON_ALARM..
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.CurrentProcessValue">
            <summary>
             Get the current process value of the primary channel.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.SetRTDataSource(com.quinncurtis.rtgraphnet.RTProcessVar)">
            <summary>
             Replaces the  RTProcessVar process variable.
             <param name= "pv">  The new RTProcessVar. </param>
             </summary>	
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.RTDataSource">
            <summary>
             Get/Set the array list holding the RTProcessVar variables for the indicator.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.GetRTProcessVar">
            <summary>
             Get the current process value of the primary channel.
            </summary>
            <returns> Returns process variable.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.GetRTProcessVar(System.Int32)">
            <summary>
             Get the current process value of the primary channel.
            </summary>
             <param name= "channel">  The channel number of the process var, not used in this class. </param>
            <returns> Returns process variable.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSingleValueIndicator.GetDataset">
            <summary>
             Get the dataset of the current process value of the primary channel.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTStringPanelMeter">
            <summary>
            Displays a string in a RTPanelMeter format. It is used for titles, tag names and units strings. It contains a template based on the 
            QCChart2D StringLabel class that is used to specify the font and format information associated with 
            the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTStringPanelMeter.stringType">
            <summary> 
            Displays a string, either an arbitrary string, or a string based on string data in the associated RTProcessVar 
             object. It is usually used to display a channels tag string and units string, but it can also be used to 
            display longer descriptive strings. It contains a template based on the QCChart2D StringLabel class that 
            is used to specify the font and string format information associated with the panel meter. 
            Specific what string to display, whether it is one of the process variable strings,
            or a custom string. Use one of the Panel Meter string constants: RT_CUSTOM_STRING, RT_TAG_STRING , 
             RT_UNITS_STRING, RT_UNIQUEID_STRING, RT_SHORT_DESCRIPTION_STRING, RT_DETALED_DESCRIPTION_STRING.		
             </summary>			
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTStringPanelMeter.stringTemplate">
            <summary>
            The string template defining the panel meter string. All of the text properties associated with
            the panel meter are set using this property. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTStringPanelMeter.frameWidthString">
            <summary>
            If the current string shorter than this string, this string is used to size the frame..
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTStringPanelMeter.textframe">
            <summary>
            The RTTextFrame is used to display the panel meter text, framing the text using a 3D beveled border.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTStringPanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.#ctor">
            <summary>
             The default RTStringPanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.Copy(com.quinncurtis.rtgraphnet.RTStringPanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.Clone">
            <summary>  Returns an object that is a Clone of this RTStringPanelMeter object.
            </summary>
            <returns> Returns a Clone of this RTStringPanelMeter object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTStringPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTStringPanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTStringPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTStringPanelMeter object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTStringPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTStringPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute,System.Int32)">
            <summary>
             This constructor creates a new RTStringPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTStringPanelMeter object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
            <param name="stringtype"> specifies what string to display, whether it is one of the process variable strings,
            or a custom string. Use one of the Panel Meter string constants: RT_CUSTOM_STRING, RT_TAG_STRING ,		
            RT_UNITS_STRING. Specify a a custom string and use the StringTemplate.TextString property to set the string.		
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute,System.Int32)">
            <summary>
             This constructor creates a new RTStringPanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTStringPanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
            <param name="stringtype"> specifies what string to display, whether it is one of the process variable strings,
            or a custom string. Use one of the Panel Meter string constants: RT_CUSTOM_STRING, RT_TAG_STRING , 
            RT_UNITS_STRING. Specify a a custom string and use the StringTemplate.TextString property to set the string.		
             </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.CalcFrameMinWidth(System.Drawing.Graphics)">
            <summary>
             Calculates the minimum frame width to use in in displaying time value strings in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
              <returns> The minimum frame width to use in in displaying time value strings in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.SetResizeMultiplier(System.Double)">
            <summary>
             Sets the resize multiplier used by the RTPanelMeter object. 
            </summary>
            <param name="multiplier"> Sets the resize multiplier used by the object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTStringPanelMeter.StringTemplate">
            <summary>
             Set/Get the string template defining the panel meter string. All of the text properties associated with
             the panel meter are set using this property. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTStringPanelMeter.FrameWidthString">
            <summary>
             Set/Get the string panel meter minimum string used to size the panel meter frame.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTStringPanelMeter.StringType">
            <summary>
             Set/Get what string to display, whether it is one of the process variable strings,
            or a custom string. Use one of the Panel Meter string constants: RT_CUSTOM_STRING, RT_TAG_STRING , 
            RT_UNITS_STRING.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTStringPanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the StringTemplate template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTStringPanelMeter.TextColor">
            <summary>
             Set/Get the text color of the panelmeter.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTSymbol">
            <summary>
             This class is used by the RTAlarmIndicator class to draw the alarm indicator symbols.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSymbol.symbolNumber">
            <summary>
             The value of the current symbol. Use one of chart symbol constants: 
             RT_LEFT_LOW_ALARM_SYMBOL, RT_LEFT_SETPOINT_SYMBOL,	 RT_LEFT_HIGH_ALARM_SYMBOL,RT_RIGHT_LOW_ALARM_SYMBOL,
             RT_RIGHT_SETPOINT_SYMBOL , RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL, RT_TOP_SETPOINT_SYMBOL,
             RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL, RT_BOTTOM_HIGH_ALARM_SYMBOL, 
             RT_NO_SYMBOL, RT_TRACKBAR_POINTER.
            </summary>    
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSymbol.symbolShape">
            <summary>
             The GraphicsPath represented by the value of symbolNumber.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTSymbol.maxSymbolNum">
            <summary>
             The maximum symbol number value.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.InitDefaults">
            <summary>
              Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTSymbol object for common errors.
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
             </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.Copy(com.quinncurtis.rtgraphnet.RTSymbol)">
            <summary>
              Copies the source RTSymbol object. 
            </summary>
            <param name="source"> The source RTSymbol object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.Clone">
            <summary>
             Returns an object that is a clone of this RTSymbol object. 
            </summary>
            <returns> Returns a clone of this RTSymbol object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.#ctor">
            <summary>
              The default RTSymbol constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTSymbol object using the specified scale,  symbol and attributes. 
            </summary>
            <param name="transform"> The symbol object is placed in the coordinate system defined by transform. </param>
            <param name="nsymbol"> The symbol number. Use one of chart symbol constants:  
             RT_LEFT_LOW_ALARM_SYMBOL, RT_LEFT_SETPOINT_SYMBOL,	 RT_LEFT_HIGH_ALARM_SYMBOL,RT_RIGHT_LOW_ALARM_SYMBOL,
             RT_RIGHT_SETPOINT_SYMBOL , RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL, RT_TOP_SETPOINT_SYMBOL,
             RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL, 
             RT_BOTTOM_HIGH_ALARM_SYMBOL, RT_NO_SYMBOL. </param>
            <param name="attrib"> Specifies the attributes (line and fill color) for the symbol.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Drawing.Drawing2D.GraphicsPath,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTSymbol object using the specified scale,  GraphicsPath and attributes. 
            </summary>
            <param name="transform"> The symbol object is placed in the coordinate system defined by transform. </param>
            <param name="symbolshape"> A reference to a GraphicsPath object. </param>
            <param name="attrib"> Specifies the attributes (line and fill color) for the symbol.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              This constructor creates a new RTSymbol object using the specified scale. 
            </summary>
            <param name="transform"> The symbol object is placed in the coordinate system defined by transform. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.InitChartSymbol(System.Int32,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This method initializes the properties of a chart symbol. 
            </summary>
            <param name="nsymbol"> The symbol number. Use one of chart symbol constants:  
             RT_LEFT_LOW_ALARM_SYMBOL, RT_LEFT_SETPOINT_SYMBOL,	 RT_LEFT_HIGH_ALARM_SYMBOL,RT_RIGHT_LOW_ALARM_SYMBOL,
             RT_RIGHT_SETPOINT_SYMBOL , RT_RIGHT_HIGH_ALARM_SYMBOL, RT_TOP_LOW_ALARM_SYMBOL, RT_TOP_SETPOINT_SYMBOL,
             RT_TOP_HIGH_ALARM_SYMBOL, RT_BOTTOM_LOW_ALARM_SYMBOL, RT_BOTTOM_SETPOINT_SYMBOL, 
             RT_BOTTOM_HIGH_ALARM_SYMBOL, RT_NO_SYMBOL. </param>
            <param name="attrib"> Specifies the attributes (line and fill color) for the symbol.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.SetSymbolSize(System.Double)">
            <summary>
             Sets the symbol size of an RTSymbol object. 
            </summary>
            <param name="size"> The symbol size, measured in window device coordinates,  sets the field symbolSize.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetSymbolSize">
            <summary>
             Returns the symbol size of an RTSymbol object. 
            </summary>
            <returns> Returns the symbol size.</returns>    
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.DrawSymbol(System.Drawing.Graphics)">
            <summary>
              This methods draw the symbol using the specified graphics context. 
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetSymbolNumber">
            <summary>
             Returns the symbol number. 
            </summary>
            <returns> Returns the symbol number.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.SetSymbolNumber(System.Int32)">
            <summary>
             Sets the symbol number. 
            </summary>
            <param name="symbol"> Sets the symbol number.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetSymbolShape">
            <summary>
             Returns the GraphicsPath of the current symbol. 
            </summary>
            <returns> Returns the GraphicsPath of the current symbol.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.SetSymbolShape(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
             Sets the GraphicsPath of the current symbol. 
            </summary>
            <param name="shape"> Sets the GraphicsPath of the current symbol.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class. 
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTLeftLowAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_LEFT_LOW_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_LEFT_LOW_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTLeftHighAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_LEFT_HIGH_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_LEFT_HIGH_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTLeftSetpointSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_LEFT_SETPOINT_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_LEFT_SETPOINT_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTVerticalLeftTrackBarSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_VERTICAL_RIGHT_POINTER. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_VERTICAL_RIGHT_POINTER.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTHorizontalDownTrackBarSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_HORIZONTAL_DOWN_POINTER. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_HORIZONTAL_DOWN_POINTER.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTVerticalCenterTrackBarSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_VERTICAL_CENTER_POINTER. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_VERTICAL_CENTER_POINTER.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTHorizontalCenterTrackBarSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TRACKBAR_HORIZONTAL_CENTER_POINTER. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol 
            value RT_TRACKBAR_HORIZONTAL_CENTER_POINTER.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTRightLowAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_RIGHT_LOW_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_RIGHT_LOW_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTRightHighAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_RIGHT_HIGH_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_RIGHT_HIGH_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTRightSetpointSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_RIGHT_SETPOINT_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_RIGHT_SETPOINT_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTBottomLowAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_BOTTOM_LOW_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_BOTTOM_LOW_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTBottomHighAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_BOTTOM_HIGH_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_BOTTOM_HIGH_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTBottomSetpointSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_BOTTOM_SETPOINT_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_BOTTOM_SETPOINT_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTTopLowAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TOP_LOW_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_TOP_LOW_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTTopHighAlarmSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TOP_HIGH_ALARM_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_TOP_HIGH_ALARM_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.GetRTTopSetpointSymbol">
            <summary>
             Returns the GraphicsPath object represented by the symbol value RT_TOP_SETPOINT_SYMBOL. 
            </summary>
            <returns> Returns the GraphicsPath object represented by the symbol value RT_TOP_SETPOINT_SYMBOL.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.CalcSymbolShape(System.Int32)">
            <summary>
             Returns the GraphicsPath object represented by the specified symbol value. 
            </summary>
            <param name="nsymbol"> The symbol number. </param>
            <returns> Returns the GraphicsPath object represented by the specified symbol value.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTSymbol.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              The CheckIntersection method. It test to see if the test point  is within the intersectionTestDistance of the object location.  Returns true if the test point intersects the object. 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects the object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSymbol.SymbolSize">
            <summary>
             Set/Get the symbol size of an RTSymbol object. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTSymbol.SymbolNumber">
            <summary>
             Get/Set the symbol number. 
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTTextFrame">
            <summary>
             This adds a 3D border to the standard QCChart2D ChartText text object and recalculates justification 
             parameters to take into account the thickness of the border. It is used by the RTPanelMeter classes to 
             display text. 
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTTextFrame.minTextBoxWidth">
            <summary>
             Minumum box width, regardless of text width.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTTextFrame.frame3d">
            <summary>
             3D frame around text.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTTextFrame.tightenTextBox">
            <summary>
             Set to true to tighten box so that text descenders are not used in calculation of frame height.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTTextFrame.frame3DEnable">
            <summary>
             Set to true to tighten box so that text descenders are not used in calculation of frame height.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.ErrorCheck(System.Int32)">
            <summary>
             Checks the RTTextFrame object for common errors.
             </summary>
             <param name= "nerror">  Current error state. </param>
             <returns> Returns an error code. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.Copy(com.quinncurtis.rtgraphnet.RTTextFrame)">
            <summary>
             Copies the source object.
             </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.Clone">
            <summary>  Returns an object that is a Clone of this RTTextFrame object.
            </summary>
             <returns> Returns a Clone of this RTTextFrame object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.InitDefaults">
            <summary>
              Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.#ctor">
            <summary>
              The default RTTextFrame constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.InitTextFrame(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartText,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTTextFrame object using the specified ChartText object. 
            </summary>
            <param name="transform"> The coordinate system for the new RTAlarmPanelMeter object. </param>
            <param name="text"> Specifies the text object to placed in a frame.</param>
            <param name="frameattrib"> Specifies the attributes of the text frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.#ctor(com.quinncurtis.chart2dnet.ChartText)">
            <summary>
              This constructor creates a new RTAlarmPanelMeter object using the specified ChartText object. 
            </summary>
            <param name="text"> Specifies the text object to placed in a frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartText)">
            <summary>
              This constructor creates a new RTAlarmPanelMeter object using the specified ChartText object. 
            </summary>
            <param name="transform"> The coordinate system for the new RTNumericPanelMeter object. </param>
            <param name="text"> Specifies the text object to placed in a frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartText,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
              This constructor creates a new RTTextFrame object using the specified ChartText object. 
            </summary>
            <param name="transform"> The coordinate system for the new RTAlarmPanelMeter object. </param>
            <param name="text"> Specifies the text object to placed in a frame.</param>
            <param name="frameattrib"> Specifies the attributes of the text frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.CalcFrameMinWidth(System.Drawing.Graphics)">
            <summary>
             Calculates the minimum frame width to use in in displaying time value strings in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
              <returns> The minimum frame width to use in in displaying time value strings in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.SetChartObjScale(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             Sets the reference to the PhysicalCoordinates object that the chart object is placed in.  It overrides the 
             GraphObj version because this is a compound object that  needs to update the ChartText and 
             LegendItem objects within. 
            </summary>
            <param name="transform"> A reference to the PhysicalCoordinates object that the chart object is placed in</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class. 
            </summary>
            <param name="g2"> The graphics context.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTextFrame.GetBoundingBox">
            <summary>
             Returns the bounding box for the chart object. Not all chart objects  have bounding boxes.
              Be sure and check for null. 
            </summary>
            <returns> Returns the bound box for the chart object.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTTextFrame.MinTextBoxWidth">
            <summary>
             Set/Get the minimum text box size. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTTextFrame.TightenTextBox">
            <summary>
              Set to true to tighten box so that text descenders are not used in calculation of frame height.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTTextFrame.TextFrame">
            <summary>
             Set/Get the 3D frame around text.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTTextFrame.Frame3DEnable">
            <summary>
             Set/Get to true to enable a 3D frame for text framer.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTTimePanelMeter">
            <summary>
            Displays Time/Date information in a RTPanelMeter format. It contains a template based on the 
            QCChart2D TimeLabel class that is used to specify the font and  format information associated with 
            the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTTimePanelMeter.timeTemplate">
            <summary>
            Displays the time/date value of the time stamp of the associated RTProcessVar object. It contains a template 
            based on the QCChart2D TimeLabel class that is used to specify the font and time/date format information 
            associated with the panel meter.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTTimePanelMeter.textframe">
            <summary>
            The RTTextFrame is used to display the panel meter text, framing the text using a 3D beveled border.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.ErrorCheck(System.Int32)">
            <summary>
              Checks the RTTimePanelMeter object for common errors. 
            </summary>
            <param name="nerror"> Current error state </param>
            <returns> Returns an error code.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.InitDefaults">
            <summary>
             Initializes default values for the class.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.#ctor">
            <summary>
             The default RTTimePanelMeter constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.Copy(com.quinncurtis.rtgraphnet.RTTimePanelMeter)">
            <summary>
             Copies the source object.
            </summary>
             <param name= "source"> The source object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.Clone">
            <summary>  Returns an object that is a Clone of this RTTimePanelMeter object.
            </summary>
            <returns> Returns a Clone of this RTTimePanelMeter object. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
             This constructor creates a new RTTimePanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTTimePanelMeter object. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTTimePanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTTimePanelMeter object. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.#ctor(com.quinncurtis.chart2dnet.PhysicalCoordinates,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.ChartAttribute)">
            <summary>
             This constructor creates a new RTTimePanelMeter object and 
             scales it to match the specified coordinate system.
            </summary> 
            <param name="transform"> The coordinate system for the new RTTimePanelMeter object. </param>
            <param name="datasource"> The process variable associated with the  bar indicator. </param>
            <param name="attrib"> The color attributes of the panel meter indicator. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.CalcTimeFrameMinWidth(System.Drawing.Graphics)">
            <summary>
             Calculates the minimum frame width to use in in displaying time value strings in a frame.
            </summary>		 
             <param name= "g2"> Specifies the graphics context.  </param>
              <returns> The minimum frame width to use in in displaying time value strings in a frame.  </returns>   
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.DrawRTPanelMeter(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
              Draws the panel meter.  
            </summary>
            <param name="g2"> The graphics context.</param>
            <param name="path"> The current graphics path.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.SetResizeMultiplier(System.Double)">
            <summary>
             Sets the resize multiplier used by the RTPanelMeter object. 
            </summary>
            <param name="multiplier"> Sets the resize multiplier used by the object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTTimePanelMeter.TimeTemplate">
            <summary>
             The TimeLabel template for the panel meter time/date value. All of the text properties associated with
             the panel meter are set using this property. In addition, the format of the time/date value is also set here.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTTimePanelMeter.GetPanelMeterTemplate">
            <summary>
             Get a ChartLabel object representing the TimeTemplate template.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTTimePanelMeter.TextColor">
            <summary>
             Set/Get the text color of the panelmeter.
            </summary>
        </member>
        <member name="T:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame">
            <summary>
            A scroll frame for vertical scrolling.
            The scrolling algorithm used in this software is different that in earlier Quinn-Curtis real-time graphics products. 
            Scrolling plots are no longer updated incrementally whenever the underlying data is updated. Instead, the underlying 
            RTProcessVar data objects are updated as fast as you want. Scrolling graphs (all graphs for that matter) are only 
            updated with the ChartView.UpdateDraw() method is called. What makes scrolling graphs appear to scroll is the scroll 
            frame (RTVerticalScrollFrame). When a scroll frame is updated as a result of the ChartView.UpdateDraw() event, it analyzes the 
            RTSimpleSingleValuePlot and RTGroupMultiValuePlot objects that have been attached to it and creates a coordinate system 
            that matches the current and historical data associated with the plot objects. The plot objects in the scroll frame are 
            drawn into this coordinate system. As data progresses forward in time the coordinate system is constantly being rescaled 
            to include the most recent time values as part of the y-coordinate system. You can control whether or not the starting 
            point of the scroll frame coordinate system remains fixed, whether it advances in sync with the constantly changing end 
            of the scroll frame. Other options allow the x-scale to be constantly rescaled to reflect the current dynamic range of 
            the x-values in the scroll frame.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.maxDisplayHistory">
            <summary>
            The number of points in the display history for the fixed extent scroll modes
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.scrollScaleModeX">
            <summary>
            The scroll mode for the x-axis. Use one of the scroll mode constants:
            RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, RT_AUTOSCALE_X_MINMAX
            </summary>	        
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.scrollScaleModeY">
            <summary>
            The scroll mode for the y-axis. Use one of the scroll mode constants:
            RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_CURRENT_SCALE, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, 
            RT_AUTOSCALE_Y_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
            RT_FIXEDNUMPOINT_AUTOSCROLL
            </summary>	RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.autoScaleRoundXMode">
            <summary>
            The rounding mode for the x-axis. Use one of the AUTOAXES round mode constants:
             AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.autoScaleRoundYMode">
            <summary>
            The rounding mode for the y-axis. Use one of the AUTOAXES round mode constants:
             AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.timeStampMode">
            <summary>
            The time stamp mode for the y-axis. Use one of the time stamp mode constants:
            RT_NOT_MONOTONIC_Y_MODE and RT_MONOTONIC_Y_MODE
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.minSamplesForAutoScale">
            <summary>
            The minimum number of samples before an auto-scale for the y-axis will take place.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.scrollFrameUpdateCount">
            <summary>
            Keeps track of the number of updates for the scrollFrame;
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.scrollRescaleMargin">
            <summary>
            The rescale margin for the scrolling graph. When the coordinate system rescales, as the scrolling graph fills
            the graph, the amount of the rescale is determined by this value.
            </summary>		
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.frameExtent">
            <summary>
            A local variable storing the frame extent .
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.timeMax">
            <summary>
            A local variable storing the frame maximum time value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.timeMin">
            <summary>
            A local variable storing the frame minimum time value.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.autoRescaleFrame">
            <summary>
            Set to true and the frame coordinate system is rescaled every time the Draw method is called, usually in 
            response to the ChartView.UpdateDraw method call. If false the frame is only rescaled when the 
            RTScollFrame.RescaleFrame method is called.
            </summary>
        </member>
        <member name="F:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.autoScaleMinimumXRange">
            <summary>
            Specifies the minimum range to use in the auto-scale of the x-axis
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.InitDefaults">
            <summary>
             Initializes default values for the RTVerticalScrollFrame object.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.Copy(com.quinncurtis.rtgraphnet.RTVerticalScrollFrame)">
            <summary>
              Copies the RTVerticalScrollFrame object. 
            </summary>
            <param name="source"> The source RTVerticalScrollFrame object.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.Clone">
            <summary>
             Returns an object that is a clone of this RTVerticalScrollFrame object. 
            </summary>
            <returns> Returns a clone of this RTVerticalScrollFrame object.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.#ctor">
            <summary>
              The default RTVerticalScrollFrame constructor.
            </summary>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32)">
            <summary>
              This constructor creates a new RTVerticalScrollFrame object that tracks the specified process variable and
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="processvar"> The source process variable. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="scrollmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_CURRENT_SCALE, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, 
              RT_AUTOSCALE_Y_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
              RT_FIXEDNUMPOINT_AUTOSCROLL.	</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.rtgraphnet.RTProcessVar,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32,System.Int32)">
            <summary>
              This constructor creates a new RTVerticalScrollFrame object that tracks the specified process variable and
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="processvar"> The source process variable. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="autoscalexmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode
              constants: RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, RT_AUTOSCALE_X_MINMAX. </param>
            <param name="scrollymode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode
             constants: RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_CURRENT_SCALE, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, 
             RT_AUTOSCALE_Y_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
             RT_FIXEDNUMPOINT_AUTOSCROLL </param>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32)">
            <summary>
              This constructor creates a new RTVerticalScrollFrame object
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="scrollmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode constants:
             RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_CURRENT_SCALE, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, 
             RT_AUTOSCALE_Y_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
             RT_FIXEDNUMPOINT_AUTOSCROLL. </param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.#ctor(com.quinncurtis.chart2dnet.ChartView,com.quinncurtis.chart2dnet.PhysicalCoordinates,System.Int32,System.Int32)">
            <summary>
              This constructor creates a new RTVerticalScrollFrame object
              that is initialized using the specified initial scale. 
            </summary>
            <param name="component"> This ChartView component the scroll frame is placed in. </param>
            <param name="initialscale"> A coordinate system that serves as the initial scale for the scroll frame. </param>
            <param name="autoscalexmode"> Specifies the scroll mode of the scroll frame. Use one of the scroll 
              mode constants: RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, RT_AUTOSCALE_X_MINMAX. </param>
            <param name="scrollymode"> Specifies the scroll mode of the scroll frame. Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_CURRENT_SCALE, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, 
              RT_AUTOSCALE_Y_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
              RT_FIXEDNUMPOINT_AUTOSCROLL. </param>	
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.CalcFrameExtent(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              Calculates the frame extent.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.RescaleAxesToCurrentTransform">
            <summary>
              Rescales all of the axis objects in the RTVerticalScrollFrame to match the scale of the current transform.
            </summary>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.RescaleAxesToTransform(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              Rescales all of the axis objects in the RTVerticalScrollFrame to match the scale of the new transform.
            </summary>		
            <param name="transform"> A new coordinate system for the scroll frame.</param>		
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.SaveAxesIntercepts(com.quinncurtis.chart2dnet.PhysicalCoordinates)">
            <summary>
              Saves the normalized values of all of the axis intercepts.
            </summary>		
            <param name="transform"> A new coordinate system for the scroll frame.</param>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetProcessVarMaxCount">
            <summary>
             Returns the maximum number of data points in the datasets of the process variables in the scroll frame.
            </summary>
             <returns>  Returns the maximum number of data points in the datasets of the process variables in 
             the scroll frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetProcessVarMinCount">
            <summary>
             Returns the minimum number of data points in the datasets of the process variables in the scroll frame.
            </summary>
             <returns>  Returns the minimum number of data points in the datasets of the process variables in the 
             scroll frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetProcessVarTimeValue(System.Int32)">
            <summary>
             Returns the millisecond time value associated with a specific backcount into the rtDataSource. It
             checks all process variables in the processVar list and returns the minimum time value at the backcount
             index for all process variables.
            </summary>
            <param name="backcount"> Looks for the minimum value within the most recent backcount values.</param>		
             <returns>  Returns the millisecond time value associated with a specific backcount into the rtDataSource. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMaxProcessVarTimeValue(System.Int32)">
            <summary>
             Returns the maximum millisecond time value within a specific interval of the process variables in the 
             rtDataSource. It checks all process variables in the processVar list and returns the maximum time 
             value within the backcount interval for all process variables.
            </summary>
            <param name="backcount"> Looks for the maximum value within the most recent backcount values.</param>		
             <returns> Returns the maximum millisecond time value within a specific interval of the process 
             variables in the rtDataSource. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMinProcessVarTimeValue(System.Int32)">
            <summary>
             Returns the minimum millisecond time value within a specific interval of the process variables in 
             the rtDataSource. It checks all process variables in the processVar list and returns the minimum time
             value within the backcount interval for all process variables.
            </summary>
            <param name="backcount"> Looks for the minimum value within the most recent backcount values.</param>		
             <returns>  Returns the minimum millisecond time value within a specific interval of the process 
             variables in the rtDataSource. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMaxProcessVarTimeValue">
            <summary>
             Returns the maximum millisecond time value of the most recent values of the process variables in 
             the rtDataSource. 
            </summary>
             <returns>  Returns the maximum millisecond time value of the most recent values of the process 
             variables in the rtDataSource.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMinProcessVarTimeValue">
            <summary>
             Returns the minimum millisecond time value of the most recent values of the process variables in the
              rtDataSource. 
            </summary>
             <returns>  Returns the minimum millisecond time value of the most recent values of the process 
             variables in the rtDataSource.  </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMaxProcessVarValue(System.Double)">
            <summary>
              Runs through process variable datasets and searches out the maximum process value, starting at 
              the time startx.
            </summary>
            <param name="starty"> The start time in milliseconds for the search for the maximum process variable.</param>		
             <returns> Returns the maximum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMaxProcessVarValue(System.Int32)">
            <summary>
              Runs through process variable datasets and searches out the maximum process value, starting at the 
              time startx.
            </summary>
            <param name="backcount"> Looks for the maximum value within the most recent backcount values.</param>		
             <returns> Returns the maximum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMinProcessVarValue(System.Double)">
            <summary>
              Runs through process variable datasets and searches out the minimum process value, starting 
              at the time startx.
            </summary>
            <param name="starty"> The start time in milliseconds for the search for the minimum process variable.</param>		
             <returns> Returns the minimum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.GetMinProcessVarValue(System.Int32)">
            <summary>
              Runs through process variable datasets and searches out the minimum process value, starting at the 
              time startx.
            </summary>
            <param name="backcount"> Looks for the maximum value within the most recent backcount values.</param>		
             <returns> Returns the maximum process variable value in the specified time frame. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.RescaleFrame(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Rescale the frame using the specified minimum and maximum values.
            </summary>
            <param name="minx"> The minimum value sfor the x-scale.</param>		
            <param name="miny"> The minimum value sfor the y-scale.</param>		
            <param name="maxx"> The maximum value sfor the x-scale.</param>		
            <param name="maxy"> The maximum value sfor the y-scale.</param>		
             <returns> Returns true if the coordinate system is rescaled. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.RescaleFrame">
            <summary>
              Runs through the process variables and checks to see if the current coordinate system needs to be rescaled.
              It is rescaled if needed.
            </summary>
             <returns> Returns true if the coordinate system is rescaled. </returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.Draw(System.Drawing.Graphics)">
            <summary>
              The draw method for this class.  
            </summary>
            <param name="g2"> The graphics context.</param>
            
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.CalcNearestPoint(com.quinncurtis.chart2dnet.Point2D,System.Int32,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Not supported.
            </summary>
            <param name="testpoint"> The test point for the nearness calculation. </param>
            <param name="nmode"> Specifies the algorithm used in the nearness calculation. </param>
            <param name="nearestpoint"> Returns the parameters of the nearest point. </param>
            <returns> Returns true if a valid data point is found and returned.</returns>
        </member>
        <member name="M:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.CheckIntersection(com.quinncurtis.chart2dnet.Point2D,com.quinncurtis.chart2dnet.NearestPointData)">
            <summary>
              Returns true if the test point intersects the object (Not supported). 
            </summary>
            <param name="testpoint"> The test point </param>
            <param name="np"> Nearest point information for data based objects. </param>
            <returns> Returns true if the test point intersects one of objects.</returns>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.ScrollRescaleMargin">
            <summary>
             Get/Set the scroll rescale margin. 
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.ScrollScaleModeX">
            <summary>
             Get/Set the scrolling mode for the x-coordinate. Use one of the vertical scroll mode constants:
              RT_NO_AUTOSCALE_X, RT_AUTOSCALE_X_MIN, RT_AUTOSCALE_X_MAX, RT_AUTOSCALE_X_MINMAX
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.ScrollScaleModeY">
            <summary>
             Get/Set the scrolling mode for the y-coordinate. Use one of the scroll mode constants:
               Use one of the scroll mode constants:
              RT_NO_AUTOSCALE_Y, RT_AUTOSCALE_Y_CURRENT_SCALE, RT_AUTOSCALE_Y_MIN, RT_AUTOSCALE_Y_MAX, 
              RT_AUTOSCALE_Y_MINMAX, RT_FIXEDEXTENT_MOVINGSTART_AUTOSCROLL, RT_MAXEXTENT_FIXEDSTART_AUTOSCROLL, 
              RT_FIXEDNUMPOINT_AUTOSCROLL.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.AutoScaleRoundXMode">
            <summary>
             Get/Set the auto-scale round mode for the x-coordinate. Use one of the AUTOAXES round mode constants:
              AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.AutoScaleRoundYMode">
            <summary>
             Get/Set the auto-scale mode for the y-coordinate. Use one of the AUTOAXES round mode constants:
              AUTOAXES_EXACT, AUTOAXES_NEAR, AUTOAXES_FAR.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.TimeStampMode">
            <summary>
             Get/Set the time stamp mode for the time values in the process variables. Use one of the time stamp mode 
             constants: RT_NOT_MONOTONIC_Y_MODE and RT_MONOTONIC_Y_MODE
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.MinSamplesForAutoScale">
            <summary>
             Get/Set the minimum number of samples that need to be in the dataset before an auto-scale operation is 
             carried out. This prevents the first datapoints from generating an arbitrarily small range.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.MaxDisplayHistory">
            <summary>
             Get/Set the maximum number of points displayed.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.AutoRecaleFrame">
            <summary>
            Get/Set to true and the frame coordinate system is rescaled evertime the Draw method is called, usually in 
            response to the ChartView.UpdateDraw method call. If false the frame is only rescaled when the 
            RTScollFrame.RescaleFrame method is called.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.FrameExtent">
            <summary>
            Get/Set the frame extent.
            </summary>
        </member>
        <member name="P:com.quinncurtis.rtgraphnet.RTVerticalScrollFrame.AutoScaleMinimumXRange">
            <summary>
            Get/Set the scroll frames minimum auto-scale for the x-axis
            </summary>
        </member>
    </members>
</doc>
